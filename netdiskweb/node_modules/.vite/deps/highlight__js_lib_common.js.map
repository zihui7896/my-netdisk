{
  "version": 3,
  "sources": ["../../highlight.js/lib/languages/xml.js", "../../highlight.js/lib/languages/bash.js", "../../highlight.js/lib/languages/c.js", "../../highlight.js/lib/languages/cpp.js", "../../highlight.js/lib/languages/csharp.js", "../../highlight.js/lib/languages/css.js", "../../highlight.js/lib/languages/markdown.js", "../../highlight.js/lib/languages/diff.js", "../../highlight.js/lib/languages/ruby.js", "../../highlight.js/lib/languages/go.js", "../../highlight.js/lib/languages/graphql.js", "../../highlight.js/lib/languages/ini.js", "../../highlight.js/lib/languages/java.js", "../../highlight.js/lib/languages/javascript.js", "../../highlight.js/lib/languages/json.js", "../../highlight.js/lib/languages/kotlin.js", "../../highlight.js/lib/languages/less.js", "../../highlight.js/lib/languages/lua.js", "../../highlight.js/lib/languages/makefile.js", "../../highlight.js/lib/languages/perl.js", "../../highlight.js/lib/languages/objectivec.js", "../../highlight.js/lib/languages/php.js", "../../highlight.js/lib/languages/php-template.js", "../../highlight.js/lib/languages/plaintext.js", "../../highlight.js/lib/languages/python.js", "../../highlight.js/lib/languages/python-repl.js", "../../highlight.js/lib/languages/r.js", "../../highlight.js/lib/languages/rust.js", "../../highlight.js/lib/languages/scss.js", "../../highlight.js/lib/languages/shell.js", "../../highlight.js/lib/languages/sql.js", "../../highlight.js/lib/languages/swift.js", "../../highlight.js/lib/languages/yaml.js", "../../highlight.js/lib/languages/typescript.js", "../../highlight.js/lib/languages/vbnet.js", "../../highlight.js/lib/languages/wasm.js", "../../highlight.js/lib/common.js", "../../highlight.js/es/common.js"],
  "sourcesContent": ["/*\r\nLanguage: HTML, XML\r\nWebsite: https://www.w3.org/XML/\r\nCategory: common, web\r\nAudit: 2020\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction xml(hljs) {\r\n  const regex = hljs.regex;\r\n  // XML names can have the following additional letters: https://www.w3.org/TR/xml/#NT-NameChar\r\n  // OTHER_NAME_CHARS = /[:\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]/;\r\n  // Element names start with NAME_START_CHAR followed by optional other Unicode letters, ASCII digits, hyphens, underscores, and periods\r\n  // const TAG_NAME_RE = regex.concat(/[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/, regex.optional(/[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*:/), /[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*/);;\r\n  // const XML_IDENT_RE = /[A-Z_a-z:\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]+/;\r\n  // const TAG_NAME_RE = regex.concat(/[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/, regex.optional(/[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*:/), /[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*/);\r\n  // however, to cater for performance and more Unicode support rely simply on the Unicode letter class\r\n  const TAG_NAME_RE = regex.concat(/[\\p{L}_]/u, regex.optional(/[\\p{L}0-9_.-]*:/u), /[\\p{L}0-9_.-]*/u);\r\n  const XML_IDENT_RE = /[\\p{L}0-9._:-]+/u;\r\n  const XML_ENTITIES = {\r\n    className: 'symbol',\r\n    begin: /&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/\r\n  };\r\n  const XML_META_KEYWORDS = {\r\n    begin: /\\s/,\r\n    contains: [\r\n      {\r\n        className: 'keyword',\r\n        begin: /#?[a-z_][a-z1-9_-]+/,\r\n        illegal: /\\n/\r\n      }\r\n    ]\r\n  };\r\n  const XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {\r\n    begin: /\\(/,\r\n    end: /\\)/\r\n  });\r\n  const APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, { className: 'string' });\r\n  const QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, { className: 'string' });\r\n  const TAG_INTERNALS = {\r\n    endsWithParent: true,\r\n    illegal: /</,\r\n    relevance: 0,\r\n    contains: [\r\n      {\r\n        className: 'attr',\r\n        begin: XML_IDENT_RE,\r\n        relevance: 0\r\n      },\r\n      {\r\n        begin: /=\\s*/,\r\n        relevance: 0,\r\n        contains: [\r\n          {\r\n            className: 'string',\r\n            endsParent: true,\r\n            variants: [\r\n              {\r\n                begin: /\"/,\r\n                end: /\"/,\r\n                contains: [ XML_ENTITIES ]\r\n              },\r\n              {\r\n                begin: /'/,\r\n                end: /'/,\r\n                contains: [ XML_ENTITIES ]\r\n              },\r\n              { begin: /[^\\s\"'=<>`]+/ }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n  return {\r\n    name: 'HTML, XML',\r\n    aliases: [\r\n      'html',\r\n      'xhtml',\r\n      'rss',\r\n      'atom',\r\n      'xjb',\r\n      'xsd',\r\n      'xsl',\r\n      'plist',\r\n      'wsf',\r\n      'svg'\r\n    ],\r\n    case_insensitive: true,\r\n    unicodeRegex: true,\r\n    contains: [\r\n      {\r\n        className: 'meta',\r\n        begin: /<![a-z]/,\r\n        end: />/,\r\n        relevance: 10,\r\n        contains: [\r\n          XML_META_KEYWORDS,\r\n          QUOTE_META_STRING_MODE,\r\n          APOS_META_STRING_MODE,\r\n          XML_META_PAR_KEYWORDS,\r\n          {\r\n            begin: /\\[/,\r\n            end: /\\]/,\r\n            contains: [\r\n              {\r\n                className: 'meta',\r\n                begin: /<![a-z]/,\r\n                end: />/,\r\n                contains: [\r\n                  XML_META_KEYWORDS,\r\n                  XML_META_PAR_KEYWORDS,\r\n                  QUOTE_META_STRING_MODE,\r\n                  APOS_META_STRING_MODE\r\n                ]\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      hljs.COMMENT(\r\n        /<!--/,\r\n        /-->/,\r\n        { relevance: 10 }\r\n      ),\r\n      {\r\n        begin: /<!\\[CDATA\\[/,\r\n        end: /\\]\\]>/,\r\n        relevance: 10\r\n      },\r\n      XML_ENTITIES,\r\n      // xml processing instructions\r\n      {\r\n        className: 'meta',\r\n        end: /\\?>/,\r\n        variants: [\r\n          {\r\n            begin: /<\\?xml/,\r\n            relevance: 10,\r\n            contains: [\r\n              QUOTE_META_STRING_MODE\r\n            ]\r\n          },\r\n          {\r\n            begin: /<\\?[a-z][a-z0-9]+/,\r\n          }\r\n        ]\r\n\r\n      },\r\n      {\r\n        className: 'tag',\r\n        /*\r\n        The lookahead pattern (?=...) ensures that 'begin' only matches\r\n        '<style' as a single word, followed by a whitespace or an\r\n        ending bracket.\r\n        */\r\n        begin: /<style(?=\\s|>)/,\r\n        end: />/,\r\n        keywords: { name: 'style' },\r\n        contains: [ TAG_INTERNALS ],\r\n        starts: {\r\n          end: /<\\/style>/,\r\n          returnEnd: true,\r\n          subLanguage: [\r\n            'css',\r\n            'xml'\r\n          ]\r\n        }\r\n      },\r\n      {\r\n        className: 'tag',\r\n        // See the comment in the <style tag about the lookahead pattern\r\n        begin: /<script(?=\\s|>)/,\r\n        end: />/,\r\n        keywords: { name: 'script' },\r\n        contains: [ TAG_INTERNALS ],\r\n        starts: {\r\n          end: /<\\/script>/,\r\n          returnEnd: true,\r\n          subLanguage: [\r\n            'javascript',\r\n            'handlebars',\r\n            'xml'\r\n          ]\r\n        }\r\n      },\r\n      // we need this for now for jSX\r\n      {\r\n        className: 'tag',\r\n        begin: /<>|<\\/>/\r\n      },\r\n      // open tag\r\n      {\r\n        className: 'tag',\r\n        begin: regex.concat(\r\n          /</,\r\n          regex.lookahead(regex.concat(\r\n            TAG_NAME_RE,\r\n            // <tag/>\r\n            // <tag>\r\n            // <tag ...\r\n            regex.either(/\\/>/, />/, /\\s/)\r\n          ))\r\n        ),\r\n        end: /\\/?>/,\r\n        contains: [\r\n          {\r\n            className: 'name',\r\n            begin: TAG_NAME_RE,\r\n            relevance: 0,\r\n            starts: TAG_INTERNALS\r\n          }\r\n        ]\r\n      },\r\n      // close tag\r\n      {\r\n        className: 'tag',\r\n        begin: regex.concat(\r\n          /<\\//,\r\n          regex.lookahead(regex.concat(\r\n            TAG_NAME_RE, />/\r\n          ))\r\n        ),\r\n        contains: [\r\n          {\r\n            className: 'name',\r\n            begin: TAG_NAME_RE,\r\n            relevance: 0\r\n          },\r\n          {\r\n            begin: />/,\r\n            relevance: 0,\r\n            endsParent: true\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = xml;\r\n", "/*\r\nLanguage: Bash\r\nAuthor: vah <vahtenberg@gmail.com>\r\nContributrors: Benjamin Pannell <contact@sierrasoftworks.com>\r\nWebsite: https://www.gnu.org/software/bash/\r\nCategory: common\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction bash(hljs) {\r\n  const regex = hljs.regex;\r\n  const VAR = {};\r\n  const BRACED_VAR = {\r\n    begin: /\\$\\{/,\r\n    end: /\\}/,\r\n    contains: [\r\n      \"self\",\r\n      {\r\n        begin: /:-/,\r\n        contains: [ VAR ]\r\n      } // default values\r\n    ]\r\n  };\r\n  Object.assign(VAR, {\r\n    className: 'variable',\r\n    variants: [\r\n      { begin: regex.concat(/\\$[\\w\\d#@][\\w\\d_]*/,\r\n        // negative look-ahead tries to avoid matching patterns that are not\r\n        // Perl at all like $ident$, @ident@, etc.\r\n        `(?![\\\\w\\\\d])(?![$])`) },\r\n      BRACED_VAR\r\n    ]\r\n  });\r\n\r\n  const SUBST = {\r\n    className: 'subst',\r\n    begin: /\\$\\(/,\r\n    end: /\\)/,\r\n    contains: [ hljs.BACKSLASH_ESCAPE ]\r\n  };\r\n  const HERE_DOC = {\r\n    begin: /<<-?\\s*(?=\\w+)/,\r\n    starts: { contains: [\r\n      hljs.END_SAME_AS_BEGIN({\r\n        begin: /(\\w+)/,\r\n        end: /(\\w+)/,\r\n        className: 'string'\r\n      })\r\n    ] }\r\n  };\r\n  const QUOTE_STRING = {\r\n    className: 'string',\r\n    begin: /\"/,\r\n    end: /\"/,\r\n    contains: [\r\n      hljs.BACKSLASH_ESCAPE,\r\n      VAR,\r\n      SUBST\r\n    ]\r\n  };\r\n  SUBST.contains.push(QUOTE_STRING);\r\n  const ESCAPED_QUOTE = {\r\n    className: '',\r\n    begin: /\\\\\"/\r\n\r\n  };\r\n  const APOS_STRING = {\r\n    className: 'string',\r\n    begin: /'/,\r\n    end: /'/\r\n  };\r\n  const ARITHMETIC = {\r\n    begin: /\\$?\\(\\(/,\r\n    end: /\\)\\)/,\r\n    contains: [\r\n      {\r\n        begin: /\\d+#[0-9a-f]+/,\r\n        className: \"number\"\r\n      },\r\n      hljs.NUMBER_MODE,\r\n      VAR\r\n    ]\r\n  };\r\n  const SH_LIKE_SHELLS = [\r\n    \"fish\",\r\n    \"bash\",\r\n    \"zsh\",\r\n    \"sh\",\r\n    \"csh\",\r\n    \"ksh\",\r\n    \"tcsh\",\r\n    \"dash\",\r\n    \"scsh\",\r\n  ];\r\n  const KNOWN_SHEBANG = hljs.SHEBANG({\r\n    binary: `(${SH_LIKE_SHELLS.join(\"|\")})`,\r\n    relevance: 10\r\n  });\r\n  const FUNCTION = {\r\n    className: 'function',\r\n    begin: /\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,\r\n    returnBegin: true,\r\n    contains: [ hljs.inherit(hljs.TITLE_MODE, { begin: /\\w[\\w\\d_]*/ }) ],\r\n    relevance: 0\r\n  };\r\n\r\n  const KEYWORDS = [\r\n    \"if\",\r\n    \"then\",\r\n    \"else\",\r\n    \"elif\",\r\n    \"fi\",\r\n    \"for\",\r\n    \"while\",\r\n    \"until\",\r\n    \"in\",\r\n    \"do\",\r\n    \"done\",\r\n    \"case\",\r\n    \"esac\",\r\n    \"function\",\r\n    \"select\"\r\n  ];\r\n\r\n  const LITERALS = [\r\n    \"true\",\r\n    \"false\"\r\n  ];\r\n\r\n  // to consume paths to prevent keyword matches inside them\r\n  const PATH_MODE = { match: /(\\/[a-z._-]+)+/ };\r\n\r\n  // http://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\r\n  const SHELL_BUILT_INS = [\r\n    \"break\",\r\n    \"cd\",\r\n    \"continue\",\r\n    \"eval\",\r\n    \"exec\",\r\n    \"exit\",\r\n    \"export\",\r\n    \"getopts\",\r\n    \"hash\",\r\n    \"pwd\",\r\n    \"readonly\",\r\n    \"return\",\r\n    \"shift\",\r\n    \"test\",\r\n    \"times\",\r\n    \"trap\",\r\n    \"umask\",\r\n    \"unset\"\r\n  ];\r\n\r\n  const BASH_BUILT_INS = [\r\n    \"alias\",\r\n    \"bind\",\r\n    \"builtin\",\r\n    \"caller\",\r\n    \"command\",\r\n    \"declare\",\r\n    \"echo\",\r\n    \"enable\",\r\n    \"help\",\r\n    \"let\",\r\n    \"local\",\r\n    \"logout\",\r\n    \"mapfile\",\r\n    \"printf\",\r\n    \"read\",\r\n    \"readarray\",\r\n    \"source\",\r\n    \"type\",\r\n    \"typeset\",\r\n    \"ulimit\",\r\n    \"unalias\"\r\n  ];\r\n\r\n  const ZSH_BUILT_INS = [\r\n    \"autoload\",\r\n    \"bg\",\r\n    \"bindkey\",\r\n    \"bye\",\r\n    \"cap\",\r\n    \"chdir\",\r\n    \"clone\",\r\n    \"comparguments\",\r\n    \"compcall\",\r\n    \"compctl\",\r\n    \"compdescribe\",\r\n    \"compfiles\",\r\n    \"compgroups\",\r\n    \"compquote\",\r\n    \"comptags\",\r\n    \"comptry\",\r\n    \"compvalues\",\r\n    \"dirs\",\r\n    \"disable\",\r\n    \"disown\",\r\n    \"echotc\",\r\n    \"echoti\",\r\n    \"emulate\",\r\n    \"fc\",\r\n    \"fg\",\r\n    \"float\",\r\n    \"functions\",\r\n    \"getcap\",\r\n    \"getln\",\r\n    \"history\",\r\n    \"integer\",\r\n    \"jobs\",\r\n    \"kill\",\r\n    \"limit\",\r\n    \"log\",\r\n    \"noglob\",\r\n    \"popd\",\r\n    \"print\",\r\n    \"pushd\",\r\n    \"pushln\",\r\n    \"rehash\",\r\n    \"sched\",\r\n    \"setcap\",\r\n    \"setopt\",\r\n    \"stat\",\r\n    \"suspend\",\r\n    \"ttyctl\",\r\n    \"unfunction\",\r\n    \"unhash\",\r\n    \"unlimit\",\r\n    \"unsetopt\",\r\n    \"vared\",\r\n    \"wait\",\r\n    \"whence\",\r\n    \"where\",\r\n    \"which\",\r\n    \"zcompile\",\r\n    \"zformat\",\r\n    \"zftp\",\r\n    \"zle\",\r\n    \"zmodload\",\r\n    \"zparseopts\",\r\n    \"zprof\",\r\n    \"zpty\",\r\n    \"zregexparse\",\r\n    \"zsocket\",\r\n    \"zstyle\",\r\n    \"ztcp\"\r\n  ];\r\n\r\n  const GNU_CORE_UTILS = [\r\n    \"chcon\",\r\n    \"chgrp\",\r\n    \"chown\",\r\n    \"chmod\",\r\n    \"cp\",\r\n    \"dd\",\r\n    \"df\",\r\n    \"dir\",\r\n    \"dircolors\",\r\n    \"ln\",\r\n    \"ls\",\r\n    \"mkdir\",\r\n    \"mkfifo\",\r\n    \"mknod\",\r\n    \"mktemp\",\r\n    \"mv\",\r\n    \"realpath\",\r\n    \"rm\",\r\n    \"rmdir\",\r\n    \"shred\",\r\n    \"sync\",\r\n    \"touch\",\r\n    \"truncate\",\r\n    \"vdir\",\r\n    \"b2sum\",\r\n    \"base32\",\r\n    \"base64\",\r\n    \"cat\",\r\n    \"cksum\",\r\n    \"comm\",\r\n    \"csplit\",\r\n    \"cut\",\r\n    \"expand\",\r\n    \"fmt\",\r\n    \"fold\",\r\n    \"head\",\r\n    \"join\",\r\n    \"md5sum\",\r\n    \"nl\",\r\n    \"numfmt\",\r\n    \"od\",\r\n    \"paste\",\r\n    \"ptx\",\r\n    \"pr\",\r\n    \"sha1sum\",\r\n    \"sha224sum\",\r\n    \"sha256sum\",\r\n    \"sha384sum\",\r\n    \"sha512sum\",\r\n    \"shuf\",\r\n    \"sort\",\r\n    \"split\",\r\n    \"sum\",\r\n    \"tac\",\r\n    \"tail\",\r\n    \"tr\",\r\n    \"tsort\",\r\n    \"unexpand\",\r\n    \"uniq\",\r\n    \"wc\",\r\n    \"arch\",\r\n    \"basename\",\r\n    \"chroot\",\r\n    \"date\",\r\n    \"dirname\",\r\n    \"du\",\r\n    \"echo\",\r\n    \"env\",\r\n    \"expr\",\r\n    \"factor\",\r\n    // \"false\", // keyword literal already\r\n    \"groups\",\r\n    \"hostid\",\r\n    \"id\",\r\n    \"link\",\r\n    \"logname\",\r\n    \"nice\",\r\n    \"nohup\",\r\n    \"nproc\",\r\n    \"pathchk\",\r\n    \"pinky\",\r\n    \"printenv\",\r\n    \"printf\",\r\n    \"pwd\",\r\n    \"readlink\",\r\n    \"runcon\",\r\n    \"seq\",\r\n    \"sleep\",\r\n    \"stat\",\r\n    \"stdbuf\",\r\n    \"stty\",\r\n    \"tee\",\r\n    \"test\",\r\n    \"timeout\",\r\n    // \"true\", // keyword literal already\r\n    \"tty\",\r\n    \"uname\",\r\n    \"unlink\",\r\n    \"uptime\",\r\n    \"users\",\r\n    \"who\",\r\n    \"whoami\",\r\n    \"yes\"\r\n  ];\r\n\r\n  return {\r\n    name: 'Bash',\r\n    aliases: [ 'sh' ],\r\n    keywords: {\r\n      $pattern: /\\b[a-z][a-z0-9._-]+\\b/,\r\n      keyword: KEYWORDS,\r\n      literal: LITERALS,\r\n      built_in: [\r\n        ...SHELL_BUILT_INS,\r\n        ...BASH_BUILT_INS,\r\n        // Shell modifiers\r\n        \"set\",\r\n        \"shopt\",\r\n        ...ZSH_BUILT_INS,\r\n        ...GNU_CORE_UTILS\r\n      ]\r\n    },\r\n    contains: [\r\n      KNOWN_SHEBANG, // to catch known shells and boost relevancy\r\n      hljs.SHEBANG(), // to catch unknown shells but still highlight the shebang\r\n      FUNCTION,\r\n      ARITHMETIC,\r\n      hljs.HASH_COMMENT_MODE,\r\n      HERE_DOC,\r\n      PATH_MODE,\r\n      QUOTE_STRING,\r\n      ESCAPED_QUOTE,\r\n      APOS_STRING,\r\n      VAR\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = bash;\r\n", "/*\r\nLanguage: C\r\nCategory: common, system\r\nWebsite: https://en.wikipedia.org/wiki/C_(programming_language)\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction c(hljs) {\r\n  const regex = hljs.regex;\r\n  // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does\r\n  // not include such support nor can we be sure all the grammars depending\r\n  // on it would desire this behavior\r\n  const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', { contains: [ { begin: /\\\\\\n/ } ] });\r\n  const DECLTYPE_AUTO_RE = 'decltype\\\\(auto\\\\)';\r\n  const NAMESPACE_RE = '[a-zA-Z_]\\\\w*::';\r\n  const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';\r\n  const FUNCTION_TYPE_RE = '('\r\n    + DECLTYPE_AUTO_RE + '|'\r\n    + regex.optional(NAMESPACE_RE)\r\n    + '[a-zA-Z_]\\\\w*' + regex.optional(TEMPLATE_ARGUMENT_RE)\r\n  + ')';\r\n\r\n\r\n  const TYPES = {\r\n    className: 'type',\r\n    variants: [\r\n      { begin: '\\\\b[a-z\\\\d_]*_t\\\\b' },\r\n      { match: /\\batomic_[a-z]{3,6}\\b/ }\r\n    ]\r\n\r\n  };\r\n\r\n  // https://en.cppreference.com/w/cpp/language/escape\r\n  // \\\\ \\x \\xFF \\u2837 \\u00323747 \\374\r\n  const CHARACTER_ESCAPES = '\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)';\r\n  const STRINGS = {\r\n    className: 'string',\r\n    variants: [\r\n      {\r\n        begin: '(u8?|U|L)?\"',\r\n        end: '\"',\r\n        illegal: '\\\\n',\r\n        contains: [ hljs.BACKSLASH_ESCAPE ]\r\n      },\r\n      {\r\n        begin: '(u8?|U|L)?\\'(' + CHARACTER_ESCAPES + \"|.)\",\r\n        end: '\\'',\r\n        illegal: '.'\r\n      },\r\n      hljs.END_SAME_AS_BEGIN({\r\n        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\r\n        end: /\\)([^()\\\\ ]{0,16})\"/\r\n      })\r\n    ]\r\n  };\r\n\r\n  const NUMBERS = {\r\n    className: 'number',\r\n    variants: [\r\n      { begin: '\\\\b(0b[01\\']+)' },\r\n      { begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)' },\r\n      { begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)' }\r\n    ],\r\n    relevance: 0\r\n  };\r\n\r\n  const PREPROCESSOR = {\r\n    className: 'meta',\r\n    begin: /#\\s*[a-z]+\\b/,\r\n    end: /$/,\r\n    keywords: { keyword:\r\n        'if else elif endif define undef warning error line '\r\n        + 'pragma _Pragma ifdef ifndef include' },\r\n    contains: [\r\n      {\r\n        begin: /\\\\\\n/,\r\n        relevance: 0\r\n      },\r\n      hljs.inherit(STRINGS, { className: 'string' }),\r\n      {\r\n        className: 'string',\r\n        begin: /<.*?>/\r\n      },\r\n      C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE\r\n    ]\r\n  };\r\n\r\n  const TITLE_MODE = {\r\n    className: 'title',\r\n    begin: regex.optional(NAMESPACE_RE) + hljs.IDENT_RE,\r\n    relevance: 0\r\n  };\r\n\r\n  const FUNCTION_TITLE = regex.optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\\\s*\\\\(';\r\n\r\n  const C_KEYWORDS = [\r\n    \"asm\",\r\n    \"auto\",\r\n    \"break\",\r\n    \"case\",\r\n    \"continue\",\r\n    \"default\",\r\n    \"do\",\r\n    \"else\",\r\n    \"enum\",\r\n    \"extern\",\r\n    \"for\",\r\n    \"fortran\",\r\n    \"goto\",\r\n    \"if\",\r\n    \"inline\",\r\n    \"register\",\r\n    \"restrict\",\r\n    \"return\",\r\n    \"sizeof\",\r\n    \"struct\",\r\n    \"switch\",\r\n    \"typedef\",\r\n    \"union\",\r\n    \"volatile\",\r\n    \"while\",\r\n    \"_Alignas\",\r\n    \"_Alignof\",\r\n    \"_Atomic\",\r\n    \"_Generic\",\r\n    \"_Noreturn\",\r\n    \"_Static_assert\",\r\n    \"_Thread_local\",\r\n    // aliases\r\n    \"alignas\",\r\n    \"alignof\",\r\n    \"noreturn\",\r\n    \"static_assert\",\r\n    \"thread_local\",\r\n    // not a C keyword but is, for all intents and purposes, treated exactly like one.\r\n    \"_Pragma\"\r\n  ];\r\n\r\n  const C_TYPES = [\r\n    \"float\",\r\n    \"double\",\r\n    \"signed\",\r\n    \"unsigned\",\r\n    \"int\",\r\n    \"short\",\r\n    \"long\",\r\n    \"char\",\r\n    \"void\",\r\n    \"_Bool\",\r\n    \"_Complex\",\r\n    \"_Imaginary\",\r\n    \"_Decimal32\",\r\n    \"_Decimal64\",\r\n    \"_Decimal128\",\r\n    // modifiers\r\n    \"const\",\r\n    \"static\",\r\n    // aliases\r\n    \"complex\",\r\n    \"bool\",\r\n    \"imaginary\"\r\n  ];\r\n\r\n  const KEYWORDS = {\r\n    keyword: C_KEYWORDS,\r\n    type: C_TYPES,\r\n    literal: 'true false NULL',\r\n    // TODO: apply hinting work similar to what was done in cpp.js\r\n    built_in: 'std string wstring cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream '\r\n      + 'auto_ptr deque list queue stack vector map set pair bitset multiset multimap unordered_set '\r\n      + 'unordered_map unordered_multiset unordered_multimap priority_queue make_pair array shared_ptr abort terminate abs acos '\r\n      + 'asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp '\r\n      + 'fscanf future isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper '\r\n      + 'isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow '\r\n      + 'printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp '\r\n      + 'strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan '\r\n      + 'vfprintf vprintf vsprintf endl initializer_list unique_ptr',\r\n  };\r\n\r\n  const EXPRESSION_CONTAINS = [\r\n    PREPROCESSOR,\r\n    TYPES,\r\n    C_LINE_COMMENT_MODE,\r\n    hljs.C_BLOCK_COMMENT_MODE,\r\n    NUMBERS,\r\n    STRINGS\r\n  ];\r\n\r\n  const EXPRESSION_CONTEXT = {\r\n    // This mode covers expression context where we can't expect a function\r\n    // definition and shouldn't highlight anything that looks like one:\r\n    // `return some()`, `else if()`, `(x*sum(1, 2))`\r\n    variants: [\r\n      {\r\n        begin: /=/,\r\n        end: /;/\r\n      },\r\n      {\r\n        begin: /\\(/,\r\n        end: /\\)/\r\n      },\r\n      {\r\n        beginKeywords: 'new throw return else',\r\n        end: /;/\r\n      }\r\n    ],\r\n    keywords: KEYWORDS,\r\n    contains: EXPRESSION_CONTAINS.concat([\r\n      {\r\n        begin: /\\(/,\r\n        end: /\\)/,\r\n        keywords: KEYWORDS,\r\n        contains: EXPRESSION_CONTAINS.concat([ 'self' ]),\r\n        relevance: 0\r\n      }\r\n    ]),\r\n    relevance: 0\r\n  };\r\n\r\n  const FUNCTION_DECLARATION = {\r\n    begin: '(' + FUNCTION_TYPE_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\r\n    returnBegin: true,\r\n    end: /[{;=]/,\r\n    excludeEnd: true,\r\n    keywords: KEYWORDS,\r\n    illegal: /[^\\w\\s\\*&:<>.]/,\r\n    contains: [\r\n      { // to prevent it from being confused as the function title\r\n        begin: DECLTYPE_AUTO_RE,\r\n        keywords: KEYWORDS,\r\n        relevance: 0\r\n      },\r\n      {\r\n        begin: FUNCTION_TITLE,\r\n        returnBegin: true,\r\n        contains: [ hljs.inherit(TITLE_MODE, { className: \"title.function\" }) ],\r\n        relevance: 0\r\n      },\r\n      // allow for multiple declarations, e.g.:\r\n      // extern void f(int), g(char);\r\n      {\r\n        relevance: 0,\r\n        match: /,/\r\n      },\r\n      {\r\n        className: 'params',\r\n        begin: /\\(/,\r\n        end: /\\)/,\r\n        keywords: KEYWORDS,\r\n        relevance: 0,\r\n        contains: [\r\n          C_LINE_COMMENT_MODE,\r\n          hljs.C_BLOCK_COMMENT_MODE,\r\n          STRINGS,\r\n          NUMBERS,\r\n          TYPES,\r\n          // Count matching parentheses.\r\n          {\r\n            begin: /\\(/,\r\n            end: /\\)/,\r\n            keywords: KEYWORDS,\r\n            relevance: 0,\r\n            contains: [\r\n              'self',\r\n              C_LINE_COMMENT_MODE,\r\n              hljs.C_BLOCK_COMMENT_MODE,\r\n              STRINGS,\r\n              NUMBERS,\r\n              TYPES\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      TYPES,\r\n      C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      PREPROCESSOR\r\n    ]\r\n  };\r\n\r\n  return {\r\n    name: \"C\",\r\n    aliases: [ 'h' ],\r\n    keywords: KEYWORDS,\r\n    // Until differentiations are added between `c` and `cpp`, `c` will\r\n    // not be auto-detected to avoid auto-detect conflicts between C and C++\r\n    disableAutodetect: true,\r\n    illegal: '</',\r\n    contains: [].concat(\r\n      EXPRESSION_CONTEXT,\r\n      FUNCTION_DECLARATION,\r\n      EXPRESSION_CONTAINS,\r\n      [\r\n        PREPROCESSOR,\r\n        {\r\n          begin: hljs.IDENT_RE + '::',\r\n          keywords: KEYWORDS\r\n        },\r\n        {\r\n          className: 'class',\r\n          beginKeywords: 'enum class struct union',\r\n          end: /[{;:<>=]/,\r\n          contains: [\r\n            { beginKeywords: \"final class struct\" },\r\n            hljs.TITLE_MODE\r\n          ]\r\n        }\r\n      ]),\r\n    exports: {\r\n      preprocessor: PREPROCESSOR,\r\n      strings: STRINGS,\r\n      keywords: KEYWORDS\r\n    }\r\n  };\r\n}\r\n\r\nmodule.exports = c;\r\n", "/*\r\nLanguage: C++\r\nCategory: common, system\r\nWebsite: https://isocpp.org\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction cpp(hljs) {\r\n  const regex = hljs.regex;\r\n  // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does\r\n  // not include such support nor can we be sure all the grammars depending\r\n  // on it would desire this behavior\r\n  const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', { contains: [ { begin: /\\\\\\n/ } ] });\r\n  const DECLTYPE_AUTO_RE = 'decltype\\\\(auto\\\\)';\r\n  const NAMESPACE_RE = '[a-zA-Z_]\\\\w*::';\r\n  const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';\r\n  const FUNCTION_TYPE_RE = '(?!struct)('\r\n    + DECLTYPE_AUTO_RE + '|'\r\n    + regex.optional(NAMESPACE_RE)\r\n    + '[a-zA-Z_]\\\\w*' + regex.optional(TEMPLATE_ARGUMENT_RE)\r\n  + ')';\r\n\r\n  const CPP_PRIMITIVE_TYPES = {\r\n    className: 'type',\r\n    begin: '\\\\b[a-z\\\\d_]*_t\\\\b'\r\n  };\r\n\r\n  // https://en.cppreference.com/w/cpp/language/escape\r\n  // \\\\ \\x \\xFF \\u2837 \\u00323747 \\374\r\n  const CHARACTER_ESCAPES = '\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)';\r\n  const STRINGS = {\r\n    className: 'string',\r\n    variants: [\r\n      {\r\n        begin: '(u8?|U|L)?\"',\r\n        end: '\"',\r\n        illegal: '\\\\n',\r\n        contains: [ hljs.BACKSLASH_ESCAPE ]\r\n      },\r\n      {\r\n        begin: '(u8?|U|L)?\\'(' + CHARACTER_ESCAPES + '|.)',\r\n        end: '\\'',\r\n        illegal: '.'\r\n      },\r\n      hljs.END_SAME_AS_BEGIN({\r\n        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\r\n        end: /\\)([^()\\\\ ]{0,16})\"/\r\n      })\r\n    ]\r\n  };\r\n\r\n  const NUMBERS = {\r\n    className: 'number',\r\n    variants: [\r\n      { begin: '\\\\b(0b[01\\']+)' },\r\n      { begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)' },\r\n      { begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)' }\r\n    ],\r\n    relevance: 0\r\n  };\r\n\r\n  const PREPROCESSOR = {\r\n    className: 'meta',\r\n    begin: /#\\s*[a-z]+\\b/,\r\n    end: /$/,\r\n    keywords: { keyword:\r\n        'if else elif endif define undef warning error line '\r\n        + 'pragma _Pragma ifdef ifndef include' },\r\n    contains: [\r\n      {\r\n        begin: /\\\\\\n/,\r\n        relevance: 0\r\n      },\r\n      hljs.inherit(STRINGS, { className: 'string' }),\r\n      {\r\n        className: 'string',\r\n        begin: /<.*?>/\r\n      },\r\n      C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE\r\n    ]\r\n  };\r\n\r\n  const TITLE_MODE = {\r\n    className: 'title',\r\n    begin: regex.optional(NAMESPACE_RE) + hljs.IDENT_RE,\r\n    relevance: 0\r\n  };\r\n\r\n  const FUNCTION_TITLE = regex.optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\\\s*\\\\(';\r\n\r\n  // https://en.cppreference.com/w/cpp/keyword\r\n  const RESERVED_KEYWORDS = [\r\n    'alignas',\r\n    'alignof',\r\n    'and',\r\n    'and_eq',\r\n    'asm',\r\n    'atomic_cancel',\r\n    'atomic_commit',\r\n    'atomic_noexcept',\r\n    'auto',\r\n    'bitand',\r\n    'bitor',\r\n    'break',\r\n    'case',\r\n    'catch',\r\n    'class',\r\n    'co_await',\r\n    'co_return',\r\n    'co_yield',\r\n    'compl',\r\n    'concept',\r\n    'const_cast|10',\r\n    'consteval',\r\n    'constexpr',\r\n    'constinit',\r\n    'continue',\r\n    'decltype',\r\n    'default',\r\n    'delete',\r\n    'do',\r\n    'dynamic_cast|10',\r\n    'else',\r\n    'enum',\r\n    'explicit',\r\n    'export',\r\n    'extern',\r\n    'false',\r\n    'final',\r\n    'for',\r\n    'friend',\r\n    'goto',\r\n    'if',\r\n    'import',\r\n    'inline',\r\n    'module',\r\n    'mutable',\r\n    'namespace',\r\n    'new',\r\n    'noexcept',\r\n    'not',\r\n    'not_eq',\r\n    'nullptr',\r\n    'operator',\r\n    'or',\r\n    'or_eq',\r\n    'override',\r\n    'private',\r\n    'protected',\r\n    'public',\r\n    'reflexpr',\r\n    'register',\r\n    'reinterpret_cast|10',\r\n    'requires',\r\n    'return',\r\n    'sizeof',\r\n    'static_assert',\r\n    'static_cast|10',\r\n    'struct',\r\n    'switch',\r\n    'synchronized',\r\n    'template',\r\n    'this',\r\n    'thread_local',\r\n    'throw',\r\n    'transaction_safe',\r\n    'transaction_safe_dynamic',\r\n    'true',\r\n    'try',\r\n    'typedef',\r\n    'typeid',\r\n    'typename',\r\n    'union',\r\n    'using',\r\n    'virtual',\r\n    'volatile',\r\n    'while',\r\n    'xor',\r\n    'xor_eq'\r\n  ];\r\n\r\n  // https://en.cppreference.com/w/cpp/keyword\r\n  const RESERVED_TYPES = [\r\n    'bool',\r\n    'char',\r\n    'char16_t',\r\n    'char32_t',\r\n    'char8_t',\r\n    'double',\r\n    'float',\r\n    'int',\r\n    'long',\r\n    'short',\r\n    'void',\r\n    'wchar_t',\r\n    'unsigned',\r\n    'signed',\r\n    'const',\r\n    'static'\r\n  ];\r\n\r\n  const TYPE_HINTS = [\r\n    'any',\r\n    'auto_ptr',\r\n    'barrier',\r\n    'binary_semaphore',\r\n    'bitset',\r\n    'complex',\r\n    'condition_variable',\r\n    'condition_variable_any',\r\n    'counting_semaphore',\r\n    'deque',\r\n    'false_type',\r\n    'future',\r\n    'imaginary',\r\n    'initializer_list',\r\n    'istringstream',\r\n    'jthread',\r\n    'latch',\r\n    'lock_guard',\r\n    'multimap',\r\n    'multiset',\r\n    'mutex',\r\n    'optional',\r\n    'ostringstream',\r\n    'packaged_task',\r\n    'pair',\r\n    'promise',\r\n    'priority_queue',\r\n    'queue',\r\n    'recursive_mutex',\r\n    'recursive_timed_mutex',\r\n    'scoped_lock',\r\n    'set',\r\n    'shared_future',\r\n    'shared_lock',\r\n    'shared_mutex',\r\n    'shared_timed_mutex',\r\n    'shared_ptr',\r\n    'stack',\r\n    'string_view',\r\n    'stringstream',\r\n    'timed_mutex',\r\n    'thread',\r\n    'true_type',\r\n    'tuple',\r\n    'unique_lock',\r\n    'unique_ptr',\r\n    'unordered_map',\r\n    'unordered_multimap',\r\n    'unordered_multiset',\r\n    'unordered_set',\r\n    'variant',\r\n    'vector',\r\n    'weak_ptr',\r\n    'wstring',\r\n    'wstring_view'\r\n  ];\r\n\r\n  const FUNCTION_HINTS = [\r\n    'abort',\r\n    'abs',\r\n    'acos',\r\n    'apply',\r\n    'as_const',\r\n    'asin',\r\n    'atan',\r\n    'atan2',\r\n    'calloc',\r\n    'ceil',\r\n    'cerr',\r\n    'cin',\r\n    'clog',\r\n    'cos',\r\n    'cosh',\r\n    'cout',\r\n    'declval',\r\n    'endl',\r\n    'exchange',\r\n    'exit',\r\n    'exp',\r\n    'fabs',\r\n    'floor',\r\n    'fmod',\r\n    'forward',\r\n    'fprintf',\r\n    'fputs',\r\n    'free',\r\n    'frexp',\r\n    'fscanf',\r\n    'future',\r\n    'invoke',\r\n    'isalnum',\r\n    'isalpha',\r\n    'iscntrl',\r\n    'isdigit',\r\n    'isgraph',\r\n    'islower',\r\n    'isprint',\r\n    'ispunct',\r\n    'isspace',\r\n    'isupper',\r\n    'isxdigit',\r\n    'labs',\r\n    'launder',\r\n    'ldexp',\r\n    'log',\r\n    'log10',\r\n    'make_pair',\r\n    'make_shared',\r\n    'make_shared_for_overwrite',\r\n    'make_tuple',\r\n    'make_unique',\r\n    'malloc',\r\n    'memchr',\r\n    'memcmp',\r\n    'memcpy',\r\n    'memset',\r\n    'modf',\r\n    'move',\r\n    'pow',\r\n    'printf',\r\n    'putchar',\r\n    'puts',\r\n    'realloc',\r\n    'scanf',\r\n    'sin',\r\n    'sinh',\r\n    'snprintf',\r\n    'sprintf',\r\n    'sqrt',\r\n    'sscanf',\r\n    'std',\r\n    'stderr',\r\n    'stdin',\r\n    'stdout',\r\n    'strcat',\r\n    'strchr',\r\n    'strcmp',\r\n    'strcpy',\r\n    'strcspn',\r\n    'strlen',\r\n    'strncat',\r\n    'strncmp',\r\n    'strncpy',\r\n    'strpbrk',\r\n    'strrchr',\r\n    'strspn',\r\n    'strstr',\r\n    'swap',\r\n    'tan',\r\n    'tanh',\r\n    'terminate',\r\n    'to_underlying',\r\n    'tolower',\r\n    'toupper',\r\n    'vfprintf',\r\n    'visit',\r\n    'vprintf',\r\n    'vsprintf'\r\n  ];\r\n\r\n  const LITERALS = [\r\n    'NULL',\r\n    'false',\r\n    'nullopt',\r\n    'nullptr',\r\n    'true'\r\n  ];\r\n\r\n  // https://en.cppreference.com/w/cpp/keyword\r\n  const BUILT_IN = [ '_Pragma' ];\r\n\r\n  const CPP_KEYWORDS = {\r\n    type: RESERVED_TYPES,\r\n    keyword: RESERVED_KEYWORDS,\r\n    literal: LITERALS,\r\n    built_in: BUILT_IN,\r\n    _type_hints: TYPE_HINTS\r\n  };\r\n\r\n  const FUNCTION_DISPATCH = {\r\n    className: 'function.dispatch',\r\n    relevance: 0,\r\n    keywords: {\r\n      // Only for relevance, not highlighting.\r\n      _hint: FUNCTION_HINTS },\r\n    begin: regex.concat(\r\n      /\\b/,\r\n      /(?!decltype)/,\r\n      /(?!if)/,\r\n      /(?!for)/,\r\n      /(?!switch)/,\r\n      /(?!while)/,\r\n      hljs.IDENT_RE,\r\n      regex.lookahead(/(<[^<>]+>|)\\s*\\(/))\r\n  };\r\n\r\n  const EXPRESSION_CONTAINS = [\r\n    FUNCTION_DISPATCH,\r\n    PREPROCESSOR,\r\n    CPP_PRIMITIVE_TYPES,\r\n    C_LINE_COMMENT_MODE,\r\n    hljs.C_BLOCK_COMMENT_MODE,\r\n    NUMBERS,\r\n    STRINGS\r\n  ];\r\n\r\n  const EXPRESSION_CONTEXT = {\r\n    // This mode covers expression context where we can't expect a function\r\n    // definition and shouldn't highlight anything that looks like one:\r\n    // `return some()`, `else if()`, `(x*sum(1, 2))`\r\n    variants: [\r\n      {\r\n        begin: /=/,\r\n        end: /;/\r\n      },\r\n      {\r\n        begin: /\\(/,\r\n        end: /\\)/\r\n      },\r\n      {\r\n        beginKeywords: 'new throw return else',\r\n        end: /;/\r\n      }\r\n    ],\r\n    keywords: CPP_KEYWORDS,\r\n    contains: EXPRESSION_CONTAINS.concat([\r\n      {\r\n        begin: /\\(/,\r\n        end: /\\)/,\r\n        keywords: CPP_KEYWORDS,\r\n        contains: EXPRESSION_CONTAINS.concat([ 'self' ]),\r\n        relevance: 0\r\n      }\r\n    ]),\r\n    relevance: 0\r\n  };\r\n\r\n  const FUNCTION_DECLARATION = {\r\n    className: 'function',\r\n    begin: '(' + FUNCTION_TYPE_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\r\n    returnBegin: true,\r\n    end: /[{;=]/,\r\n    excludeEnd: true,\r\n    keywords: CPP_KEYWORDS,\r\n    illegal: /[^\\w\\s\\*&:<>.]/,\r\n    contains: [\r\n      { // to prevent it from being confused as the function title\r\n        begin: DECLTYPE_AUTO_RE,\r\n        keywords: CPP_KEYWORDS,\r\n        relevance: 0\r\n      },\r\n      {\r\n        begin: FUNCTION_TITLE,\r\n        returnBegin: true,\r\n        contains: [ TITLE_MODE ],\r\n        relevance: 0\r\n      },\r\n      // needed because we do not have look-behind on the below rule\r\n      // to prevent it from grabbing the final : in a :: pair\r\n      {\r\n        begin: /::/,\r\n        relevance: 0\r\n      },\r\n      // initializers\r\n      {\r\n        begin: /:/,\r\n        endsWithParent: true,\r\n        contains: [\r\n          STRINGS,\r\n          NUMBERS\r\n        ]\r\n      },\r\n      // allow for multiple declarations, e.g.:\r\n      // extern void f(int), g(char);\r\n      {\r\n        relevance: 0,\r\n        match: /,/\r\n      },\r\n      {\r\n        className: 'params',\r\n        begin: /\\(/,\r\n        end: /\\)/,\r\n        keywords: CPP_KEYWORDS,\r\n        relevance: 0,\r\n        contains: [\r\n          C_LINE_COMMENT_MODE,\r\n          hljs.C_BLOCK_COMMENT_MODE,\r\n          STRINGS,\r\n          NUMBERS,\r\n          CPP_PRIMITIVE_TYPES,\r\n          // Count matching parentheses.\r\n          {\r\n            begin: /\\(/,\r\n            end: /\\)/,\r\n            keywords: CPP_KEYWORDS,\r\n            relevance: 0,\r\n            contains: [\r\n              'self',\r\n              C_LINE_COMMENT_MODE,\r\n              hljs.C_BLOCK_COMMENT_MODE,\r\n              STRINGS,\r\n              NUMBERS,\r\n              CPP_PRIMITIVE_TYPES\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      CPP_PRIMITIVE_TYPES,\r\n      C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      PREPROCESSOR\r\n    ]\r\n  };\r\n\r\n  return {\r\n    name: 'C++',\r\n    aliases: [\r\n      'cc',\r\n      'c++',\r\n      'h++',\r\n      'hpp',\r\n      'hh',\r\n      'hxx',\r\n      'cxx'\r\n    ],\r\n    keywords: CPP_KEYWORDS,\r\n    illegal: '</',\r\n    classNameAliases: { 'function.dispatch': 'built_in' },\r\n    contains: [].concat(\r\n      EXPRESSION_CONTEXT,\r\n      FUNCTION_DECLARATION,\r\n      FUNCTION_DISPATCH,\r\n      EXPRESSION_CONTAINS,\r\n      [\r\n        PREPROCESSOR,\r\n        { // containers: ie, `vector <int> rooms (9);`\r\n          begin: '\\\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function)\\\\s*<(?!<)',\r\n          end: '>',\r\n          keywords: CPP_KEYWORDS,\r\n          contains: [\r\n            'self',\r\n            CPP_PRIMITIVE_TYPES\r\n          ]\r\n        },\r\n        {\r\n          begin: hljs.IDENT_RE + '::',\r\n          keywords: CPP_KEYWORDS\r\n        },\r\n        {\r\n          match: [\r\n            // extra complexity to deal with `enum class` and `enum struct`\r\n            /\\b(?:enum(?:\\s+(?:class|struct))?|class|struct|union)/,\r\n            /\\s+/,\r\n            /\\w+/\r\n          ],\r\n          className: {\r\n            1: 'keyword',\r\n            3: 'title.class'\r\n          }\r\n        }\r\n      ])\r\n  };\r\n}\r\n\r\nmodule.exports = cpp;\r\n", "/*\r\nLanguage: C#\r\nAuthor: Jason Diamond <jason@diamond.name>\r\nContributor: Nicolas LLOBERA <nllobera@gmail.com>, Pieter Vantorre <pietervantorre@gmail.com>, David Pine <david.pine@microsoft.com>\r\nWebsite: https://docs.microsoft.com/dotnet/csharp/\r\nCategory: common\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction csharp(hljs) {\r\n  const BUILT_IN_KEYWORDS = [\r\n    'bool',\r\n    'byte',\r\n    'char',\r\n    'decimal',\r\n    'delegate',\r\n    'double',\r\n    'dynamic',\r\n    'enum',\r\n    'float',\r\n    'int',\r\n    'long',\r\n    'nint',\r\n    'nuint',\r\n    'object',\r\n    'sbyte',\r\n    'short',\r\n    'string',\r\n    'ulong',\r\n    'uint',\r\n    'ushort'\r\n  ];\r\n  const FUNCTION_MODIFIERS = [\r\n    'public',\r\n    'private',\r\n    'protected',\r\n    'static',\r\n    'internal',\r\n    'protected',\r\n    'abstract',\r\n    'async',\r\n    'extern',\r\n    'override',\r\n    'unsafe',\r\n    'virtual',\r\n    'new',\r\n    'sealed',\r\n    'partial'\r\n  ];\r\n  const LITERAL_KEYWORDS = [\r\n    'default',\r\n    'false',\r\n    'null',\r\n    'true'\r\n  ];\r\n  const NORMAL_KEYWORDS = [\r\n    'abstract',\r\n    'as',\r\n    'base',\r\n    'break',\r\n    'case',\r\n    'catch',\r\n    'class',\r\n    'const',\r\n    'continue',\r\n    'do',\r\n    'else',\r\n    'event',\r\n    'explicit',\r\n    'extern',\r\n    'finally',\r\n    'fixed',\r\n    'for',\r\n    'foreach',\r\n    'goto',\r\n    'if',\r\n    'implicit',\r\n    'in',\r\n    'interface',\r\n    'internal',\r\n    'is',\r\n    'lock',\r\n    'namespace',\r\n    'new',\r\n    'operator',\r\n    'out',\r\n    'override',\r\n    'params',\r\n    'private',\r\n    'protected',\r\n    'public',\r\n    'readonly',\r\n    'record',\r\n    'ref',\r\n    'return',\r\n    'scoped',\r\n    'sealed',\r\n    'sizeof',\r\n    'stackalloc',\r\n    'static',\r\n    'struct',\r\n    'switch',\r\n    'this',\r\n    'throw',\r\n    'try',\r\n    'typeof',\r\n    'unchecked',\r\n    'unsafe',\r\n    'using',\r\n    'virtual',\r\n    'void',\r\n    'volatile',\r\n    'while'\r\n  ];\r\n  const CONTEXTUAL_KEYWORDS = [\r\n    'add',\r\n    'alias',\r\n    'and',\r\n    'ascending',\r\n    'async',\r\n    'await',\r\n    'by',\r\n    'descending',\r\n    'equals',\r\n    'from',\r\n    'get',\r\n    'global',\r\n    'group',\r\n    'init',\r\n    'into',\r\n    'join',\r\n    'let',\r\n    'nameof',\r\n    'not',\r\n    'notnull',\r\n    'on',\r\n    'or',\r\n    'orderby',\r\n    'partial',\r\n    'remove',\r\n    'select',\r\n    'set',\r\n    'unmanaged',\r\n    'value|0',\r\n    'var',\r\n    'when',\r\n    'where',\r\n    'with',\r\n    'yield'\r\n  ];\r\n\r\n  const KEYWORDS = {\r\n    keyword: NORMAL_KEYWORDS.concat(CONTEXTUAL_KEYWORDS),\r\n    built_in: BUILT_IN_KEYWORDS,\r\n    literal: LITERAL_KEYWORDS\r\n  };\r\n  const TITLE_MODE = hljs.inherit(hljs.TITLE_MODE, { begin: '[a-zA-Z](\\\\.?\\\\w)*' });\r\n  const NUMBERS = {\r\n    className: 'number',\r\n    variants: [\r\n      { begin: '\\\\b(0b[01\\']+)' },\r\n      { begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)(u|U|l|L|ul|UL|f|F|b|B)' },\r\n      { begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)' }\r\n    ],\r\n    relevance: 0\r\n  };\r\n  const VERBATIM_STRING = {\r\n    className: 'string',\r\n    begin: '@\"',\r\n    end: '\"',\r\n    contains: [ { begin: '\"\"' } ]\r\n  };\r\n  const VERBATIM_STRING_NO_LF = hljs.inherit(VERBATIM_STRING, { illegal: /\\n/ });\r\n  const SUBST = {\r\n    className: 'subst',\r\n    begin: /\\{/,\r\n    end: /\\}/,\r\n    keywords: KEYWORDS\r\n  };\r\n  const SUBST_NO_LF = hljs.inherit(SUBST, { illegal: /\\n/ });\r\n  const INTERPOLATED_STRING = {\r\n    className: 'string',\r\n    begin: /\\$\"/,\r\n    end: '\"',\r\n    illegal: /\\n/,\r\n    contains: [\r\n      { begin: /\\{\\{/ },\r\n      { begin: /\\}\\}/ },\r\n      hljs.BACKSLASH_ESCAPE,\r\n      SUBST_NO_LF\r\n    ]\r\n  };\r\n  const INTERPOLATED_VERBATIM_STRING = {\r\n    className: 'string',\r\n    begin: /\\$@\"/,\r\n    end: '\"',\r\n    contains: [\r\n      { begin: /\\{\\{/ },\r\n      { begin: /\\}\\}/ },\r\n      { begin: '\"\"' },\r\n      SUBST\r\n    ]\r\n  };\r\n  const INTERPOLATED_VERBATIM_STRING_NO_LF = hljs.inherit(INTERPOLATED_VERBATIM_STRING, {\r\n    illegal: /\\n/,\r\n    contains: [\r\n      { begin: /\\{\\{/ },\r\n      { begin: /\\}\\}/ },\r\n      { begin: '\"\"' },\r\n      SUBST_NO_LF\r\n    ]\r\n  });\r\n  SUBST.contains = [\r\n    INTERPOLATED_VERBATIM_STRING,\r\n    INTERPOLATED_STRING,\r\n    VERBATIM_STRING,\r\n    hljs.APOS_STRING_MODE,\r\n    hljs.QUOTE_STRING_MODE,\r\n    NUMBERS,\r\n    hljs.C_BLOCK_COMMENT_MODE\r\n  ];\r\n  SUBST_NO_LF.contains = [\r\n    INTERPOLATED_VERBATIM_STRING_NO_LF,\r\n    INTERPOLATED_STRING,\r\n    VERBATIM_STRING_NO_LF,\r\n    hljs.APOS_STRING_MODE,\r\n    hljs.QUOTE_STRING_MODE,\r\n    NUMBERS,\r\n    hljs.inherit(hljs.C_BLOCK_COMMENT_MODE, { illegal: /\\n/ })\r\n  ];\r\n  const STRING = { variants: [\r\n    INTERPOLATED_VERBATIM_STRING,\r\n    INTERPOLATED_STRING,\r\n    VERBATIM_STRING,\r\n    hljs.APOS_STRING_MODE,\r\n    hljs.QUOTE_STRING_MODE\r\n  ] };\r\n\r\n  const GENERIC_MODIFIER = {\r\n    begin: \"<\",\r\n    end: \">\",\r\n    contains: [\r\n      { beginKeywords: \"in out\" },\r\n      TITLE_MODE\r\n    ]\r\n  };\r\n  const TYPE_IDENT_RE = hljs.IDENT_RE + '(<' + hljs.IDENT_RE + '(\\\\s*,\\\\s*' + hljs.IDENT_RE + ')*>)?(\\\\[\\\\])?';\r\n  const AT_IDENTIFIER = {\r\n    // prevents expressions like `@class` from incorrect flagging\r\n    // `class` as a keyword\r\n    begin: \"@\" + hljs.IDENT_RE,\r\n    relevance: 0\r\n  };\r\n\r\n  return {\r\n    name: 'C#',\r\n    aliases: [\r\n      'cs',\r\n      'c#'\r\n    ],\r\n    keywords: KEYWORDS,\r\n    illegal: /::/,\r\n    contains: [\r\n      hljs.COMMENT(\r\n        '///',\r\n        '$',\r\n        {\r\n          returnBegin: true,\r\n          contains: [\r\n            {\r\n              className: 'doctag',\r\n              variants: [\r\n                {\r\n                  begin: '///',\r\n                  relevance: 0\r\n                },\r\n                { begin: '<!--|-->' },\r\n                {\r\n                  begin: '</?',\r\n                  end: '>'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ),\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      {\r\n        className: 'meta',\r\n        begin: '#',\r\n        end: '$',\r\n        keywords: { keyword: 'if else elif endif define undef warning error line region endregion pragma checksum' }\r\n      },\r\n      STRING,\r\n      NUMBERS,\r\n      {\r\n        beginKeywords: 'class interface',\r\n        relevance: 0,\r\n        end: /[{;=]/,\r\n        illegal: /[^\\s:,]/,\r\n        contains: [\r\n          { beginKeywords: \"where class\" },\r\n          TITLE_MODE,\r\n          GENERIC_MODIFIER,\r\n          hljs.C_LINE_COMMENT_MODE,\r\n          hljs.C_BLOCK_COMMENT_MODE\r\n        ]\r\n      },\r\n      {\r\n        beginKeywords: 'namespace',\r\n        relevance: 0,\r\n        end: /[{;=]/,\r\n        illegal: /[^\\s:]/,\r\n        contains: [\r\n          TITLE_MODE,\r\n          hljs.C_LINE_COMMENT_MODE,\r\n          hljs.C_BLOCK_COMMENT_MODE\r\n        ]\r\n      },\r\n      {\r\n        beginKeywords: 'record',\r\n        relevance: 0,\r\n        end: /[{;=]/,\r\n        illegal: /[^\\s:]/,\r\n        contains: [\r\n          TITLE_MODE,\r\n          GENERIC_MODIFIER,\r\n          hljs.C_LINE_COMMENT_MODE,\r\n          hljs.C_BLOCK_COMMENT_MODE\r\n        ]\r\n      },\r\n      {\r\n        // [Attributes(\"\")]\r\n        className: 'meta',\r\n        begin: '^\\\\s*\\\\[(?=[\\\\w])',\r\n        excludeBegin: true,\r\n        end: '\\\\]',\r\n        excludeEnd: true,\r\n        contains: [\r\n          {\r\n            className: 'string',\r\n            begin: /\"/,\r\n            end: /\"/\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        // Expression keywords prevent 'keyword Name(...)' from being\r\n        // recognized as a function definition\r\n        beginKeywords: 'new return throw await else',\r\n        relevance: 0\r\n      },\r\n      {\r\n        className: 'function',\r\n        begin: '(' + TYPE_IDENT_RE + '\\\\s+)+' + hljs.IDENT_RE + '\\\\s*(<[^=]+>\\\\s*)?\\\\(',\r\n        returnBegin: true,\r\n        end: /\\s*[{;=]/,\r\n        excludeEnd: true,\r\n        keywords: KEYWORDS,\r\n        contains: [\r\n          // prevents these from being highlighted `title`\r\n          {\r\n            beginKeywords: FUNCTION_MODIFIERS.join(\" \"),\r\n            relevance: 0\r\n          },\r\n          {\r\n            begin: hljs.IDENT_RE + '\\\\s*(<[^=]+>\\\\s*)?\\\\(',\r\n            returnBegin: true,\r\n            contains: [\r\n              hljs.TITLE_MODE,\r\n              GENERIC_MODIFIER\r\n            ],\r\n            relevance: 0\r\n          },\r\n          { match: /\\(\\)/ },\r\n          {\r\n            className: 'params',\r\n            begin: /\\(/,\r\n            end: /\\)/,\r\n            excludeBegin: true,\r\n            excludeEnd: true,\r\n            keywords: KEYWORDS,\r\n            relevance: 0,\r\n            contains: [\r\n              STRING,\r\n              NUMBERS,\r\n              hljs.C_BLOCK_COMMENT_MODE\r\n            ]\r\n          },\r\n          hljs.C_LINE_COMMENT_MODE,\r\n          hljs.C_BLOCK_COMMENT_MODE\r\n        ]\r\n      },\r\n      AT_IDENTIFIER\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = csharp;\r\n", "const MODES = (hljs) => {\r\n  return {\r\n    IMPORTANT: {\r\n      scope: 'meta',\r\n      begin: '!important'\r\n    },\r\n    BLOCK_COMMENT: hljs.C_BLOCK_COMMENT_MODE,\r\n    HEXCOLOR: {\r\n      scope: 'number',\r\n      begin: /#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\\b/\r\n    },\r\n    FUNCTION_DISPATCH: {\r\n      className: \"built_in\",\r\n      begin: /[\\w-]+(?=\\()/\r\n    },\r\n    ATTRIBUTE_SELECTOR_MODE: {\r\n      scope: 'selector-attr',\r\n      begin: /\\[/,\r\n      end: /\\]/,\r\n      illegal: '$',\r\n      contains: [\r\n        hljs.APOS_STRING_MODE,\r\n        hljs.QUOTE_STRING_MODE\r\n      ]\r\n    },\r\n    CSS_NUMBER_MODE: {\r\n      scope: 'number',\r\n      begin: hljs.NUMBER_RE + '(' +\r\n        '%|em|ex|ch|rem' +\r\n        '|vw|vh|vmin|vmax' +\r\n        '|cm|mm|in|pt|pc|px' +\r\n        '|deg|grad|rad|turn' +\r\n        '|s|ms' +\r\n        '|Hz|kHz' +\r\n        '|dpi|dpcm|dppx' +\r\n        ')?',\r\n      relevance: 0\r\n    },\r\n    CSS_VARIABLE: {\r\n      className: \"attr\",\r\n      begin: /--[A-Za-z][A-Za-z0-9_-]*/\r\n    }\r\n  };\r\n};\r\n\r\nconst TAGS = [\r\n  'a',\r\n  'abbr',\r\n  'address',\r\n  'article',\r\n  'aside',\r\n  'audio',\r\n  'b',\r\n  'blockquote',\r\n  'body',\r\n  'button',\r\n  'canvas',\r\n  'caption',\r\n  'cite',\r\n  'code',\r\n  'dd',\r\n  'del',\r\n  'details',\r\n  'dfn',\r\n  'div',\r\n  'dl',\r\n  'dt',\r\n  'em',\r\n  'fieldset',\r\n  'figcaption',\r\n  'figure',\r\n  'footer',\r\n  'form',\r\n  'h1',\r\n  'h2',\r\n  'h3',\r\n  'h4',\r\n  'h5',\r\n  'h6',\r\n  'header',\r\n  'hgroup',\r\n  'html',\r\n  'i',\r\n  'iframe',\r\n  'img',\r\n  'input',\r\n  'ins',\r\n  'kbd',\r\n  'label',\r\n  'legend',\r\n  'li',\r\n  'main',\r\n  'mark',\r\n  'menu',\r\n  'nav',\r\n  'object',\r\n  'ol',\r\n  'p',\r\n  'q',\r\n  'quote',\r\n  'samp',\r\n  'section',\r\n  'span',\r\n  'strong',\r\n  'summary',\r\n  'sup',\r\n  'table',\r\n  'tbody',\r\n  'td',\r\n  'textarea',\r\n  'tfoot',\r\n  'th',\r\n  'thead',\r\n  'time',\r\n  'tr',\r\n  'ul',\r\n  'var',\r\n  'video'\r\n];\r\n\r\nconst MEDIA_FEATURES = [\r\n  'any-hover',\r\n  'any-pointer',\r\n  'aspect-ratio',\r\n  'color',\r\n  'color-gamut',\r\n  'color-index',\r\n  'device-aspect-ratio',\r\n  'device-height',\r\n  'device-width',\r\n  'display-mode',\r\n  'forced-colors',\r\n  'grid',\r\n  'height',\r\n  'hover',\r\n  'inverted-colors',\r\n  'monochrome',\r\n  'orientation',\r\n  'overflow-block',\r\n  'overflow-inline',\r\n  'pointer',\r\n  'prefers-color-scheme',\r\n  'prefers-contrast',\r\n  'prefers-reduced-motion',\r\n  'prefers-reduced-transparency',\r\n  'resolution',\r\n  'scan',\r\n  'scripting',\r\n  'update',\r\n  'width',\r\n  // TODO: find a better solution?\r\n  'min-width',\r\n  'max-width',\r\n  'min-height',\r\n  'max-height'\r\n];\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes\r\nconst PSEUDO_CLASSES = [\r\n  'active',\r\n  'any-link',\r\n  'blank',\r\n  'checked',\r\n  'current',\r\n  'default',\r\n  'defined',\r\n  'dir', // dir()\r\n  'disabled',\r\n  'drop',\r\n  'empty',\r\n  'enabled',\r\n  'first',\r\n  'first-child',\r\n  'first-of-type',\r\n  'fullscreen',\r\n  'future',\r\n  'focus',\r\n  'focus-visible',\r\n  'focus-within',\r\n  'has', // has()\r\n  'host', // host or host()\r\n  'host-context', // host-context()\r\n  'hover',\r\n  'indeterminate',\r\n  'in-range',\r\n  'invalid',\r\n  'is', // is()\r\n  'lang', // lang()\r\n  'last-child',\r\n  'last-of-type',\r\n  'left',\r\n  'link',\r\n  'local-link',\r\n  'not', // not()\r\n  'nth-child', // nth-child()\r\n  'nth-col', // nth-col()\r\n  'nth-last-child', // nth-last-child()\r\n  'nth-last-col', // nth-last-col()\r\n  'nth-last-of-type', //nth-last-of-type()\r\n  'nth-of-type', //nth-of-type()\r\n  'only-child',\r\n  'only-of-type',\r\n  'optional',\r\n  'out-of-range',\r\n  'past',\r\n  'placeholder-shown',\r\n  'read-only',\r\n  'read-write',\r\n  'required',\r\n  'right',\r\n  'root',\r\n  'scope',\r\n  'target',\r\n  'target-within',\r\n  'user-invalid',\r\n  'valid',\r\n  'visited',\r\n  'where' // where()\r\n];\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements\r\nconst PSEUDO_ELEMENTS = [\r\n  'after',\r\n  'backdrop',\r\n  'before',\r\n  'cue',\r\n  'cue-region',\r\n  'first-letter',\r\n  'first-line',\r\n  'grammar-error',\r\n  'marker',\r\n  'part',\r\n  'placeholder',\r\n  'selection',\r\n  'slotted',\r\n  'spelling-error'\r\n];\r\n\r\nconst ATTRIBUTES = [\r\n  'align-content',\r\n  'align-items',\r\n  'align-self',\r\n  'all',\r\n  'animation',\r\n  'animation-delay',\r\n  'animation-direction',\r\n  'animation-duration',\r\n  'animation-fill-mode',\r\n  'animation-iteration-count',\r\n  'animation-name',\r\n  'animation-play-state',\r\n  'animation-timing-function',\r\n  'backface-visibility',\r\n  'background',\r\n  'background-attachment',\r\n  'background-blend-mode',\r\n  'background-clip',\r\n  'background-color',\r\n  'background-image',\r\n  'background-origin',\r\n  'background-position',\r\n  'background-repeat',\r\n  'background-size',\r\n  'block-size',\r\n  'border',\r\n  'border-block',\r\n  'border-block-color',\r\n  'border-block-end',\r\n  'border-block-end-color',\r\n  'border-block-end-style',\r\n  'border-block-end-width',\r\n  'border-block-start',\r\n  'border-block-start-color',\r\n  'border-block-start-style',\r\n  'border-block-start-width',\r\n  'border-block-style',\r\n  'border-block-width',\r\n  'border-bottom',\r\n  'border-bottom-color',\r\n  'border-bottom-left-radius',\r\n  'border-bottom-right-radius',\r\n  'border-bottom-style',\r\n  'border-bottom-width',\r\n  'border-collapse',\r\n  'border-color',\r\n  'border-image',\r\n  'border-image-outset',\r\n  'border-image-repeat',\r\n  'border-image-slice',\r\n  'border-image-source',\r\n  'border-image-width',\r\n  'border-inline',\r\n  'border-inline-color',\r\n  'border-inline-end',\r\n  'border-inline-end-color',\r\n  'border-inline-end-style',\r\n  'border-inline-end-width',\r\n  'border-inline-start',\r\n  'border-inline-start-color',\r\n  'border-inline-start-style',\r\n  'border-inline-start-width',\r\n  'border-inline-style',\r\n  'border-inline-width',\r\n  'border-left',\r\n  'border-left-color',\r\n  'border-left-style',\r\n  'border-left-width',\r\n  'border-radius',\r\n  'border-right',\r\n  'border-right-color',\r\n  'border-right-style',\r\n  'border-right-width',\r\n  'border-spacing',\r\n  'border-style',\r\n  'border-top',\r\n  'border-top-color',\r\n  'border-top-left-radius',\r\n  'border-top-right-radius',\r\n  'border-top-style',\r\n  'border-top-width',\r\n  'border-width',\r\n  'bottom',\r\n  'box-decoration-break',\r\n  'box-shadow',\r\n  'box-sizing',\r\n  'break-after',\r\n  'break-before',\r\n  'break-inside',\r\n  'caption-side',\r\n  'caret-color',\r\n  'clear',\r\n  'clip',\r\n  'clip-path',\r\n  'clip-rule',\r\n  'color',\r\n  'column-count',\r\n  'column-fill',\r\n  'column-gap',\r\n  'column-rule',\r\n  'column-rule-color',\r\n  'column-rule-style',\r\n  'column-rule-width',\r\n  'column-span',\r\n  'column-width',\r\n  'columns',\r\n  'contain',\r\n  'content',\r\n  'content-visibility',\r\n  'counter-increment',\r\n  'counter-reset',\r\n  'cue',\r\n  'cue-after',\r\n  'cue-before',\r\n  'cursor',\r\n  'direction',\r\n  'display',\r\n  'empty-cells',\r\n  'filter',\r\n  'flex',\r\n  'flex-basis',\r\n  'flex-direction',\r\n  'flex-flow',\r\n  'flex-grow',\r\n  'flex-shrink',\r\n  'flex-wrap',\r\n  'float',\r\n  'flow',\r\n  'font',\r\n  'font-display',\r\n  'font-family',\r\n  'font-feature-settings',\r\n  'font-kerning',\r\n  'font-language-override',\r\n  'font-size',\r\n  'font-size-adjust',\r\n  'font-smoothing',\r\n  'font-stretch',\r\n  'font-style',\r\n  'font-synthesis',\r\n  'font-variant',\r\n  'font-variant-caps',\r\n  'font-variant-east-asian',\r\n  'font-variant-ligatures',\r\n  'font-variant-numeric',\r\n  'font-variant-position',\r\n  'font-variation-settings',\r\n  'font-weight',\r\n  'gap',\r\n  'glyph-orientation-vertical',\r\n  'grid',\r\n  'grid-area',\r\n  'grid-auto-columns',\r\n  'grid-auto-flow',\r\n  'grid-auto-rows',\r\n  'grid-column',\r\n  'grid-column-end',\r\n  'grid-column-start',\r\n  'grid-gap',\r\n  'grid-row',\r\n  'grid-row-end',\r\n  'grid-row-start',\r\n  'grid-template',\r\n  'grid-template-areas',\r\n  'grid-template-columns',\r\n  'grid-template-rows',\r\n  'hanging-punctuation',\r\n  'height',\r\n  'hyphens',\r\n  'icon',\r\n  'image-orientation',\r\n  'image-rendering',\r\n  'image-resolution',\r\n  'ime-mode',\r\n  'inline-size',\r\n  'isolation',\r\n  'justify-content',\r\n  'left',\r\n  'letter-spacing',\r\n  'line-break',\r\n  'line-height',\r\n  'list-style',\r\n  'list-style-image',\r\n  'list-style-position',\r\n  'list-style-type',\r\n  'margin',\r\n  'margin-block',\r\n  'margin-block-end',\r\n  'margin-block-start',\r\n  'margin-bottom',\r\n  'margin-inline',\r\n  'margin-inline-end',\r\n  'margin-inline-start',\r\n  'margin-left',\r\n  'margin-right',\r\n  'margin-top',\r\n  'marks',\r\n  'mask',\r\n  'mask-border',\r\n  'mask-border-mode',\r\n  'mask-border-outset',\r\n  'mask-border-repeat',\r\n  'mask-border-slice',\r\n  'mask-border-source',\r\n  'mask-border-width',\r\n  'mask-clip',\r\n  'mask-composite',\r\n  'mask-image',\r\n  'mask-mode',\r\n  'mask-origin',\r\n  'mask-position',\r\n  'mask-repeat',\r\n  'mask-size',\r\n  'mask-type',\r\n  'max-block-size',\r\n  'max-height',\r\n  'max-inline-size',\r\n  'max-width',\r\n  'min-block-size',\r\n  'min-height',\r\n  'min-inline-size',\r\n  'min-width',\r\n  'mix-blend-mode',\r\n  'nav-down',\r\n  'nav-index',\r\n  'nav-left',\r\n  'nav-right',\r\n  'nav-up',\r\n  'none',\r\n  'normal',\r\n  'object-fit',\r\n  'object-position',\r\n  'opacity',\r\n  'order',\r\n  'orphans',\r\n  'outline',\r\n  'outline-color',\r\n  'outline-offset',\r\n  'outline-style',\r\n  'outline-width',\r\n  'overflow',\r\n  'overflow-wrap',\r\n  'overflow-x',\r\n  'overflow-y',\r\n  'padding',\r\n  'padding-block',\r\n  'padding-block-end',\r\n  'padding-block-start',\r\n  'padding-bottom',\r\n  'padding-inline',\r\n  'padding-inline-end',\r\n  'padding-inline-start',\r\n  'padding-left',\r\n  'padding-right',\r\n  'padding-top',\r\n  'page-break-after',\r\n  'page-break-before',\r\n  'page-break-inside',\r\n  'pause',\r\n  'pause-after',\r\n  'pause-before',\r\n  'perspective',\r\n  'perspective-origin',\r\n  'pointer-events',\r\n  'position',\r\n  'quotes',\r\n  'resize',\r\n  'rest',\r\n  'rest-after',\r\n  'rest-before',\r\n  'right',\r\n  'row-gap',\r\n  'scroll-margin',\r\n  'scroll-margin-block',\r\n  'scroll-margin-block-end',\r\n  'scroll-margin-block-start',\r\n  'scroll-margin-bottom',\r\n  'scroll-margin-inline',\r\n  'scroll-margin-inline-end',\r\n  'scroll-margin-inline-start',\r\n  'scroll-margin-left',\r\n  'scroll-margin-right',\r\n  'scroll-margin-top',\r\n  'scroll-padding',\r\n  'scroll-padding-block',\r\n  'scroll-padding-block-end',\r\n  'scroll-padding-block-start',\r\n  'scroll-padding-bottom',\r\n  'scroll-padding-inline',\r\n  'scroll-padding-inline-end',\r\n  'scroll-padding-inline-start',\r\n  'scroll-padding-left',\r\n  'scroll-padding-right',\r\n  'scroll-padding-top',\r\n  'scroll-snap-align',\r\n  'scroll-snap-stop',\r\n  'scroll-snap-type',\r\n  'scrollbar-color',\r\n  'scrollbar-gutter',\r\n  'scrollbar-width',\r\n  'shape-image-threshold',\r\n  'shape-margin',\r\n  'shape-outside',\r\n  'speak',\r\n  'speak-as',\r\n  'src', // @font-face\r\n  'tab-size',\r\n  'table-layout',\r\n  'text-align',\r\n  'text-align-all',\r\n  'text-align-last',\r\n  'text-combine-upright',\r\n  'text-decoration',\r\n  'text-decoration-color',\r\n  'text-decoration-line',\r\n  'text-decoration-style',\r\n  'text-emphasis',\r\n  'text-emphasis-color',\r\n  'text-emphasis-position',\r\n  'text-emphasis-style',\r\n  'text-indent',\r\n  'text-justify',\r\n  'text-orientation',\r\n  'text-overflow',\r\n  'text-rendering',\r\n  'text-shadow',\r\n  'text-transform',\r\n  'text-underline-position',\r\n  'top',\r\n  'transform',\r\n  'transform-box',\r\n  'transform-origin',\r\n  'transform-style',\r\n  'transition',\r\n  'transition-delay',\r\n  'transition-duration',\r\n  'transition-property',\r\n  'transition-timing-function',\r\n  'unicode-bidi',\r\n  'vertical-align',\r\n  'visibility',\r\n  'voice-balance',\r\n  'voice-duration',\r\n  'voice-family',\r\n  'voice-pitch',\r\n  'voice-range',\r\n  'voice-rate',\r\n  'voice-stress',\r\n  'voice-volume',\r\n  'white-space',\r\n  'widows',\r\n  'width',\r\n  'will-change',\r\n  'word-break',\r\n  'word-spacing',\r\n  'word-wrap',\r\n  'writing-mode',\r\n  'z-index'\r\n  // reverse makes sure longer attributes `font-weight` are matched fully\r\n  // instead of getting false positives on say `font`\r\n].reverse();\r\n\r\n/*\r\nLanguage: CSS\r\nCategory: common, css, web\r\nWebsite: https://developer.mozilla.org/en-US/docs/Web/CSS\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction css(hljs) {\r\n  const regex = hljs.regex;\r\n  const modes = MODES(hljs);\r\n  const VENDOR_PREFIX = { begin: /-(webkit|moz|ms|o)-(?=[a-z])/ };\r\n  const AT_MODIFIERS = \"and or not only\";\r\n  const AT_PROPERTY_RE = /@-?\\w[\\w]*(-\\w+)*/; // @-webkit-keyframes\r\n  const IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\r\n  const STRINGS = [\r\n    hljs.APOS_STRING_MODE,\r\n    hljs.QUOTE_STRING_MODE\r\n  ];\r\n\r\n  return {\r\n    name: 'CSS',\r\n    case_insensitive: true,\r\n    illegal: /[=|'\\$]/,\r\n    keywords: { keyframePosition: \"from to\" },\r\n    classNameAliases: {\r\n      // for visual continuity with `tag {}` and because we\r\n      // don't have a great class for this?\r\n      keyframePosition: \"selector-tag\" },\r\n    contains: [\r\n      modes.BLOCK_COMMENT,\r\n      VENDOR_PREFIX,\r\n      // to recognize keyframe 40% etc which are outside the scope of our\r\n      // attribute value mode\r\n      modes.CSS_NUMBER_MODE,\r\n      {\r\n        className: 'selector-id',\r\n        begin: /#[A-Za-z0-9_-]+/,\r\n        relevance: 0\r\n      },\r\n      {\r\n        className: 'selector-class',\r\n        begin: '\\\\.' + IDENT_RE,\r\n        relevance: 0\r\n      },\r\n      modes.ATTRIBUTE_SELECTOR_MODE,\r\n      {\r\n        className: 'selector-pseudo',\r\n        variants: [\r\n          { begin: ':(' + PSEUDO_CLASSES.join('|') + ')' },\r\n          { begin: ':(:)?(' + PSEUDO_ELEMENTS.join('|') + ')' }\r\n        ]\r\n      },\r\n      // we may actually need this (12/2020)\r\n      // { // pseudo-selector params\r\n      //   begin: /\\(/,\r\n      //   end: /\\)/,\r\n      //   contains: [ hljs.CSS_NUMBER_MODE ]\r\n      // },\r\n      modes.CSS_VARIABLE,\r\n      {\r\n        className: 'attribute',\r\n        begin: '\\\\b(' + ATTRIBUTES.join('|') + ')\\\\b'\r\n      },\r\n      // attribute values\r\n      {\r\n        begin: /:/,\r\n        end: /[;}{]/,\r\n        contains: [\r\n          modes.BLOCK_COMMENT,\r\n          modes.HEXCOLOR,\r\n          modes.IMPORTANT,\r\n          modes.CSS_NUMBER_MODE,\r\n          ...STRINGS,\r\n          // needed to highlight these as strings and to avoid issues with\r\n          // illegal characters that might be inside urls that would tigger the\r\n          // languages illegal stack\r\n          {\r\n            begin: /(url|data-uri)\\(/,\r\n            end: /\\)/,\r\n            relevance: 0, // from keywords\r\n            keywords: { built_in: \"url data-uri\" },\r\n            contains: [\r\n              ...STRINGS,\r\n              {\r\n                className: \"string\",\r\n                // any character other than `)` as in `url()` will be the start\r\n                // of a string, which ends with `)` (from the parent mode)\r\n                begin: /[^)]/,\r\n                endsWithParent: true,\r\n                excludeEnd: true\r\n              }\r\n            ]\r\n          },\r\n          modes.FUNCTION_DISPATCH\r\n        ]\r\n      },\r\n      {\r\n        begin: regex.lookahead(/@/),\r\n        end: '[{;]',\r\n        relevance: 0,\r\n        illegal: /:/, // break on Less variables @var: ...\r\n        contains: [\r\n          {\r\n            className: 'keyword',\r\n            begin: AT_PROPERTY_RE\r\n          },\r\n          {\r\n            begin: /\\s/,\r\n            endsWithParent: true,\r\n            excludeEnd: true,\r\n            relevance: 0,\r\n            keywords: {\r\n              $pattern: /[a-z-]+/,\r\n              keyword: AT_MODIFIERS,\r\n              attribute: MEDIA_FEATURES.join(\" \")\r\n            },\r\n            contains: [\r\n              {\r\n                begin: /[a-z-]+(?=:)/,\r\n                className: \"attribute\"\r\n              },\r\n              ...STRINGS,\r\n              modes.CSS_NUMBER_MODE\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        className: 'selector-tag',\r\n        begin: '\\\\b(' + TAGS.join('|') + ')\\\\b'\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = css;\r\n", "/*\r\nLanguage: Markdown\r\nRequires: xml.js\r\nAuthor: John Crepezzi <john.crepezzi@gmail.com>\r\nWebsite: https://daringfireball.net/projects/markdown/\r\nCategory: common, markup\r\n*/\r\n\r\nfunction markdown(hljs) {\r\n  const regex = hljs.regex;\r\n  const INLINE_HTML = {\r\n    begin: /<\\/?[A-Za-z_]/,\r\n    end: '>',\r\n    subLanguage: 'xml',\r\n    relevance: 0\r\n  };\r\n  const HORIZONTAL_RULE = {\r\n    begin: '^[-\\\\*]{3,}',\r\n    end: '$'\r\n  };\r\n  const CODE = {\r\n    className: 'code',\r\n    variants: [\r\n      // TODO: fix to allow these to work with sublanguage also\r\n      { begin: '(`{3,})[^`](.|\\\\n)*?\\\\1`*[ ]*' },\r\n      { begin: '(~{3,})[^~](.|\\\\n)*?\\\\1~*[ ]*' },\r\n      // needed to allow markdown as a sublanguage to work\r\n      {\r\n        begin: '```',\r\n        end: '```+[ ]*$'\r\n      },\r\n      {\r\n        begin: '~~~',\r\n        end: '~~~+[ ]*$'\r\n      },\r\n      { begin: '`.+?`' },\r\n      {\r\n        begin: '(?=^( {4}|\\\\t))',\r\n        // use contains to gobble up multiple lines to allow the block to be whatever size\r\n        // but only have a single open/close tag vs one per line\r\n        contains: [\r\n          {\r\n            begin: '^( {4}|\\\\t)',\r\n            end: '(\\\\n)$'\r\n          }\r\n        ],\r\n        relevance: 0\r\n      }\r\n    ]\r\n  };\r\n  const LIST = {\r\n    className: 'bullet',\r\n    begin: '^[ \\t]*([*+-]|(\\\\d+\\\\.))(?=\\\\s+)',\r\n    end: '\\\\s+',\r\n    excludeEnd: true\r\n  };\r\n  const LINK_REFERENCE = {\r\n    begin: /^\\[[^\\n]+\\]:/,\r\n    returnBegin: true,\r\n    contains: [\r\n      {\r\n        className: 'symbol',\r\n        begin: /\\[/,\r\n        end: /\\]/,\r\n        excludeBegin: true,\r\n        excludeEnd: true\r\n      },\r\n      {\r\n        className: 'link',\r\n        begin: /:\\s*/,\r\n        end: /$/,\r\n        excludeBegin: true\r\n      }\r\n    ]\r\n  };\r\n  const URL_SCHEME = /[A-Za-z][A-Za-z0-9+.-]*/;\r\n  const LINK = {\r\n    variants: [\r\n      // too much like nested array access in so many languages\r\n      // to have any real relevance\r\n      {\r\n        begin: /\\[.+?\\]\\[.*?\\]/,\r\n        relevance: 0\r\n      },\r\n      // popular internet URLs\r\n      {\r\n        begin: /\\[.+?\\]\\(((data|javascript|mailto):|(?:http|ftp)s?:\\/\\/).*?\\)/,\r\n        relevance: 2\r\n      },\r\n      {\r\n        begin: regex.concat(/\\[.+?\\]\\(/, URL_SCHEME, /:\\/\\/.*?\\)/),\r\n        relevance: 2\r\n      },\r\n      // relative urls\r\n      {\r\n        begin: /\\[.+?\\]\\([./?&#].*?\\)/,\r\n        relevance: 1\r\n      },\r\n      // whatever else, lower relevance (might not be a link at all)\r\n      {\r\n        begin: /\\[.*?\\]\\(.*?\\)/,\r\n        relevance: 0\r\n      }\r\n    ],\r\n    returnBegin: true,\r\n    contains: [\r\n      {\r\n        // empty strings for alt or link text\r\n        match: /\\[(?=\\])/ },\r\n      {\r\n        className: 'string',\r\n        relevance: 0,\r\n        begin: '\\\\[',\r\n        end: '\\\\]',\r\n        excludeBegin: true,\r\n        returnEnd: true\r\n      },\r\n      {\r\n        className: 'link',\r\n        relevance: 0,\r\n        begin: '\\\\]\\\\(',\r\n        end: '\\\\)',\r\n        excludeBegin: true,\r\n        excludeEnd: true\r\n      },\r\n      {\r\n        className: 'symbol',\r\n        relevance: 0,\r\n        begin: '\\\\]\\\\[',\r\n        end: '\\\\]',\r\n        excludeBegin: true,\r\n        excludeEnd: true\r\n      }\r\n    ]\r\n  };\r\n  const BOLD = {\r\n    className: 'strong',\r\n    contains: [], // defined later\r\n    variants: [\r\n      {\r\n        begin: /_{2}(?!\\s)/,\r\n        end: /_{2}/\r\n      },\r\n      {\r\n        begin: /\\*{2}(?!\\s)/,\r\n        end: /\\*{2}/\r\n      }\r\n    ]\r\n  };\r\n  const ITALIC = {\r\n    className: 'emphasis',\r\n    contains: [], // defined later\r\n    variants: [\r\n      {\r\n        begin: /\\*(?![*\\s])/,\r\n        end: /\\*/\r\n      },\r\n      {\r\n        begin: /_(?![_\\s])/,\r\n        end: /_/,\r\n        relevance: 0\r\n      }\r\n    ]\r\n  };\r\n\r\n  // 3 level deep nesting is not allowed because it would create confusion\r\n  // in cases like `***testing***` because where we don't know if the last\r\n  // `***` is starting a new bold/italic or finishing the last one\r\n  const BOLD_WITHOUT_ITALIC = hljs.inherit(BOLD, { contains: [] });\r\n  const ITALIC_WITHOUT_BOLD = hljs.inherit(ITALIC, { contains: [] });\r\n  BOLD.contains.push(ITALIC_WITHOUT_BOLD);\r\n  ITALIC.contains.push(BOLD_WITHOUT_ITALIC);\r\n\r\n  let CONTAINABLE = [\r\n    INLINE_HTML,\r\n    LINK\r\n  ];\r\n\r\n  [\r\n    BOLD,\r\n    ITALIC,\r\n    BOLD_WITHOUT_ITALIC,\r\n    ITALIC_WITHOUT_BOLD\r\n  ].forEach(m => {\r\n    m.contains = m.contains.concat(CONTAINABLE);\r\n  });\r\n\r\n  CONTAINABLE = CONTAINABLE.concat(BOLD, ITALIC);\r\n\r\n  const HEADER = {\r\n    className: 'section',\r\n    variants: [\r\n      {\r\n        begin: '^#{1,6}',\r\n        end: '$',\r\n        contains: CONTAINABLE\r\n      },\r\n      {\r\n        begin: '(?=^.+?\\\\n[=-]{2,}$)',\r\n        contains: [\r\n          { begin: '^[=-]*$' },\r\n          {\r\n            begin: '^',\r\n            end: \"\\\\n\",\r\n            contains: CONTAINABLE\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n\r\n  const BLOCKQUOTE = {\r\n    className: 'quote',\r\n    begin: '^>\\\\s+',\r\n    contains: CONTAINABLE,\r\n    end: '$'\r\n  };\r\n\r\n  return {\r\n    name: 'Markdown',\r\n    aliases: [\r\n      'md',\r\n      'mkdown',\r\n      'mkd'\r\n    ],\r\n    contains: [\r\n      HEADER,\r\n      INLINE_HTML,\r\n      LIST,\r\n      BOLD,\r\n      ITALIC,\r\n      BLOCKQUOTE,\r\n      CODE,\r\n      HORIZONTAL_RULE,\r\n      LINK,\r\n      LINK_REFERENCE\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = markdown;\r\n", "/*\r\nLanguage: Diff\r\nDescription: Unified and context diff\r\nAuthor: Vasily Polovnyov <vast@whiteants.net>\r\nWebsite: https://www.gnu.org/software/diffutils/\r\nCategory: common\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction diff(hljs) {\r\n  const regex = hljs.regex;\r\n  return {\r\n    name: 'Diff',\r\n    aliases: [ 'patch' ],\r\n    contains: [\r\n      {\r\n        className: 'meta',\r\n        relevance: 10,\r\n        match: regex.either(\r\n          /^@@ +-\\d+,\\d+ +\\+\\d+,\\d+ +@@/,\r\n          /^\\*\\*\\* +\\d+,\\d+ +\\*\\*\\*\\*$/,\r\n          /^--- +\\d+,\\d+ +----$/\r\n        )\r\n      },\r\n      {\r\n        className: 'comment',\r\n        variants: [\r\n          {\r\n            begin: regex.either(\r\n              /Index: /,\r\n              /^index/,\r\n              /={3,}/,\r\n              /^-{3}/,\r\n              /^\\*{3} /,\r\n              /^\\+{3}/,\r\n              /^diff --git/\r\n            ),\r\n            end: /$/\r\n          },\r\n          { match: /^\\*{15}$/ }\r\n        ]\r\n      },\r\n      {\r\n        className: 'addition',\r\n        begin: /^\\+/,\r\n        end: /$/\r\n      },\r\n      {\r\n        className: 'deletion',\r\n        begin: /^-/,\r\n        end: /$/\r\n      },\r\n      {\r\n        className: 'addition',\r\n        begin: /^!/,\r\n        end: /$/\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = diff;\r\n", "/*\r\nLanguage: Ruby\r\nDescription: Ruby is a dynamic, open source programming language with a focus on simplicity and productivity.\r\nWebsite: https://www.ruby-lang.org/\r\nAuthor: Anton Kovalyov <anton@kovalyov.net>\r\nContributors: Peter Leonov <gojpeg@yandex.ru>, Vasily Polovnyov <vast@whiteants.net>, Loren Segal <lsegal@soen.ca>, Pascal Hurni <phi@ruby-reactive.org>, Cedric Sohrauer <sohrauer@googlemail.com>\r\nCategory: common\r\n*/\r\n\r\nfunction ruby(hljs) {\r\n  const regex = hljs.regex;\r\n  const RUBY_METHOD_RE = '([a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?)';\r\n  // TODO: move concepts like CAMEL_CASE into `modes.js`\r\n  const CLASS_NAME_RE = regex.either(\r\n    /\\b([A-Z]+[a-z0-9]+)+/,\r\n    // ends in caps\r\n    /\\b([A-Z]+[a-z0-9]+)+[A-Z]+/,\r\n  )\r\n  ;\r\n  const CLASS_NAME_WITH_NAMESPACE_RE = regex.concat(CLASS_NAME_RE, /(::\\w+)*/);\r\n  // very popular ruby built-ins that one might even assume\r\n  // are actual keywords (despite that not being the case)\r\n  const PSEUDO_KWS = [\r\n    \"include\",\r\n    \"extend\",\r\n    \"prepend\",\r\n    \"public\",\r\n    \"private\",\r\n    \"protected\",\r\n    \"raise\",\r\n    \"throw\"\r\n  ];\r\n  const RUBY_KEYWORDS = {\r\n    \"variable.constant\": [\r\n      \"__FILE__\",\r\n      \"__LINE__\",\r\n      \"__ENCODING__\"\r\n    ],\r\n    \"variable.language\": [\r\n      \"self\",\r\n      \"super\",\r\n    ],\r\n    keyword: [\r\n      \"alias\",\r\n      \"and\",\r\n      \"begin\",\r\n      \"BEGIN\",\r\n      \"break\",\r\n      \"case\",\r\n      \"class\",\r\n      \"defined\",\r\n      \"do\",\r\n      \"else\",\r\n      \"elsif\",\r\n      \"end\",\r\n      \"END\",\r\n      \"ensure\",\r\n      \"for\",\r\n      \"if\",\r\n      \"in\",\r\n      \"module\",\r\n      \"next\",\r\n      \"not\",\r\n      \"or\",\r\n      \"redo\",\r\n      \"require\",\r\n      \"rescue\",\r\n      \"retry\",\r\n      \"return\",\r\n      \"then\",\r\n      \"undef\",\r\n      \"unless\",\r\n      \"until\",\r\n      \"when\",\r\n      \"while\",\r\n      \"yield\",\r\n      ...PSEUDO_KWS\r\n    ],\r\n    built_in: [\r\n      \"proc\",\r\n      \"lambda\",\r\n      \"attr_accessor\",\r\n      \"attr_reader\",\r\n      \"attr_writer\",\r\n      \"define_method\",\r\n      \"private_constant\",\r\n      \"module_function\"\r\n    ],\r\n    literal: [\r\n      \"true\",\r\n      \"false\",\r\n      \"nil\"\r\n    ]\r\n  };\r\n  const YARDOCTAG = {\r\n    className: 'doctag',\r\n    begin: '@[A-Za-z]+'\r\n  };\r\n  const IRB_OBJECT = {\r\n    begin: '#<',\r\n    end: '>'\r\n  };\r\n  const COMMENT_MODES = [\r\n    hljs.COMMENT(\r\n      '#',\r\n      '$',\r\n      { contains: [ YARDOCTAG ] }\r\n    ),\r\n    hljs.COMMENT(\r\n      '^=begin',\r\n      '^=end',\r\n      {\r\n        contains: [ YARDOCTAG ],\r\n        relevance: 10\r\n      }\r\n    ),\r\n    hljs.COMMENT('^__END__', hljs.MATCH_NOTHING_RE)\r\n  ];\r\n  const SUBST = {\r\n    className: 'subst',\r\n    begin: /#\\{/,\r\n    end: /\\}/,\r\n    keywords: RUBY_KEYWORDS\r\n  };\r\n  const STRING = {\r\n    className: 'string',\r\n    contains: [\r\n      hljs.BACKSLASH_ESCAPE,\r\n      SUBST\r\n    ],\r\n    variants: [\r\n      {\r\n        begin: /'/,\r\n        end: /'/\r\n      },\r\n      {\r\n        begin: /\"/,\r\n        end: /\"/\r\n      },\r\n      {\r\n        begin: /`/,\r\n        end: /`/\r\n      },\r\n      {\r\n        begin: /%[qQwWx]?\\(/,\r\n        end: /\\)/\r\n      },\r\n      {\r\n        begin: /%[qQwWx]?\\[/,\r\n        end: /\\]/\r\n      },\r\n      {\r\n        begin: /%[qQwWx]?\\{/,\r\n        end: /\\}/\r\n      },\r\n      {\r\n        begin: /%[qQwWx]?</,\r\n        end: />/\r\n      },\r\n      {\r\n        begin: /%[qQwWx]?\\//,\r\n        end: /\\//\r\n      },\r\n      {\r\n        begin: /%[qQwWx]?%/,\r\n        end: /%/\r\n      },\r\n      {\r\n        begin: /%[qQwWx]?-/,\r\n        end: /-/\r\n      },\r\n      {\r\n        begin: /%[qQwWx]?\\|/,\r\n        end: /\\|/\r\n      },\r\n      // in the following expressions, \\B in the beginning suppresses recognition of ?-sequences\r\n      // where ? is the last character of a preceding identifier, as in: `func?4`\r\n      { begin: /\\B\\?(\\\\\\d{1,3})/ },\r\n      { begin: /\\B\\?(\\\\x[A-Fa-f0-9]{1,2})/ },\r\n      { begin: /\\B\\?(\\\\u\\{?[A-Fa-f0-9]{1,6}\\}?)/ },\r\n      { begin: /\\B\\?(\\\\M-\\\\C-|\\\\M-\\\\c|\\\\c\\\\M-|\\\\M-|\\\\C-\\\\M-)[\\x20-\\x7e]/ },\r\n      { begin: /\\B\\?\\\\(c|C-)[\\x20-\\x7e]/ },\r\n      { begin: /\\B\\?\\\\?\\S/ },\r\n      // heredocs\r\n      {\r\n        // this guard makes sure that we have an entire heredoc and not a false\r\n        // positive (auto-detect, etc.)\r\n        begin: regex.concat(\r\n          /<<[-~]?'?/,\r\n          regex.lookahead(/(\\w+)(?=\\W)[^\\n]*\\n(?:[^\\n]*\\n)*?\\s*\\1\\b/)\r\n        ),\r\n        contains: [\r\n          hljs.END_SAME_AS_BEGIN({\r\n            begin: /(\\w+)/,\r\n            end: /(\\w+)/,\r\n            contains: [\r\n              hljs.BACKSLASH_ESCAPE,\r\n              SUBST\r\n            ]\r\n          })\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n\r\n  // Ruby syntax is underdocumented, but this grammar seems to be accurate\r\n  // as of version 2.7.2 (confirmed with (irb and `Ripper.sexp(...)`)\r\n  // https://docs.ruby-lang.org/en/2.7.0/doc/syntax/literals_rdoc.html#label-Numbers\r\n  const decimal = '[1-9](_?[0-9])*|0';\r\n  const digits = '[0-9](_?[0-9])*';\r\n  const NUMBER = {\r\n    className: 'number',\r\n    relevance: 0,\r\n    variants: [\r\n      // decimal integer/float, optionally exponential or rational, optionally imaginary\r\n      { begin: `\\\\b(${decimal})(\\\\.(${digits}))?([eE][+-]?(${digits})|r)?i?\\\\b` },\r\n\r\n      // explicit decimal/binary/octal/hexadecimal integer,\r\n      // optionally rational and/or imaginary\r\n      { begin: \"\\\\b0[dD][0-9](_?[0-9])*r?i?\\\\b\" },\r\n      { begin: \"\\\\b0[bB][0-1](_?[0-1])*r?i?\\\\b\" },\r\n      { begin: \"\\\\b0[oO][0-7](_?[0-7])*r?i?\\\\b\" },\r\n      { begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\\\b\" },\r\n\r\n      // 0-prefixed implicit octal integer, optionally rational and/or imaginary\r\n      { begin: \"\\\\b0(_?[0-7])+r?i?\\\\b\" }\r\n    ]\r\n  };\r\n\r\n  const PARAMS = {\r\n    variants: [\r\n      {\r\n        match: /\\(\\)/,\r\n      },\r\n      {\r\n        className: 'params',\r\n        begin: /\\(/,\r\n        end: /(?=\\))/,\r\n        excludeBegin: true,\r\n        endsParent: true,\r\n        keywords: RUBY_KEYWORDS,\r\n      }\r\n    ]\r\n  };\r\n\r\n  const INCLUDE_EXTEND = {\r\n    match: [\r\n      /(include|extend)\\s+/,\r\n      CLASS_NAME_WITH_NAMESPACE_RE\r\n    ],\r\n    scope: {\r\n      2: \"title.class\"\r\n    },\r\n    keywords: RUBY_KEYWORDS\r\n  };\r\n\r\n  const CLASS_DEFINITION = {\r\n    variants: [\r\n      {\r\n        match: [\r\n          /class\\s+/,\r\n          CLASS_NAME_WITH_NAMESPACE_RE,\r\n          /\\s+<\\s+/,\r\n          CLASS_NAME_WITH_NAMESPACE_RE\r\n        ]\r\n      },\r\n      {\r\n        match: [\r\n          /\\b(class|module)\\s+/,\r\n          CLASS_NAME_WITH_NAMESPACE_RE\r\n        ]\r\n      }\r\n    ],\r\n    scope: {\r\n      2: \"title.class\",\r\n      4: \"title.class.inherited\"\r\n    },\r\n    keywords: RUBY_KEYWORDS\r\n  };\r\n\r\n  const UPPER_CASE_CONSTANT = {\r\n    relevance: 0,\r\n    match: /\\b[A-Z][A-Z_0-9]+\\b/,\r\n    className: \"variable.constant\"\r\n  };\r\n\r\n  const METHOD_DEFINITION = {\r\n    match: [\r\n      /def/, /\\s+/,\r\n      RUBY_METHOD_RE\r\n    ],\r\n    scope: {\r\n      1: \"keyword\",\r\n      3: \"title.function\"\r\n    },\r\n    contains: [\r\n      PARAMS\r\n    ]\r\n  };\r\n\r\n  const OBJECT_CREATION = {\r\n    relevance: 0,\r\n    match: [\r\n      CLASS_NAME_WITH_NAMESPACE_RE,\r\n      /\\.new[. (]/\r\n    ],\r\n    scope: {\r\n      1: \"title.class\"\r\n    }\r\n  };\r\n\r\n  // CamelCase\r\n  const CLASS_REFERENCE = {\r\n    relevance: 0,\r\n    match: CLASS_NAME_RE,\r\n    scope: \"title.class\"\r\n  };\r\n\r\n  const RUBY_DEFAULT_CONTAINS = [\r\n    STRING,\r\n    CLASS_DEFINITION,\r\n    INCLUDE_EXTEND,\r\n    OBJECT_CREATION,\r\n    UPPER_CASE_CONSTANT,\r\n    CLASS_REFERENCE,\r\n    METHOD_DEFINITION,\r\n    {\r\n      // swallow namespace qualifiers before symbols\r\n      begin: hljs.IDENT_RE + '::' },\r\n    {\r\n      className: 'symbol',\r\n      begin: hljs.UNDERSCORE_IDENT_RE + '(!|\\\\?)?:',\r\n      relevance: 0\r\n    },\r\n    {\r\n      className: 'symbol',\r\n      begin: ':(?!\\\\s)',\r\n      contains: [\r\n        STRING,\r\n        { begin: RUBY_METHOD_RE }\r\n      ],\r\n      relevance: 0\r\n    },\r\n    NUMBER,\r\n    {\r\n      // negative-look forward attempts to prevent false matches like:\r\n      // @ident@ or $ident$ that might indicate this is not ruby at all\r\n      className: \"variable\",\r\n      begin: '(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))(?=[^@$?])' + `(?![A-Za-z])(?![@$?'])`\r\n    },\r\n    {\r\n      className: 'params',\r\n      begin: /\\|/,\r\n      end: /\\|/,\r\n      excludeBegin: true,\r\n      excludeEnd: true,\r\n      relevance: 0, // this could be a lot of things (in other languages) other than params\r\n      keywords: RUBY_KEYWORDS\r\n    },\r\n    { // regexp container\r\n      begin: '(' + hljs.RE_STARTERS_RE + '|unless)\\\\s*',\r\n      keywords: 'unless',\r\n      contains: [\r\n        {\r\n          className: 'regexp',\r\n          contains: [\r\n            hljs.BACKSLASH_ESCAPE,\r\n            SUBST\r\n          ],\r\n          illegal: /\\n/,\r\n          variants: [\r\n            {\r\n              begin: '/',\r\n              end: '/[a-z]*'\r\n            },\r\n            {\r\n              begin: /%r\\{/,\r\n              end: /\\}[a-z]*/\r\n            },\r\n            {\r\n              begin: '%r\\\\(',\r\n              end: '\\\\)[a-z]*'\r\n            },\r\n            {\r\n              begin: '%r!',\r\n              end: '![a-z]*'\r\n            },\r\n            {\r\n              begin: '%r\\\\[',\r\n              end: '\\\\][a-z]*'\r\n            }\r\n          ]\r\n        }\r\n      ].concat(IRB_OBJECT, COMMENT_MODES),\r\n      relevance: 0\r\n    }\r\n  ].concat(IRB_OBJECT, COMMENT_MODES);\r\n\r\n  SUBST.contains = RUBY_DEFAULT_CONTAINS;\r\n  PARAMS.contains = RUBY_DEFAULT_CONTAINS;\r\n\r\n  // >>\r\n  // ?>\r\n  const SIMPLE_PROMPT = \"[>?]>\";\r\n  // irb(main):001:0>\r\n  const DEFAULT_PROMPT = \"[\\\\w#]+\\\\(\\\\w+\\\\):\\\\d+:\\\\d+[>*]\";\r\n  const RVM_PROMPT = \"(\\\\w+-)?\\\\d+\\\\.\\\\d+\\\\.\\\\d+(p\\\\d+)?[^\\\\d][^>]+>\";\r\n\r\n  const IRB_DEFAULT = [\r\n    {\r\n      begin: /^\\s*=>/,\r\n      starts: {\r\n        end: '$',\r\n        contains: RUBY_DEFAULT_CONTAINS\r\n      }\r\n    },\r\n    {\r\n      className: 'meta.prompt',\r\n      begin: '^(' + SIMPLE_PROMPT + \"|\" + DEFAULT_PROMPT + '|' + RVM_PROMPT + ')(?=[ ])',\r\n      starts: {\r\n        end: '$',\r\n        keywords: RUBY_KEYWORDS,\r\n        contains: RUBY_DEFAULT_CONTAINS\r\n      }\r\n    }\r\n  ];\r\n\r\n  COMMENT_MODES.unshift(IRB_OBJECT);\r\n\r\n  return {\r\n    name: 'Ruby',\r\n    aliases: [\r\n      'rb',\r\n      'gemspec',\r\n      'podspec',\r\n      'thor',\r\n      'irb'\r\n    ],\r\n    keywords: RUBY_KEYWORDS,\r\n    illegal: /\\/\\*/,\r\n    contains: [ hljs.SHEBANG({ binary: \"ruby\" }) ]\r\n      .concat(IRB_DEFAULT)\r\n      .concat(COMMENT_MODES)\r\n      .concat(RUBY_DEFAULT_CONTAINS)\r\n  };\r\n}\r\n\r\nmodule.exports = ruby;\r\n", "/*\r\nLanguage: Go\r\nAuthor: Stephan Kountso aka StepLg <steplg@gmail.com>\r\nContributors: Evgeny Stepanischev <imbolk@gmail.com>\r\nDescription: Google go language (golang). For info about language\r\nWebsite: http://golang.org/\r\nCategory: common, system\r\n*/\r\n\r\nfunction go(hljs) {\r\n  const LITERALS = [\r\n    \"true\",\r\n    \"false\",\r\n    \"iota\",\r\n    \"nil\"\r\n  ];\r\n  const BUILT_INS = [\r\n    \"append\",\r\n    \"cap\",\r\n    \"close\",\r\n    \"complex\",\r\n    \"copy\",\r\n    \"imag\",\r\n    \"len\",\r\n    \"make\",\r\n    \"new\",\r\n    \"panic\",\r\n    \"print\",\r\n    \"println\",\r\n    \"real\",\r\n    \"recover\",\r\n    \"delete\"\r\n  ];\r\n  const TYPES = [\r\n    \"bool\",\r\n    \"byte\",\r\n    \"complex64\",\r\n    \"complex128\",\r\n    \"error\",\r\n    \"float32\",\r\n    \"float64\",\r\n    \"int8\",\r\n    \"int16\",\r\n    \"int32\",\r\n    \"int64\",\r\n    \"string\",\r\n    \"uint8\",\r\n    \"uint16\",\r\n    \"uint32\",\r\n    \"uint64\",\r\n    \"int\",\r\n    \"uint\",\r\n    \"uintptr\",\r\n    \"rune\"\r\n  ];\r\n  const KWS = [\r\n    \"break\",\r\n    \"case\",\r\n    \"chan\",\r\n    \"const\",\r\n    \"continue\",\r\n    \"default\",\r\n    \"defer\",\r\n    \"else\",\r\n    \"fallthrough\",\r\n    \"for\",\r\n    \"func\",\r\n    \"go\",\r\n    \"goto\",\r\n    \"if\",\r\n    \"import\",\r\n    \"interface\",\r\n    \"map\",\r\n    \"package\",\r\n    \"range\",\r\n    \"return\",\r\n    \"select\",\r\n    \"struct\",\r\n    \"switch\",\r\n    \"type\",\r\n    \"var\",\r\n  ];\r\n  const KEYWORDS = {\r\n    keyword: KWS,\r\n    type: TYPES,\r\n    literal: LITERALS,\r\n    built_in: BUILT_INS\r\n  };\r\n  return {\r\n    name: 'Go',\r\n    aliases: [ 'golang' ],\r\n    keywords: KEYWORDS,\r\n    illegal: '</',\r\n    contains: [\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      {\r\n        className: 'string',\r\n        variants: [\r\n          hljs.QUOTE_STRING_MODE,\r\n          hljs.APOS_STRING_MODE,\r\n          {\r\n            begin: '`',\r\n            end: '`'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        className: 'number',\r\n        variants: [\r\n          {\r\n            begin: hljs.C_NUMBER_RE + '[i]',\r\n            relevance: 1\r\n          },\r\n          hljs.C_NUMBER_MODE\r\n        ]\r\n      },\r\n      { begin: /:=/ // relevance booster\r\n      },\r\n      {\r\n        className: 'function',\r\n        beginKeywords: 'func',\r\n        end: '\\\\s*(\\\\{|$)',\r\n        excludeEnd: true,\r\n        contains: [\r\n          hljs.TITLE_MODE,\r\n          {\r\n            className: 'params',\r\n            begin: /\\(/,\r\n            end: /\\)/,\r\n            endsParent: true,\r\n            keywords: KEYWORDS,\r\n            illegal: /[\"']/\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = go;\r\n", "/*\r\n Language: GraphQL\r\n Author: John Foster (GH jf990), and others\r\n Description: GraphQL is a query language for APIs\r\n Category: web, common\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction graphql(hljs) {\r\n  const regex = hljs.regex;\r\n  const GQL_NAME = /[_A-Za-z][_0-9A-Za-z]*/;\r\n  return {\r\n    name: \"GraphQL\",\r\n    aliases: [ \"gql\" ],\r\n    case_insensitive: true,\r\n    disableAutodetect: false,\r\n    keywords: {\r\n      keyword: [\r\n        \"query\",\r\n        \"mutation\",\r\n        \"subscription\",\r\n        \"type\",\r\n        \"input\",\r\n        \"schema\",\r\n        \"directive\",\r\n        \"interface\",\r\n        \"union\",\r\n        \"scalar\",\r\n        \"fragment\",\r\n        \"enum\",\r\n        \"on\"\r\n      ],\r\n      literal: [\r\n        \"true\",\r\n        \"false\",\r\n        \"null\"\r\n      ]\r\n    },\r\n    contains: [\r\n      hljs.HASH_COMMENT_MODE,\r\n      hljs.QUOTE_STRING_MODE,\r\n      hljs.NUMBER_MODE,\r\n      {\r\n        scope: \"punctuation\",\r\n        match: /[.]{3}/,\r\n        relevance: 0\r\n      },\r\n      {\r\n        scope: \"punctuation\",\r\n        begin: /[\\!\\(\\)\\:\\=\\[\\]\\{\\|\\}]{1}/,\r\n        relevance: 0\r\n      },\r\n      {\r\n        scope: \"variable\",\r\n        begin: /\\$/,\r\n        end: /\\W/,\r\n        excludeEnd: true,\r\n        relevance: 0\r\n      },\r\n      {\r\n        scope: \"meta\",\r\n        match: /@\\w+/,\r\n        excludeEnd: true\r\n      },\r\n      {\r\n        scope: \"symbol\",\r\n        begin: regex.concat(GQL_NAME, regex.lookahead(/\\s*:/)),\r\n        relevance: 0\r\n      }\r\n    ],\r\n    illegal: [\r\n      /[;<']/,\r\n      /BEGIN/\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = graphql;\r\n", "/*\r\nLanguage: TOML, also INI\r\nDescription: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.\r\nContributors: Guillaume Gomez <guillaume1.gomez@gmail.com>\r\nCategory: common, config\r\nWebsite: https://github.com/toml-lang/toml\r\n*/\r\n\r\nfunction ini(hljs) {\r\n  const regex = hljs.regex;\r\n  const NUMBERS = {\r\n    className: 'number',\r\n    relevance: 0,\r\n    variants: [\r\n      { begin: /([+-]+)?[\\d]+_[\\d_]+/ },\r\n      { begin: hljs.NUMBER_RE }\r\n    ]\r\n  };\r\n  const COMMENTS = hljs.COMMENT();\r\n  COMMENTS.variants = [\r\n    {\r\n      begin: /;/,\r\n      end: /$/\r\n    },\r\n    {\r\n      begin: /#/,\r\n      end: /$/\r\n    }\r\n  ];\r\n  const VARIABLES = {\r\n    className: 'variable',\r\n    variants: [\r\n      { begin: /\\$[\\w\\d\"][\\w\\d_]*/ },\r\n      { begin: /\\$\\{(.*?)\\}/ }\r\n    ]\r\n  };\r\n  const LITERALS = {\r\n    className: 'literal',\r\n    begin: /\\bon|off|true|false|yes|no\\b/\r\n  };\r\n  const STRINGS = {\r\n    className: \"string\",\r\n    contains: [ hljs.BACKSLASH_ESCAPE ],\r\n    variants: [\r\n      {\r\n        begin: \"'''\",\r\n        end: \"'''\",\r\n        relevance: 10\r\n      },\r\n      {\r\n        begin: '\"\"\"',\r\n        end: '\"\"\"',\r\n        relevance: 10\r\n      },\r\n      {\r\n        begin: '\"',\r\n        end: '\"'\r\n      },\r\n      {\r\n        begin: \"'\",\r\n        end: \"'\"\r\n      }\r\n    ]\r\n  };\r\n  const ARRAY = {\r\n    begin: /\\[/,\r\n    end: /\\]/,\r\n    contains: [\r\n      COMMENTS,\r\n      LITERALS,\r\n      VARIABLES,\r\n      STRINGS,\r\n      NUMBERS,\r\n      'self'\r\n    ],\r\n    relevance: 0\r\n  };\r\n\r\n  const BARE_KEY = /[A-Za-z0-9_-]+/;\r\n  const QUOTED_KEY_DOUBLE_QUOTE = /\"(\\\\\"|[^\"])*\"/;\r\n  const QUOTED_KEY_SINGLE_QUOTE = /'[^']*'/;\r\n  const ANY_KEY = regex.either(\r\n    BARE_KEY, QUOTED_KEY_DOUBLE_QUOTE, QUOTED_KEY_SINGLE_QUOTE\r\n  );\r\n  const DOTTED_KEY = regex.concat(\r\n    ANY_KEY, '(\\\\s*\\\\.\\\\s*', ANY_KEY, ')*',\r\n    regex.lookahead(/\\s*=\\s*[^#\\s]/)\r\n  );\r\n\r\n  return {\r\n    name: 'TOML, also INI',\r\n    aliases: [ 'toml' ],\r\n    case_insensitive: true,\r\n    illegal: /\\S/,\r\n    contains: [\r\n      COMMENTS,\r\n      {\r\n        className: 'section',\r\n        begin: /\\[+/,\r\n        end: /\\]+/\r\n      },\r\n      {\r\n        begin: DOTTED_KEY,\r\n        className: 'attr',\r\n        starts: {\r\n          end: /$/,\r\n          contains: [\r\n            COMMENTS,\r\n            ARRAY,\r\n            LITERALS,\r\n            VARIABLES,\r\n            STRINGS,\r\n            NUMBERS\r\n          ]\r\n        }\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = ini;\r\n", "// https://docs.oracle.com/javase/specs/jls/se15/html/jls-3.html#jls-3.10\r\nvar decimalDigits = '[0-9](_*[0-9])*';\r\nvar frac = `\\\\.(${decimalDigits})`;\r\nvar hexDigits = '[0-9a-fA-F](_*[0-9a-fA-F])*';\r\nvar NUMERIC = {\r\n  className: 'number',\r\n  variants: [\r\n    // DecimalFloatingPointLiteral\r\n    // including ExponentPart\r\n    { begin: `(\\\\b(${decimalDigits})((${frac})|\\\\.)?|(${frac}))` +\r\n      `[eE][+-]?(${decimalDigits})[fFdD]?\\\\b` },\r\n    // excluding ExponentPart\r\n    { begin: `\\\\b(${decimalDigits})((${frac})[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)` },\r\n    { begin: `(${frac})[fFdD]?\\\\b` },\r\n    { begin: `\\\\b(${decimalDigits})[fFdD]\\\\b` },\r\n\r\n    // HexadecimalFloatingPointLiteral\r\n    { begin: `\\\\b0[xX]((${hexDigits})\\\\.?|(${hexDigits})?\\\\.(${hexDigits}))` +\r\n      `[pP][+-]?(${decimalDigits})[fFdD]?\\\\b` },\r\n\r\n    // DecimalIntegerLiteral\r\n    { begin: '\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b' },\r\n\r\n    // HexIntegerLiteral\r\n    { begin: `\\\\b0[xX](${hexDigits})[lL]?\\\\b` },\r\n\r\n    // OctalIntegerLiteral\r\n    { begin: '\\\\b0(_*[0-7])*[lL]?\\\\b' },\r\n\r\n    // BinaryIntegerLiteral\r\n    { begin: '\\\\b0[bB][01](_*[01])*[lL]?\\\\b' },\r\n  ],\r\n  relevance: 0\r\n};\r\n\r\n/*\r\nLanguage: Java\r\nAuthor: Vsevolod Solovyov <vsevolod.solovyov@gmail.com>\r\nCategory: common, enterprise\r\nWebsite: https://www.java.com/\r\n*/\r\n\r\n/**\r\n * Allows recursive regex expressions to a given depth\r\n *\r\n * ie: recurRegex(\"(abc~~~)\", /~~~/g, 2) becomes:\r\n * (abc(abc(abc)))\r\n *\r\n * @param {string} re\r\n * @param {RegExp} substitution (should be a g mode regex)\r\n * @param {number} depth\r\n * @returns {string}``\r\n */\r\nfunction recurRegex(re, substitution, depth) {\r\n  if (depth === -1) return \"\";\r\n\r\n  return re.replace(substitution, _ => {\r\n    return recurRegex(re, substitution, depth - 1);\r\n  });\r\n}\r\n\r\n/** @type LanguageFn */\r\nfunction java(hljs) {\r\n  const regex = hljs.regex;\r\n  const JAVA_IDENT_RE = '[\\u00C0-\\u02B8a-zA-Z_$][\\u00C0-\\u02B8a-zA-Z_$0-9]*';\r\n  const GENERIC_IDENT_RE = JAVA_IDENT_RE\r\n    + recurRegex('(?:<' + JAVA_IDENT_RE + '~~~(?:\\\\s*,\\\\s*' + JAVA_IDENT_RE + '~~~)*>)?', /~~~/g, 2);\r\n  const MAIN_KEYWORDS = [\r\n    'synchronized',\r\n    'abstract',\r\n    'private',\r\n    'var',\r\n    'static',\r\n    'if',\r\n    'const ',\r\n    'for',\r\n    'while',\r\n    'strictfp',\r\n    'finally',\r\n    'protected',\r\n    'import',\r\n    'native',\r\n    'final',\r\n    'void',\r\n    'enum',\r\n    'else',\r\n    'break',\r\n    'transient',\r\n    'catch',\r\n    'instanceof',\r\n    'volatile',\r\n    'case',\r\n    'assert',\r\n    'package',\r\n    'default',\r\n    'public',\r\n    'try',\r\n    'switch',\r\n    'continue',\r\n    'throws',\r\n    'protected',\r\n    'public',\r\n    'private',\r\n    'module',\r\n    'requires',\r\n    'exports',\r\n    'do',\r\n    'sealed',\r\n    'yield',\r\n    'permits'\r\n  ];\r\n\r\n  const BUILT_INS = [\r\n    'super',\r\n    'this'\r\n  ];\r\n\r\n  const LITERALS = [\r\n    'false',\r\n    'true',\r\n    'null'\r\n  ];\r\n\r\n  const TYPES = [\r\n    'char',\r\n    'boolean',\r\n    'long',\r\n    'float',\r\n    'int',\r\n    'byte',\r\n    'short',\r\n    'double'\r\n  ];\r\n\r\n  const KEYWORDS = {\r\n    keyword: MAIN_KEYWORDS,\r\n    literal: LITERALS,\r\n    type: TYPES,\r\n    built_in: BUILT_INS\r\n  };\r\n\r\n  const ANNOTATION = {\r\n    className: 'meta',\r\n    begin: '@' + JAVA_IDENT_RE,\r\n    contains: [\r\n      {\r\n        begin: /\\(/,\r\n        end: /\\)/,\r\n        contains: [ \"self\" ] // allow nested () inside our annotation\r\n      }\r\n    ]\r\n  };\r\n  const PARAMS = {\r\n    className: 'params',\r\n    begin: /\\(/,\r\n    end: /\\)/,\r\n    keywords: KEYWORDS,\r\n    relevance: 0,\r\n    contains: [ hljs.C_BLOCK_COMMENT_MODE ],\r\n    endsParent: true\r\n  };\r\n\r\n  return {\r\n    name: 'Java',\r\n    aliases: [ 'jsp' ],\r\n    keywords: KEYWORDS,\r\n    illegal: /<\\/|#/,\r\n    contains: [\r\n      hljs.COMMENT(\r\n        '/\\\\*\\\\*',\r\n        '\\\\*/',\r\n        {\r\n          relevance: 0,\r\n          contains: [\r\n            {\r\n              // eat up @'s in emails to prevent them to be recognized as doctags\r\n              begin: /\\w+@/,\r\n              relevance: 0\r\n            },\r\n            {\r\n              className: 'doctag',\r\n              begin: '@[A-Za-z]+'\r\n            }\r\n          ]\r\n        }\r\n      ),\r\n      // relevance boost\r\n      {\r\n        begin: /import java\\.[a-z]+\\./,\r\n        keywords: \"import\",\r\n        relevance: 2\r\n      },\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      {\r\n        begin: /\"\"\"/,\r\n        end: /\"\"\"/,\r\n        className: \"string\",\r\n        contains: [ hljs.BACKSLASH_ESCAPE ]\r\n      },\r\n      hljs.APOS_STRING_MODE,\r\n      hljs.QUOTE_STRING_MODE,\r\n      {\r\n        match: [\r\n          /\\b(?:class|interface|enum|extends|implements|new)/,\r\n          /\\s+/,\r\n          JAVA_IDENT_RE\r\n        ],\r\n        className: {\r\n          1: \"keyword\",\r\n          3: \"title.class\"\r\n        }\r\n      },\r\n      {\r\n        // Exceptions for hyphenated keywords\r\n        match: /non-sealed/,\r\n        scope: \"keyword\"\r\n      },\r\n      {\r\n        begin: [\r\n          regex.concat(/(?!else)/, JAVA_IDENT_RE),\r\n          /\\s+/,\r\n          JAVA_IDENT_RE,\r\n          /\\s+/,\r\n          /=(?!=)/\r\n        ],\r\n        className: {\r\n          1: \"type\",\r\n          3: \"variable\",\r\n          5: \"operator\"\r\n        }\r\n      },\r\n      {\r\n        begin: [\r\n          /record/,\r\n          /\\s+/,\r\n          JAVA_IDENT_RE\r\n        ],\r\n        className: {\r\n          1: \"keyword\",\r\n          3: \"title.class\"\r\n        },\r\n        contains: [\r\n          PARAMS,\r\n          hljs.C_LINE_COMMENT_MODE,\r\n          hljs.C_BLOCK_COMMENT_MODE\r\n        ]\r\n      },\r\n      {\r\n        // Expression keywords prevent 'keyword Name(...)' from being\r\n        // recognized as a function definition\r\n        beginKeywords: 'new throw return else',\r\n        relevance: 0\r\n      },\r\n      {\r\n        begin: [\r\n          '(?:' + GENERIC_IDENT_RE + '\\\\s+)',\r\n          hljs.UNDERSCORE_IDENT_RE,\r\n          /\\s*(?=\\()/\r\n        ],\r\n        className: { 2: \"title.function\" },\r\n        keywords: KEYWORDS,\r\n        contains: [\r\n          {\r\n            className: 'params',\r\n            begin: /\\(/,\r\n            end: /\\)/,\r\n            keywords: KEYWORDS,\r\n            relevance: 0,\r\n            contains: [\r\n              ANNOTATION,\r\n              hljs.APOS_STRING_MODE,\r\n              hljs.QUOTE_STRING_MODE,\r\n              NUMERIC,\r\n              hljs.C_BLOCK_COMMENT_MODE\r\n            ]\r\n          },\r\n          hljs.C_LINE_COMMENT_MODE,\r\n          hljs.C_BLOCK_COMMENT_MODE\r\n        ]\r\n      },\r\n      NUMERIC,\r\n      ANNOTATION\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = java;\r\n", "const IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\r\nconst KEYWORDS = [\r\n  \"as\", // for exports\r\n  \"in\",\r\n  \"of\",\r\n  \"if\",\r\n  \"for\",\r\n  \"while\",\r\n  \"finally\",\r\n  \"var\",\r\n  \"new\",\r\n  \"function\",\r\n  \"do\",\r\n  \"return\",\r\n  \"void\",\r\n  \"else\",\r\n  \"break\",\r\n  \"catch\",\r\n  \"instanceof\",\r\n  \"with\",\r\n  \"throw\",\r\n  \"case\",\r\n  \"default\",\r\n  \"try\",\r\n  \"switch\",\r\n  \"continue\",\r\n  \"typeof\",\r\n  \"delete\",\r\n  \"let\",\r\n  \"yield\",\r\n  \"const\",\r\n  \"class\",\r\n  // JS handles these with a special rule\r\n  // \"get\",\r\n  // \"set\",\r\n  \"debugger\",\r\n  \"async\",\r\n  \"await\",\r\n  \"static\",\r\n  \"import\",\r\n  \"from\",\r\n  \"export\",\r\n  \"extends\"\r\n];\r\nconst LITERALS = [\r\n  \"true\",\r\n  \"false\",\r\n  \"null\",\r\n  \"undefined\",\r\n  \"NaN\",\r\n  \"Infinity\"\r\n];\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\r\nconst TYPES = [\r\n  // Fundamental objects\r\n  \"Object\",\r\n  \"Function\",\r\n  \"Boolean\",\r\n  \"Symbol\",\r\n  // numbers and dates\r\n  \"Math\",\r\n  \"Date\",\r\n  \"Number\",\r\n  \"BigInt\",\r\n  // text\r\n  \"String\",\r\n  \"RegExp\",\r\n  // Indexed collections\r\n  \"Array\",\r\n  \"Float32Array\",\r\n  \"Float64Array\",\r\n  \"Int8Array\",\r\n  \"Uint8Array\",\r\n  \"Uint8ClampedArray\",\r\n  \"Int16Array\",\r\n  \"Int32Array\",\r\n  \"Uint16Array\",\r\n  \"Uint32Array\",\r\n  \"BigInt64Array\",\r\n  \"BigUint64Array\",\r\n  // Keyed collections\r\n  \"Set\",\r\n  \"Map\",\r\n  \"WeakSet\",\r\n  \"WeakMap\",\r\n  // Structured data\r\n  \"ArrayBuffer\",\r\n  \"SharedArrayBuffer\",\r\n  \"Atomics\",\r\n  \"DataView\",\r\n  \"JSON\",\r\n  // Control abstraction objects\r\n  \"Promise\",\r\n  \"Generator\",\r\n  \"GeneratorFunction\",\r\n  \"AsyncFunction\",\r\n  // Reflection\r\n  \"Reflect\",\r\n  \"Proxy\",\r\n  // Internationalization\r\n  \"Intl\",\r\n  // WebAssembly\r\n  \"WebAssembly\"\r\n];\r\n\r\nconst ERROR_TYPES = [\r\n  \"Error\",\r\n  \"EvalError\",\r\n  \"InternalError\",\r\n  \"RangeError\",\r\n  \"ReferenceError\",\r\n  \"SyntaxError\",\r\n  \"TypeError\",\r\n  \"URIError\"\r\n];\r\n\r\nconst BUILT_IN_GLOBALS = [\r\n  \"setInterval\",\r\n  \"setTimeout\",\r\n  \"clearInterval\",\r\n  \"clearTimeout\",\r\n\r\n  \"require\",\r\n  \"exports\",\r\n\r\n  \"eval\",\r\n  \"isFinite\",\r\n  \"isNaN\",\r\n  \"parseFloat\",\r\n  \"parseInt\",\r\n  \"decodeURI\",\r\n  \"decodeURIComponent\",\r\n  \"encodeURI\",\r\n  \"encodeURIComponent\",\r\n  \"escape\",\r\n  \"unescape\"\r\n];\r\n\r\nconst BUILT_IN_VARIABLES = [\r\n  \"arguments\",\r\n  \"this\",\r\n  \"super\",\r\n  \"console\",\r\n  \"window\",\r\n  \"document\",\r\n  \"localStorage\",\r\n  \"sessionStorage\",\r\n  \"module\",\r\n  \"global\" // Node.js\r\n];\r\n\r\nconst BUILT_INS = [].concat(\r\n  BUILT_IN_GLOBALS,\r\n  TYPES,\r\n  ERROR_TYPES\r\n);\r\n\r\n/*\r\nLanguage: JavaScript\r\nDescription: JavaScript (JS) is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions.\r\nCategory: common, scripting, web\r\nWebsite: https://developer.mozilla.org/en-US/docs/Web/JavaScript\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction javascript(hljs) {\r\n  const regex = hljs.regex;\r\n  /**\r\n   * Takes a string like \"<Booger\" and checks to see\r\n   * if we can find a matching \"</Booger\" later in the\r\n   * content.\r\n   * @param {RegExpMatchArray} match\r\n   * @param {{after:number}} param1\r\n   */\r\n  const hasClosingTag = (match, { after }) => {\r\n    const tag = \"</\" + match[0].slice(1);\r\n    const pos = match.input.indexOf(tag, after);\r\n    return pos !== -1;\r\n  };\r\n\r\n  const IDENT_RE$1 = IDENT_RE;\r\n  const FRAGMENT = {\r\n    begin: '<>',\r\n    end: '</>'\r\n  };\r\n  // to avoid some special cases inside isTrulyOpeningTag\r\n  const XML_SELF_CLOSING = /<[A-Za-z0-9\\\\._:-]+\\s*\\/>/;\r\n  const XML_TAG = {\r\n    begin: /<[A-Za-z0-9\\\\._:-]+/,\r\n    end: /\\/[A-Za-z0-9\\\\._:-]+>|\\/>/,\r\n    /**\r\n     * @param {RegExpMatchArray} match\r\n     * @param {CallbackResponse} response\r\n     */\r\n    isTrulyOpeningTag: (match, response) => {\r\n      const afterMatchIndex = match[0].length + match.index;\r\n      const nextChar = match.input[afterMatchIndex];\r\n      if (\r\n        // HTML should not include another raw `<` inside a tag\r\n        // nested type?\r\n        // `<Array<Array<number>>`, etc.\r\n        nextChar === \"<\" ||\r\n        // the , gives away that this is not HTML\r\n        // `<T, A extends keyof T, V>`\r\n        nextChar === \",\"\r\n        ) {\r\n        response.ignoreMatch();\r\n        return;\r\n      }\r\n\r\n      // `<something>`\r\n      // Quite possibly a tag, lets look for a matching closing tag...\r\n      if (nextChar === \">\") {\r\n        // if we cannot find a matching closing tag, then we\r\n        // will ignore it\r\n        if (!hasClosingTag(match, { after: afterMatchIndex })) {\r\n          response.ignoreMatch();\r\n        }\r\n      }\r\n\r\n      // `<blah />` (self-closing)\r\n      // handled by simpleSelfClosing rule\r\n\r\n      let m;\r\n      const afterMatch = match.input.substring(afterMatchIndex);\r\n\r\n      // some more template typing stuff\r\n      //  <T = any>(key?: string) => Modify<\r\n      if ((m = afterMatch.match(/^\\s*=/))) {\r\n        response.ignoreMatch();\r\n        return;\r\n      }\r\n\r\n      // `<From extends string>`\r\n      // technically this could be HTML, but it smells like a type\r\n      // NOTE: This is ugh, but added specifically for https://github.com/highlightjs/highlight.js/issues/3276\r\n      if ((m = afterMatch.match(/^\\s+extends\\s+/))) {\r\n        if (m.index === 0) {\r\n          response.ignoreMatch();\r\n          // eslint-disable-next-line no-useless-return\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const KEYWORDS$1 = {\r\n    $pattern: IDENT_RE,\r\n    keyword: KEYWORDS,\r\n    literal: LITERALS,\r\n    built_in: BUILT_INS,\r\n    \"variable.language\": BUILT_IN_VARIABLES\r\n  };\r\n\r\n  // https://tc39.es/ecma262/#sec-literals-numeric-literals\r\n  const decimalDigits = '[0-9](_?[0-9])*';\r\n  const frac = `\\\\.(${decimalDigits})`;\r\n  // DecimalIntegerLiteral, including Annex B NonOctalDecimalIntegerLiteral\r\n  // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\r\n  const decimalInteger = `0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*`;\r\n  const NUMBER = {\r\n    className: 'number',\r\n    variants: [\r\n      // DecimalLiteral\r\n      { begin: `(\\\\b(${decimalInteger})((${frac})|\\\\.)?|(${frac}))` +\r\n        `[eE][+-]?(${decimalDigits})\\\\b` },\r\n      { begin: `\\\\b(${decimalInteger})\\\\b((${frac})\\\\b|\\\\.)?|(${frac})\\\\b` },\r\n\r\n      // DecimalBigIntegerLiteral\r\n      { begin: `\\\\b(0|[1-9](_?[0-9])*)n\\\\b` },\r\n\r\n      // NonDecimalIntegerLiteral\r\n      { begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\b\" },\r\n      { begin: \"\\\\b0[bB][0-1](_?[0-1])*n?\\\\b\" },\r\n      { begin: \"\\\\b0[oO][0-7](_?[0-7])*n?\\\\b\" },\r\n\r\n      // LegacyOctalIntegerLiteral (does not include underscore separators)\r\n      // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\r\n      { begin: \"\\\\b0[0-7]+n?\\\\b\" },\r\n    ],\r\n    relevance: 0\r\n  };\r\n\r\n  const SUBST = {\r\n    className: 'subst',\r\n    begin: '\\\\$\\\\{',\r\n    end: '\\\\}',\r\n    keywords: KEYWORDS$1,\r\n    contains: [] // defined later\r\n  };\r\n  const HTML_TEMPLATE = {\r\n    begin: 'html`',\r\n    end: '',\r\n    starts: {\r\n      end: '`',\r\n      returnEnd: false,\r\n      contains: [\r\n        hljs.BACKSLASH_ESCAPE,\r\n        SUBST\r\n      ],\r\n      subLanguage: 'xml'\r\n    }\r\n  };\r\n  const CSS_TEMPLATE = {\r\n    begin: 'css`',\r\n    end: '',\r\n    starts: {\r\n      end: '`',\r\n      returnEnd: false,\r\n      contains: [\r\n        hljs.BACKSLASH_ESCAPE,\r\n        SUBST\r\n      ],\r\n      subLanguage: 'css'\r\n    }\r\n  };\r\n  const GRAPHQL_TEMPLATE = {\r\n    begin: 'gql`',\r\n    end: '',\r\n    starts: {\r\n      end: '`',\r\n      returnEnd: false,\r\n      contains: [\r\n        hljs.BACKSLASH_ESCAPE,\r\n        SUBST\r\n      ],\r\n      subLanguage: 'graphql'\r\n    }\r\n  };\r\n  const TEMPLATE_STRING = {\r\n    className: 'string',\r\n    begin: '`',\r\n    end: '`',\r\n    contains: [\r\n      hljs.BACKSLASH_ESCAPE,\r\n      SUBST\r\n    ]\r\n  };\r\n  const JSDOC_COMMENT = hljs.COMMENT(\r\n    /\\/\\*\\*(?!\\/)/,\r\n    '\\\\*/',\r\n    {\r\n      relevance: 0,\r\n      contains: [\r\n        {\r\n          begin: '(?=@[A-Za-z]+)',\r\n          relevance: 0,\r\n          contains: [\r\n            {\r\n              className: 'doctag',\r\n              begin: '@[A-Za-z]+'\r\n            },\r\n            {\r\n              className: 'type',\r\n              begin: '\\\\{',\r\n              end: '\\\\}',\r\n              excludeEnd: true,\r\n              excludeBegin: true,\r\n              relevance: 0\r\n            },\r\n            {\r\n              className: 'variable',\r\n              begin: IDENT_RE$1 + '(?=\\\\s*(-)|$)',\r\n              endsParent: true,\r\n              relevance: 0\r\n            },\r\n            // eat spaces (not newlines) so we can find\r\n            // types or variables\r\n            {\r\n              begin: /(?=[^\\n])\\s/,\r\n              relevance: 0\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  );\r\n  const COMMENT = {\r\n    className: \"comment\",\r\n    variants: [\r\n      JSDOC_COMMENT,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      hljs.C_LINE_COMMENT_MODE\r\n    ]\r\n  };\r\n  const SUBST_INTERNALS = [\r\n    hljs.APOS_STRING_MODE,\r\n    hljs.QUOTE_STRING_MODE,\r\n    HTML_TEMPLATE,\r\n    CSS_TEMPLATE,\r\n    GRAPHQL_TEMPLATE,\r\n    TEMPLATE_STRING,\r\n    // Skip numbers when they are part of a variable name\r\n    { match: /\\$\\d+/ },\r\n    NUMBER,\r\n    // This is intentional:\r\n    // See https://github.com/highlightjs/highlight.js/issues/3288\r\n    // hljs.REGEXP_MODE\r\n  ];\r\n  SUBST.contains = SUBST_INTERNALS\r\n    .concat({\r\n      // we need to pair up {} inside our subst to prevent\r\n      // it from ending too early by matching another }\r\n      begin: /\\{/,\r\n      end: /\\}/,\r\n      keywords: KEYWORDS$1,\r\n      contains: [\r\n        \"self\"\r\n      ].concat(SUBST_INTERNALS)\r\n    });\r\n  const SUBST_AND_COMMENTS = [].concat(COMMENT, SUBST.contains);\r\n  const PARAMS_CONTAINS = SUBST_AND_COMMENTS.concat([\r\n    // eat recursive parens in sub expressions\r\n    {\r\n      begin: /\\(/,\r\n      end: /\\)/,\r\n      keywords: KEYWORDS$1,\r\n      contains: [\"self\"].concat(SUBST_AND_COMMENTS)\r\n    }\r\n  ]);\r\n  const PARAMS = {\r\n    className: 'params',\r\n    begin: /\\(/,\r\n    end: /\\)/,\r\n    excludeBegin: true,\r\n    excludeEnd: true,\r\n    keywords: KEYWORDS$1,\r\n    contains: PARAMS_CONTAINS\r\n  };\r\n\r\n  // ES6 classes\r\n  const CLASS_OR_EXTENDS = {\r\n    variants: [\r\n      // class Car extends vehicle\r\n      {\r\n        match: [\r\n          /class/,\r\n          /\\s+/,\r\n          IDENT_RE$1,\r\n          /\\s+/,\r\n          /extends/,\r\n          /\\s+/,\r\n          regex.concat(IDENT_RE$1, \"(\", regex.concat(/\\./, IDENT_RE$1), \")*\")\r\n        ],\r\n        scope: {\r\n          1: \"keyword\",\r\n          3: \"title.class\",\r\n          5: \"keyword\",\r\n          7: \"title.class.inherited\"\r\n        }\r\n      },\r\n      // class Car\r\n      {\r\n        match: [\r\n          /class/,\r\n          /\\s+/,\r\n          IDENT_RE$1\r\n        ],\r\n        scope: {\r\n          1: \"keyword\",\r\n          3: \"title.class\"\r\n        }\r\n      },\r\n\r\n    ]\r\n  };\r\n\r\n  const CLASS_REFERENCE = {\r\n    relevance: 0,\r\n    match:\r\n    regex.either(\r\n      // Hard coded exceptions\r\n      /\\bJSON/,\r\n      // Float32Array, OutT\r\n      /\\b[A-Z][a-z]+([A-Z][a-z]*|\\d)*/,\r\n      // CSSFactory, CSSFactoryT\r\n      /\\b[A-Z]{2,}([A-Z][a-z]+|\\d)+([A-Z][a-z]*)*/,\r\n      // FPs, FPsT\r\n      /\\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\\d)*([A-Z][a-z]*)*/,\r\n      // P\r\n      // single letters are not highlighted\r\n      // BLAH\r\n      // this will be flagged as a UPPER_CASE_CONSTANT instead\r\n    ),\r\n    className: \"title.class\",\r\n    keywords: {\r\n      _: [\r\n        // se we still get relevance credit for JS library classes\r\n        ...TYPES,\r\n        ...ERROR_TYPES\r\n      ]\r\n    }\r\n  };\r\n\r\n  const USE_STRICT = {\r\n    label: \"use_strict\",\r\n    className: 'meta',\r\n    relevance: 10,\r\n    begin: /^\\s*['\"]use (strict|asm)['\"]/\r\n  };\r\n\r\n  const FUNCTION_DEFINITION = {\r\n    variants: [\r\n      {\r\n        match: [\r\n          /function/,\r\n          /\\s+/,\r\n          IDENT_RE$1,\r\n          /(?=\\s*\\()/\r\n        ]\r\n      },\r\n      // anonymous function\r\n      {\r\n        match: [\r\n          /function/,\r\n          /\\s*(?=\\()/\r\n        ]\r\n      }\r\n    ],\r\n    className: {\r\n      1: \"keyword\",\r\n      3: \"title.function\"\r\n    },\r\n    label: \"func.def\",\r\n    contains: [ PARAMS ],\r\n    illegal: /%/\r\n  };\r\n\r\n  const UPPER_CASE_CONSTANT = {\r\n    relevance: 0,\r\n    match: /\\b[A-Z][A-Z_0-9]+\\b/,\r\n    className: \"variable.constant\"\r\n  };\r\n\r\n  function noneOf(list) {\r\n    return regex.concat(\"(?!\", list.join(\"|\"), \")\");\r\n  }\r\n\r\n  const FUNCTION_CALL = {\r\n    match: regex.concat(\r\n      /\\b/,\r\n      noneOf([\r\n        ...BUILT_IN_GLOBALS,\r\n        \"super\",\r\n        \"import\"\r\n      ]),\r\n      IDENT_RE$1, regex.lookahead(/\\(/)),\r\n    className: \"title.function\",\r\n    relevance: 0\r\n  };\r\n\r\n  const PROPERTY_ACCESS = {\r\n    begin: regex.concat(/\\./, regex.lookahead(\r\n      regex.concat(IDENT_RE$1, /(?![0-9A-Za-z$_(])/)\r\n    )),\r\n    end: IDENT_RE$1,\r\n    excludeBegin: true,\r\n    keywords: \"prototype\",\r\n    className: \"property\",\r\n    relevance: 0\r\n  };\r\n\r\n  const GETTER_OR_SETTER = {\r\n    match: [\r\n      /get|set/,\r\n      /\\s+/,\r\n      IDENT_RE$1,\r\n      /(?=\\()/\r\n    ],\r\n    className: {\r\n      1: \"keyword\",\r\n      3: \"title.function\"\r\n    },\r\n    contains: [\r\n      { // eat to avoid empty params\r\n        begin: /\\(\\)/\r\n      },\r\n      PARAMS\r\n    ]\r\n  };\r\n\r\n  const FUNC_LEAD_IN_RE = '(\\\\(' +\r\n    '[^()]*(\\\\(' +\r\n    '[^()]*(\\\\(' +\r\n    '[^()]*' +\r\n    '\\\\)[^()]*)*' +\r\n    '\\\\)[^()]*)*' +\r\n    '\\\\)|' + hljs.UNDERSCORE_IDENT_RE + ')\\\\s*=>';\r\n\r\n  const FUNCTION_VARIABLE = {\r\n    match: [\r\n      /const|var|let/, /\\s+/,\r\n      IDENT_RE$1, /\\s*/,\r\n      /=\\s*/,\r\n      /(async\\s*)?/, // async is optional\r\n      regex.lookahead(FUNC_LEAD_IN_RE)\r\n    ],\r\n    keywords: \"async\",\r\n    className: {\r\n      1: \"keyword\",\r\n      3: \"title.function\"\r\n    },\r\n    contains: [\r\n      PARAMS\r\n    ]\r\n  };\r\n\r\n  return {\r\n    name: 'JavaScript',\r\n    aliases: ['js', 'jsx', 'mjs', 'cjs'],\r\n    keywords: KEYWORDS$1,\r\n    // this will be extended by TypeScript\r\n    exports: { PARAMS_CONTAINS, CLASS_REFERENCE },\r\n    illegal: /#(?![$_A-z])/,\r\n    contains: [\r\n      hljs.SHEBANG({\r\n        label: \"shebang\",\r\n        binary: \"node\",\r\n        relevance: 5\r\n      }),\r\n      USE_STRICT,\r\n      hljs.APOS_STRING_MODE,\r\n      hljs.QUOTE_STRING_MODE,\r\n      HTML_TEMPLATE,\r\n      CSS_TEMPLATE,\r\n      GRAPHQL_TEMPLATE,\r\n      TEMPLATE_STRING,\r\n      COMMENT,\r\n      // Skip numbers when they are part of a variable name\r\n      { match: /\\$\\d+/ },\r\n      NUMBER,\r\n      CLASS_REFERENCE,\r\n      {\r\n        className: 'attr',\r\n        begin: IDENT_RE$1 + regex.lookahead(':'),\r\n        relevance: 0\r\n      },\r\n      FUNCTION_VARIABLE,\r\n      { // \"value\" container\r\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\r\n        keywords: 'return throw case',\r\n        relevance: 0,\r\n        contains: [\r\n          COMMENT,\r\n          hljs.REGEXP_MODE,\r\n          {\r\n            className: 'function',\r\n            // we have to count the parens to make sure we actually have the\r\n            // correct bounding ( ) before the =>.  There could be any number of\r\n            // sub-expressions inside also surrounded by parens.\r\n            begin: FUNC_LEAD_IN_RE,\r\n            returnBegin: true,\r\n            end: '\\\\s*=>',\r\n            contains: [\r\n              {\r\n                className: 'params',\r\n                variants: [\r\n                  {\r\n                    begin: hljs.UNDERSCORE_IDENT_RE,\r\n                    relevance: 0\r\n                  },\r\n                  {\r\n                    className: null,\r\n                    begin: /\\(\\s*\\)/,\r\n                    skip: true\r\n                  },\r\n                  {\r\n                    begin: /\\(/,\r\n                    end: /\\)/,\r\n                    excludeBegin: true,\r\n                    excludeEnd: true,\r\n                    keywords: KEYWORDS$1,\r\n                    contains: PARAMS_CONTAINS\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          { // could be a comma delimited list of params to a function call\r\n            begin: /,/,\r\n            relevance: 0\r\n          },\r\n          {\r\n            match: /\\s+/,\r\n            relevance: 0\r\n          },\r\n          { // JSX\r\n            variants: [\r\n              { begin: FRAGMENT.begin, end: FRAGMENT.end },\r\n              { match: XML_SELF_CLOSING },\r\n              {\r\n                begin: XML_TAG.begin,\r\n                // we carefully check the opening tag to see if it truly\r\n                // is a tag and not a false positive\r\n                'on:begin': XML_TAG.isTrulyOpeningTag,\r\n                end: XML_TAG.end\r\n              }\r\n            ],\r\n            subLanguage: 'xml',\r\n            contains: [\r\n              {\r\n                begin: XML_TAG.begin,\r\n                end: XML_TAG.end,\r\n                skip: true,\r\n                contains: ['self']\r\n              }\r\n            ]\r\n          }\r\n        ],\r\n      },\r\n      FUNCTION_DEFINITION,\r\n      {\r\n        // prevent this from getting swallowed up by function\r\n        // since they appear \"function like\"\r\n        beginKeywords: \"while if switch catch for\"\r\n      },\r\n      {\r\n        // we have to count the parens to make sure we actually have the correct\r\n        // bounding ( ).  There could be any number of sub-expressions inside\r\n        // also surrounded by parens.\r\n        begin: '\\\\b(?!function)' + hljs.UNDERSCORE_IDENT_RE +\r\n          '\\\\(' + // first parens\r\n          '[^()]*(\\\\(' +\r\n            '[^()]*(\\\\(' +\r\n              '[^()]*' +\r\n            '\\\\)[^()]*)*' +\r\n          '\\\\)[^()]*)*' +\r\n          '\\\\)\\\\s*\\\\{', // end parens\r\n        returnBegin:true,\r\n        label: \"func.def\",\r\n        contains: [\r\n          PARAMS,\r\n          hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE$1, className: \"title.function\" })\r\n        ]\r\n      },\r\n      // catch ... so it won't trigger the property rule below\r\n      {\r\n        match: /\\.\\.\\./,\r\n        relevance: 0\r\n      },\r\n      PROPERTY_ACCESS,\r\n      // hack: prevents detection of keywords in some circumstances\r\n      // .keyword()\r\n      // $keyword = x\r\n      {\r\n        match: '\\\\$' + IDENT_RE$1,\r\n        relevance: 0\r\n      },\r\n      {\r\n        match: [ /\\bconstructor(?=\\s*\\()/ ],\r\n        className: { 1: \"title.function\" },\r\n        contains: [ PARAMS ]\r\n      },\r\n      FUNCTION_CALL,\r\n      UPPER_CASE_CONSTANT,\r\n      CLASS_OR_EXTENDS,\r\n      GETTER_OR_SETTER,\r\n      {\r\n        match: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = javascript;\r\n", "/*\r\nLanguage: JSON\r\nDescription: JSON (JavaScript Object Notation) is a lightweight data-interchange format.\r\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\r\nWebsite: http://www.json.org\r\nCategory: common, protocols, web\r\n*/\r\n\r\nfunction json(hljs) {\r\n  const ATTRIBUTE = {\r\n    className: 'attr',\r\n    begin: /\"(\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\r\n    relevance: 1.01\r\n  };\r\n  const PUNCTUATION = {\r\n    match: /[{}[\\],:]/,\r\n    className: \"punctuation\",\r\n    relevance: 0\r\n  };\r\n  const LITERALS = [\r\n    \"true\",\r\n    \"false\",\r\n    \"null\"\r\n  ];\r\n  // NOTE: normally we would rely on `keywords` for this but using a mode here allows us\r\n  // - to use the very tight `illegal: \\S` rule later to flag any other character\r\n  // - as illegal indicating that despite looking like JSON we do not truly have\r\n  // - JSON and thus improve false-positively greatly since JSON will try and claim\r\n  // - all sorts of JSON looking stuff\r\n  const LITERALS_MODE = {\r\n    scope: \"literal\",\r\n    beginKeywords: LITERALS.join(\" \"),\r\n  };\r\n\r\n  return {\r\n    name: 'JSON',\r\n    keywords:{\r\n      literal: LITERALS,\r\n    },\r\n    contains: [\r\n      ATTRIBUTE,\r\n      PUNCTUATION,\r\n      hljs.QUOTE_STRING_MODE,\r\n      LITERALS_MODE,\r\n      hljs.C_NUMBER_MODE,\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE\r\n    ],\r\n    illegal: '\\\\S'\r\n  };\r\n}\r\n\r\nmodule.exports = json;\r\n", "// https://docs.oracle.com/javase/specs/jls/se15/html/jls-3.html#jls-3.10\r\nvar decimalDigits = '[0-9](_*[0-9])*';\r\nvar frac = `\\\\.(${decimalDigits})`;\r\nvar hexDigits = '[0-9a-fA-F](_*[0-9a-fA-F])*';\r\nvar NUMERIC = {\r\n  className: 'number',\r\n  variants: [\r\n    // DecimalFloatingPointLiteral\r\n    // including ExponentPart\r\n    { begin: `(\\\\b(${decimalDigits})((${frac})|\\\\.)?|(${frac}))` +\r\n      `[eE][+-]?(${decimalDigits})[fFdD]?\\\\b` },\r\n    // excluding ExponentPart\r\n    { begin: `\\\\b(${decimalDigits})((${frac})[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)` },\r\n    { begin: `(${frac})[fFdD]?\\\\b` },\r\n    { begin: `\\\\b(${decimalDigits})[fFdD]\\\\b` },\r\n\r\n    // HexadecimalFloatingPointLiteral\r\n    { begin: `\\\\b0[xX]((${hexDigits})\\\\.?|(${hexDigits})?\\\\.(${hexDigits}))` +\r\n      `[pP][+-]?(${decimalDigits})[fFdD]?\\\\b` },\r\n\r\n    // DecimalIntegerLiteral\r\n    { begin: '\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b' },\r\n\r\n    // HexIntegerLiteral\r\n    { begin: `\\\\b0[xX](${hexDigits})[lL]?\\\\b` },\r\n\r\n    // OctalIntegerLiteral\r\n    { begin: '\\\\b0(_*[0-7])*[lL]?\\\\b' },\r\n\r\n    // BinaryIntegerLiteral\r\n    { begin: '\\\\b0[bB][01](_*[01])*[lL]?\\\\b' },\r\n  ],\r\n  relevance: 0\r\n};\r\n\r\n/*\r\n Language: Kotlin\r\n Description: Kotlin is an OSS statically typed programming language that targets the JVM, Android, JavaScript and Native.\r\n Author: Sergey Mashkov <cy6erGn0m@gmail.com>\r\n Website: https://kotlinlang.org\r\n Category: common\r\n */\r\n\r\nfunction kotlin(hljs) {\r\n  const KEYWORDS = {\r\n    keyword:\r\n      'abstract as val var vararg get set class object open private protected public noinline '\r\n      + 'crossinline dynamic final enum if else do while for when throw try catch finally '\r\n      + 'import package is in fun override companion reified inline lateinit init '\r\n      + 'interface annotation data sealed internal infix operator out by constructor super '\r\n      + 'tailrec where const inner suspend typealias external expect actual',\r\n    built_in:\r\n      'Byte Short Char Int Long Boolean Float Double Void Unit Nothing',\r\n    literal:\r\n      'true false null'\r\n  };\r\n  const KEYWORDS_WITH_LABEL = {\r\n    className: 'keyword',\r\n    begin: /\\b(break|continue|return|this)\\b/,\r\n    starts: { contains: [\r\n      {\r\n        className: 'symbol',\r\n        begin: /@\\w+/\r\n      }\r\n    ] }\r\n  };\r\n  const LABEL = {\r\n    className: 'symbol',\r\n    begin: hljs.UNDERSCORE_IDENT_RE + '@'\r\n  };\r\n\r\n  // for string templates\r\n  const SUBST = {\r\n    className: 'subst',\r\n    begin: /\\$\\{/,\r\n    end: /\\}/,\r\n    contains: [ hljs.C_NUMBER_MODE ]\r\n  };\r\n  const VARIABLE = {\r\n    className: 'variable',\r\n    begin: '\\\\$' + hljs.UNDERSCORE_IDENT_RE\r\n  };\r\n  const STRING = {\r\n    className: 'string',\r\n    variants: [\r\n      {\r\n        begin: '\"\"\"',\r\n        end: '\"\"\"(?=[^\"])',\r\n        contains: [\r\n          VARIABLE,\r\n          SUBST\r\n        ]\r\n      },\r\n      // Can't use built-in modes easily, as we want to use STRING in the meta\r\n      // context as 'meta-string' and there's no syntax to remove explicitly set\r\n      // classNames in built-in modes.\r\n      {\r\n        begin: '\\'',\r\n        end: '\\'',\r\n        illegal: /\\n/,\r\n        contains: [ hljs.BACKSLASH_ESCAPE ]\r\n      },\r\n      {\r\n        begin: '\"',\r\n        end: '\"',\r\n        illegal: /\\n/,\r\n        contains: [\r\n          hljs.BACKSLASH_ESCAPE,\r\n          VARIABLE,\r\n          SUBST\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n  SUBST.contains.push(STRING);\r\n\r\n  const ANNOTATION_USE_SITE = {\r\n    className: 'meta',\r\n    begin: '@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\\\s*:(?:\\\\s*' + hljs.UNDERSCORE_IDENT_RE + ')?'\r\n  };\r\n  const ANNOTATION = {\r\n    className: 'meta',\r\n    begin: '@' + hljs.UNDERSCORE_IDENT_RE,\r\n    contains: [\r\n      {\r\n        begin: /\\(/,\r\n        end: /\\)/,\r\n        contains: [\r\n          hljs.inherit(STRING, { className: 'string' }),\r\n          \"self\"\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n\r\n  // https://kotlinlang.org/docs/reference/whatsnew11.html#underscores-in-numeric-literals\r\n  // According to the doc above, the number mode of kotlin is the same as java 8,\r\n  // so the code below is copied from java.js\r\n  const KOTLIN_NUMBER_MODE = NUMERIC;\r\n  const KOTLIN_NESTED_COMMENT = hljs.COMMENT(\r\n    '/\\\\*', '\\\\*/',\r\n    { contains: [ hljs.C_BLOCK_COMMENT_MODE ] }\r\n  );\r\n  const KOTLIN_PAREN_TYPE = { variants: [\r\n    {\r\n      className: 'type',\r\n      begin: hljs.UNDERSCORE_IDENT_RE\r\n    },\r\n    {\r\n      begin: /\\(/,\r\n      end: /\\)/,\r\n      contains: [] // defined later\r\n    }\r\n  ] };\r\n  const KOTLIN_PAREN_TYPE2 = KOTLIN_PAREN_TYPE;\r\n  KOTLIN_PAREN_TYPE2.variants[1].contains = [ KOTLIN_PAREN_TYPE ];\r\n  KOTLIN_PAREN_TYPE.variants[1].contains = [ KOTLIN_PAREN_TYPE2 ];\r\n\r\n  return {\r\n    name: 'Kotlin',\r\n    aliases: [\r\n      'kt',\r\n      'kts'\r\n    ],\r\n    keywords: KEYWORDS,\r\n    contains: [\r\n      hljs.COMMENT(\r\n        '/\\\\*\\\\*',\r\n        '\\\\*/',\r\n        {\r\n          relevance: 0,\r\n          contains: [\r\n            {\r\n              className: 'doctag',\r\n              begin: '@[A-Za-z]+'\r\n            }\r\n          ]\r\n        }\r\n      ),\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      KOTLIN_NESTED_COMMENT,\r\n      KEYWORDS_WITH_LABEL,\r\n      LABEL,\r\n      ANNOTATION_USE_SITE,\r\n      ANNOTATION,\r\n      {\r\n        className: 'function',\r\n        beginKeywords: 'fun',\r\n        end: '[(]|$',\r\n        returnBegin: true,\r\n        excludeEnd: true,\r\n        keywords: KEYWORDS,\r\n        relevance: 5,\r\n        contains: [\r\n          {\r\n            begin: hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(',\r\n            returnBegin: true,\r\n            relevance: 0,\r\n            contains: [ hljs.UNDERSCORE_TITLE_MODE ]\r\n          },\r\n          {\r\n            className: 'type',\r\n            begin: /</,\r\n            end: />/,\r\n            keywords: 'reified',\r\n            relevance: 0\r\n          },\r\n          {\r\n            className: 'params',\r\n            begin: /\\(/,\r\n            end: /\\)/,\r\n            endsParent: true,\r\n            keywords: KEYWORDS,\r\n            relevance: 0,\r\n            contains: [\r\n              {\r\n                begin: /:/,\r\n                end: /[=,\\/]/,\r\n                endsWithParent: true,\r\n                contains: [\r\n                  KOTLIN_PAREN_TYPE,\r\n                  hljs.C_LINE_COMMENT_MODE,\r\n                  KOTLIN_NESTED_COMMENT\r\n                ],\r\n                relevance: 0\r\n              },\r\n              hljs.C_LINE_COMMENT_MODE,\r\n              KOTLIN_NESTED_COMMENT,\r\n              ANNOTATION_USE_SITE,\r\n              ANNOTATION,\r\n              STRING,\r\n              hljs.C_NUMBER_MODE\r\n            ]\r\n          },\r\n          KOTLIN_NESTED_COMMENT\r\n        ]\r\n      },\r\n      {\r\n        begin: [\r\n          /class|interface|trait/,\r\n          /\\s+/,\r\n          hljs.UNDERSCORE_IDENT_RE\r\n        ],\r\n        beginScope: {\r\n          3: \"title.class\"\r\n        },\r\n        keywords: 'class interface trait',\r\n        end: /[:\\{(]|$/,\r\n        excludeEnd: true,\r\n        illegal: 'extends implements',\r\n        contains: [\r\n          { beginKeywords: 'public protected internal private constructor' },\r\n          hljs.UNDERSCORE_TITLE_MODE,\r\n          {\r\n            className: 'type',\r\n            begin: /</,\r\n            end: />/,\r\n            excludeBegin: true,\r\n            excludeEnd: true,\r\n            relevance: 0\r\n          },\r\n          {\r\n            className: 'type',\r\n            begin: /[,:]\\s*/,\r\n            end: /[<\\(,){\\s]|$/,\r\n            excludeBegin: true,\r\n            returnEnd: true\r\n          },\r\n          ANNOTATION_USE_SITE,\r\n          ANNOTATION\r\n        ]\r\n      },\r\n      STRING,\r\n      {\r\n        className: 'meta',\r\n        begin: \"^#!/usr/bin/env\",\r\n        end: '$',\r\n        illegal: '\\n'\r\n      },\r\n      KOTLIN_NUMBER_MODE\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = kotlin;\r\n", "const MODES = (hljs) => {\r\n  return {\r\n    IMPORTANT: {\r\n      scope: 'meta',\r\n      begin: '!important'\r\n    },\r\n    BLOCK_COMMENT: hljs.C_BLOCK_COMMENT_MODE,\r\n    HEXCOLOR: {\r\n      scope: 'number',\r\n      begin: /#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\\b/\r\n    },\r\n    FUNCTION_DISPATCH: {\r\n      className: \"built_in\",\r\n      begin: /[\\w-]+(?=\\()/\r\n    },\r\n    ATTRIBUTE_SELECTOR_MODE: {\r\n      scope: 'selector-attr',\r\n      begin: /\\[/,\r\n      end: /\\]/,\r\n      illegal: '$',\r\n      contains: [\r\n        hljs.APOS_STRING_MODE,\r\n        hljs.QUOTE_STRING_MODE\r\n      ]\r\n    },\r\n    CSS_NUMBER_MODE: {\r\n      scope: 'number',\r\n      begin: hljs.NUMBER_RE + '(' +\r\n        '%|em|ex|ch|rem' +\r\n        '|vw|vh|vmin|vmax' +\r\n        '|cm|mm|in|pt|pc|px' +\r\n        '|deg|grad|rad|turn' +\r\n        '|s|ms' +\r\n        '|Hz|kHz' +\r\n        '|dpi|dpcm|dppx' +\r\n        ')?',\r\n      relevance: 0\r\n    },\r\n    CSS_VARIABLE: {\r\n      className: \"attr\",\r\n      begin: /--[A-Za-z][A-Za-z0-9_-]*/\r\n    }\r\n  };\r\n};\r\n\r\nconst TAGS = [\r\n  'a',\r\n  'abbr',\r\n  'address',\r\n  'article',\r\n  'aside',\r\n  'audio',\r\n  'b',\r\n  'blockquote',\r\n  'body',\r\n  'button',\r\n  'canvas',\r\n  'caption',\r\n  'cite',\r\n  'code',\r\n  'dd',\r\n  'del',\r\n  'details',\r\n  'dfn',\r\n  'div',\r\n  'dl',\r\n  'dt',\r\n  'em',\r\n  'fieldset',\r\n  'figcaption',\r\n  'figure',\r\n  'footer',\r\n  'form',\r\n  'h1',\r\n  'h2',\r\n  'h3',\r\n  'h4',\r\n  'h5',\r\n  'h6',\r\n  'header',\r\n  'hgroup',\r\n  'html',\r\n  'i',\r\n  'iframe',\r\n  'img',\r\n  'input',\r\n  'ins',\r\n  'kbd',\r\n  'label',\r\n  'legend',\r\n  'li',\r\n  'main',\r\n  'mark',\r\n  'menu',\r\n  'nav',\r\n  'object',\r\n  'ol',\r\n  'p',\r\n  'q',\r\n  'quote',\r\n  'samp',\r\n  'section',\r\n  'span',\r\n  'strong',\r\n  'summary',\r\n  'sup',\r\n  'table',\r\n  'tbody',\r\n  'td',\r\n  'textarea',\r\n  'tfoot',\r\n  'th',\r\n  'thead',\r\n  'time',\r\n  'tr',\r\n  'ul',\r\n  'var',\r\n  'video'\r\n];\r\n\r\nconst MEDIA_FEATURES = [\r\n  'any-hover',\r\n  'any-pointer',\r\n  'aspect-ratio',\r\n  'color',\r\n  'color-gamut',\r\n  'color-index',\r\n  'device-aspect-ratio',\r\n  'device-height',\r\n  'device-width',\r\n  'display-mode',\r\n  'forced-colors',\r\n  'grid',\r\n  'height',\r\n  'hover',\r\n  'inverted-colors',\r\n  'monochrome',\r\n  'orientation',\r\n  'overflow-block',\r\n  'overflow-inline',\r\n  'pointer',\r\n  'prefers-color-scheme',\r\n  'prefers-contrast',\r\n  'prefers-reduced-motion',\r\n  'prefers-reduced-transparency',\r\n  'resolution',\r\n  'scan',\r\n  'scripting',\r\n  'update',\r\n  'width',\r\n  // TODO: find a better solution?\r\n  'min-width',\r\n  'max-width',\r\n  'min-height',\r\n  'max-height'\r\n];\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes\r\nconst PSEUDO_CLASSES = [\r\n  'active',\r\n  'any-link',\r\n  'blank',\r\n  'checked',\r\n  'current',\r\n  'default',\r\n  'defined',\r\n  'dir', // dir()\r\n  'disabled',\r\n  'drop',\r\n  'empty',\r\n  'enabled',\r\n  'first',\r\n  'first-child',\r\n  'first-of-type',\r\n  'fullscreen',\r\n  'future',\r\n  'focus',\r\n  'focus-visible',\r\n  'focus-within',\r\n  'has', // has()\r\n  'host', // host or host()\r\n  'host-context', // host-context()\r\n  'hover',\r\n  'indeterminate',\r\n  'in-range',\r\n  'invalid',\r\n  'is', // is()\r\n  'lang', // lang()\r\n  'last-child',\r\n  'last-of-type',\r\n  'left',\r\n  'link',\r\n  'local-link',\r\n  'not', // not()\r\n  'nth-child', // nth-child()\r\n  'nth-col', // nth-col()\r\n  'nth-last-child', // nth-last-child()\r\n  'nth-last-col', // nth-last-col()\r\n  'nth-last-of-type', //nth-last-of-type()\r\n  'nth-of-type', //nth-of-type()\r\n  'only-child',\r\n  'only-of-type',\r\n  'optional',\r\n  'out-of-range',\r\n  'past',\r\n  'placeholder-shown',\r\n  'read-only',\r\n  'read-write',\r\n  'required',\r\n  'right',\r\n  'root',\r\n  'scope',\r\n  'target',\r\n  'target-within',\r\n  'user-invalid',\r\n  'valid',\r\n  'visited',\r\n  'where' // where()\r\n];\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements\r\nconst PSEUDO_ELEMENTS = [\r\n  'after',\r\n  'backdrop',\r\n  'before',\r\n  'cue',\r\n  'cue-region',\r\n  'first-letter',\r\n  'first-line',\r\n  'grammar-error',\r\n  'marker',\r\n  'part',\r\n  'placeholder',\r\n  'selection',\r\n  'slotted',\r\n  'spelling-error'\r\n];\r\n\r\nconst ATTRIBUTES = [\r\n  'align-content',\r\n  'align-items',\r\n  'align-self',\r\n  'all',\r\n  'animation',\r\n  'animation-delay',\r\n  'animation-direction',\r\n  'animation-duration',\r\n  'animation-fill-mode',\r\n  'animation-iteration-count',\r\n  'animation-name',\r\n  'animation-play-state',\r\n  'animation-timing-function',\r\n  'backface-visibility',\r\n  'background',\r\n  'background-attachment',\r\n  'background-blend-mode',\r\n  'background-clip',\r\n  'background-color',\r\n  'background-image',\r\n  'background-origin',\r\n  'background-position',\r\n  'background-repeat',\r\n  'background-size',\r\n  'block-size',\r\n  'border',\r\n  'border-block',\r\n  'border-block-color',\r\n  'border-block-end',\r\n  'border-block-end-color',\r\n  'border-block-end-style',\r\n  'border-block-end-width',\r\n  'border-block-start',\r\n  'border-block-start-color',\r\n  'border-block-start-style',\r\n  'border-block-start-width',\r\n  'border-block-style',\r\n  'border-block-width',\r\n  'border-bottom',\r\n  'border-bottom-color',\r\n  'border-bottom-left-radius',\r\n  'border-bottom-right-radius',\r\n  'border-bottom-style',\r\n  'border-bottom-width',\r\n  'border-collapse',\r\n  'border-color',\r\n  'border-image',\r\n  'border-image-outset',\r\n  'border-image-repeat',\r\n  'border-image-slice',\r\n  'border-image-source',\r\n  'border-image-width',\r\n  'border-inline',\r\n  'border-inline-color',\r\n  'border-inline-end',\r\n  'border-inline-end-color',\r\n  'border-inline-end-style',\r\n  'border-inline-end-width',\r\n  'border-inline-start',\r\n  'border-inline-start-color',\r\n  'border-inline-start-style',\r\n  'border-inline-start-width',\r\n  'border-inline-style',\r\n  'border-inline-width',\r\n  'border-left',\r\n  'border-left-color',\r\n  'border-left-style',\r\n  'border-left-width',\r\n  'border-radius',\r\n  'border-right',\r\n  'border-right-color',\r\n  'border-right-style',\r\n  'border-right-width',\r\n  'border-spacing',\r\n  'border-style',\r\n  'border-top',\r\n  'border-top-color',\r\n  'border-top-left-radius',\r\n  'border-top-right-radius',\r\n  'border-top-style',\r\n  'border-top-width',\r\n  'border-width',\r\n  'bottom',\r\n  'box-decoration-break',\r\n  'box-shadow',\r\n  'box-sizing',\r\n  'break-after',\r\n  'break-before',\r\n  'break-inside',\r\n  'caption-side',\r\n  'caret-color',\r\n  'clear',\r\n  'clip',\r\n  'clip-path',\r\n  'clip-rule',\r\n  'color',\r\n  'column-count',\r\n  'column-fill',\r\n  'column-gap',\r\n  'column-rule',\r\n  'column-rule-color',\r\n  'column-rule-style',\r\n  'column-rule-width',\r\n  'column-span',\r\n  'column-width',\r\n  'columns',\r\n  'contain',\r\n  'content',\r\n  'content-visibility',\r\n  'counter-increment',\r\n  'counter-reset',\r\n  'cue',\r\n  'cue-after',\r\n  'cue-before',\r\n  'cursor',\r\n  'direction',\r\n  'display',\r\n  'empty-cells',\r\n  'filter',\r\n  'flex',\r\n  'flex-basis',\r\n  'flex-direction',\r\n  'flex-flow',\r\n  'flex-grow',\r\n  'flex-shrink',\r\n  'flex-wrap',\r\n  'float',\r\n  'flow',\r\n  'font',\r\n  'font-display',\r\n  'font-family',\r\n  'font-feature-settings',\r\n  'font-kerning',\r\n  'font-language-override',\r\n  'font-size',\r\n  'font-size-adjust',\r\n  'font-smoothing',\r\n  'font-stretch',\r\n  'font-style',\r\n  'font-synthesis',\r\n  'font-variant',\r\n  'font-variant-caps',\r\n  'font-variant-east-asian',\r\n  'font-variant-ligatures',\r\n  'font-variant-numeric',\r\n  'font-variant-position',\r\n  'font-variation-settings',\r\n  'font-weight',\r\n  'gap',\r\n  'glyph-orientation-vertical',\r\n  'grid',\r\n  'grid-area',\r\n  'grid-auto-columns',\r\n  'grid-auto-flow',\r\n  'grid-auto-rows',\r\n  'grid-column',\r\n  'grid-column-end',\r\n  'grid-column-start',\r\n  'grid-gap',\r\n  'grid-row',\r\n  'grid-row-end',\r\n  'grid-row-start',\r\n  'grid-template',\r\n  'grid-template-areas',\r\n  'grid-template-columns',\r\n  'grid-template-rows',\r\n  'hanging-punctuation',\r\n  'height',\r\n  'hyphens',\r\n  'icon',\r\n  'image-orientation',\r\n  'image-rendering',\r\n  'image-resolution',\r\n  'ime-mode',\r\n  'inline-size',\r\n  'isolation',\r\n  'justify-content',\r\n  'left',\r\n  'letter-spacing',\r\n  'line-break',\r\n  'line-height',\r\n  'list-style',\r\n  'list-style-image',\r\n  'list-style-position',\r\n  'list-style-type',\r\n  'margin',\r\n  'margin-block',\r\n  'margin-block-end',\r\n  'margin-block-start',\r\n  'margin-bottom',\r\n  'margin-inline',\r\n  'margin-inline-end',\r\n  'margin-inline-start',\r\n  'margin-left',\r\n  'margin-right',\r\n  'margin-top',\r\n  'marks',\r\n  'mask',\r\n  'mask-border',\r\n  'mask-border-mode',\r\n  'mask-border-outset',\r\n  'mask-border-repeat',\r\n  'mask-border-slice',\r\n  'mask-border-source',\r\n  'mask-border-width',\r\n  'mask-clip',\r\n  'mask-composite',\r\n  'mask-image',\r\n  'mask-mode',\r\n  'mask-origin',\r\n  'mask-position',\r\n  'mask-repeat',\r\n  'mask-size',\r\n  'mask-type',\r\n  'max-block-size',\r\n  'max-height',\r\n  'max-inline-size',\r\n  'max-width',\r\n  'min-block-size',\r\n  'min-height',\r\n  'min-inline-size',\r\n  'min-width',\r\n  'mix-blend-mode',\r\n  'nav-down',\r\n  'nav-index',\r\n  'nav-left',\r\n  'nav-right',\r\n  'nav-up',\r\n  'none',\r\n  'normal',\r\n  'object-fit',\r\n  'object-position',\r\n  'opacity',\r\n  'order',\r\n  'orphans',\r\n  'outline',\r\n  'outline-color',\r\n  'outline-offset',\r\n  'outline-style',\r\n  'outline-width',\r\n  'overflow',\r\n  'overflow-wrap',\r\n  'overflow-x',\r\n  'overflow-y',\r\n  'padding',\r\n  'padding-block',\r\n  'padding-block-end',\r\n  'padding-block-start',\r\n  'padding-bottom',\r\n  'padding-inline',\r\n  'padding-inline-end',\r\n  'padding-inline-start',\r\n  'padding-left',\r\n  'padding-right',\r\n  'padding-top',\r\n  'page-break-after',\r\n  'page-break-before',\r\n  'page-break-inside',\r\n  'pause',\r\n  'pause-after',\r\n  'pause-before',\r\n  'perspective',\r\n  'perspective-origin',\r\n  'pointer-events',\r\n  'position',\r\n  'quotes',\r\n  'resize',\r\n  'rest',\r\n  'rest-after',\r\n  'rest-before',\r\n  'right',\r\n  'row-gap',\r\n  'scroll-margin',\r\n  'scroll-margin-block',\r\n  'scroll-margin-block-end',\r\n  'scroll-margin-block-start',\r\n  'scroll-margin-bottom',\r\n  'scroll-margin-inline',\r\n  'scroll-margin-inline-end',\r\n  'scroll-margin-inline-start',\r\n  'scroll-margin-left',\r\n  'scroll-margin-right',\r\n  'scroll-margin-top',\r\n  'scroll-padding',\r\n  'scroll-padding-block',\r\n  'scroll-padding-block-end',\r\n  'scroll-padding-block-start',\r\n  'scroll-padding-bottom',\r\n  'scroll-padding-inline',\r\n  'scroll-padding-inline-end',\r\n  'scroll-padding-inline-start',\r\n  'scroll-padding-left',\r\n  'scroll-padding-right',\r\n  'scroll-padding-top',\r\n  'scroll-snap-align',\r\n  'scroll-snap-stop',\r\n  'scroll-snap-type',\r\n  'scrollbar-color',\r\n  'scrollbar-gutter',\r\n  'scrollbar-width',\r\n  'shape-image-threshold',\r\n  'shape-margin',\r\n  'shape-outside',\r\n  'speak',\r\n  'speak-as',\r\n  'src', // @font-face\r\n  'tab-size',\r\n  'table-layout',\r\n  'text-align',\r\n  'text-align-all',\r\n  'text-align-last',\r\n  'text-combine-upright',\r\n  'text-decoration',\r\n  'text-decoration-color',\r\n  'text-decoration-line',\r\n  'text-decoration-style',\r\n  'text-emphasis',\r\n  'text-emphasis-color',\r\n  'text-emphasis-position',\r\n  'text-emphasis-style',\r\n  'text-indent',\r\n  'text-justify',\r\n  'text-orientation',\r\n  'text-overflow',\r\n  'text-rendering',\r\n  'text-shadow',\r\n  'text-transform',\r\n  'text-underline-position',\r\n  'top',\r\n  'transform',\r\n  'transform-box',\r\n  'transform-origin',\r\n  'transform-style',\r\n  'transition',\r\n  'transition-delay',\r\n  'transition-duration',\r\n  'transition-property',\r\n  'transition-timing-function',\r\n  'unicode-bidi',\r\n  'vertical-align',\r\n  'visibility',\r\n  'voice-balance',\r\n  'voice-duration',\r\n  'voice-family',\r\n  'voice-pitch',\r\n  'voice-range',\r\n  'voice-rate',\r\n  'voice-stress',\r\n  'voice-volume',\r\n  'white-space',\r\n  'widows',\r\n  'width',\r\n  'will-change',\r\n  'word-break',\r\n  'word-spacing',\r\n  'word-wrap',\r\n  'writing-mode',\r\n  'z-index'\r\n  // reverse makes sure longer attributes `font-weight` are matched fully\r\n  // instead of getting false positives on say `font`\r\n].reverse();\r\n\r\n// some grammars use them all as a single group\r\nconst PSEUDO_SELECTORS = PSEUDO_CLASSES.concat(PSEUDO_ELEMENTS);\r\n\r\n/*\r\nLanguage: Less\r\nDescription: It's CSS, with just a little more.\r\nAuthor:   Max Mikhailov <seven.phases.max@gmail.com>\r\nWebsite: http://lesscss.org\r\nCategory: common, css, web\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction less(hljs) {\r\n  const modes = MODES(hljs);\r\n  const PSEUDO_SELECTORS$1 = PSEUDO_SELECTORS;\r\n\r\n  const AT_MODIFIERS = \"and or not only\";\r\n  const IDENT_RE = '[\\\\w-]+'; // yes, Less identifiers may begin with a digit\r\n  const INTERP_IDENT_RE = '(' + IDENT_RE + '|@\\\\{' + IDENT_RE + '\\\\})';\r\n\r\n  /* Generic Modes */\r\n\r\n  const RULES = []; const VALUE_MODES = []; // forward def. for recursive modes\r\n\r\n  const STRING_MODE = function(c) {\r\n    return {\r\n    // Less strings are not multiline (also include '~' for more consistent coloring of \"escaped\" strings)\r\n      className: 'string',\r\n      begin: '~?' + c + '.*?' + c\r\n    };\r\n  };\r\n\r\n  const IDENT_MODE = function(name, begin, relevance) {\r\n    return {\r\n      className: name,\r\n      begin: begin,\r\n      relevance: relevance\r\n    };\r\n  };\r\n\r\n  const AT_KEYWORDS = {\r\n    $pattern: /[a-z-]+/,\r\n    keyword: AT_MODIFIERS,\r\n    attribute: MEDIA_FEATURES.join(\" \")\r\n  };\r\n\r\n  const PARENS_MODE = {\r\n    // used only to properly balance nested parens inside mixin call, def. arg list\r\n    begin: '\\\\(',\r\n    end: '\\\\)',\r\n    contains: VALUE_MODES,\r\n    keywords: AT_KEYWORDS,\r\n    relevance: 0\r\n  };\r\n\r\n  // generic Less highlighter (used almost everywhere except selectors):\r\n  VALUE_MODES.push(\r\n    hljs.C_LINE_COMMENT_MODE,\r\n    hljs.C_BLOCK_COMMENT_MODE,\r\n    STRING_MODE(\"'\"),\r\n    STRING_MODE('\"'),\r\n    modes.CSS_NUMBER_MODE, // fixme: it does not include dot for numbers like .5em :(\r\n    {\r\n      begin: '(url|data-uri)\\\\(',\r\n      starts: {\r\n        className: 'string',\r\n        end: '[\\\\)\\\\n]',\r\n        excludeEnd: true\r\n      }\r\n    },\r\n    modes.HEXCOLOR,\r\n    PARENS_MODE,\r\n    IDENT_MODE('variable', '@@?' + IDENT_RE, 10),\r\n    IDENT_MODE('variable', '@\\\\{' + IDENT_RE + '\\\\}'),\r\n    IDENT_MODE('built_in', '~?`[^`]*?`'), // inline javascript (or whatever host language) *multiline* string\r\n    { // @media features (it’s here to not duplicate things in AT_RULE_MODE with extra PARENS_MODE overriding):\r\n      className: 'attribute',\r\n      begin: IDENT_RE + '\\\\s*:',\r\n      end: ':',\r\n      returnBegin: true,\r\n      excludeEnd: true\r\n    },\r\n    modes.IMPORTANT,\r\n    { beginKeywords: 'and not' },\r\n    modes.FUNCTION_DISPATCH\r\n  );\r\n\r\n  const VALUE_WITH_RULESETS = VALUE_MODES.concat({\r\n    begin: /\\{/,\r\n    end: /\\}/,\r\n    contains: RULES\r\n  });\r\n\r\n  const MIXIN_GUARD_MODE = {\r\n    beginKeywords: 'when',\r\n    endsWithParent: true,\r\n    contains: [ { beginKeywords: 'and not' } ].concat(VALUE_MODES) // using this form to override VALUE’s 'function' match\r\n  };\r\n\r\n  /* Rule-Level Modes */\r\n\r\n  const RULE_MODE = {\r\n    begin: INTERP_IDENT_RE + '\\\\s*:',\r\n    returnBegin: true,\r\n    end: /[;}]/,\r\n    relevance: 0,\r\n    contains: [\r\n      { begin: /-(webkit|moz|ms|o)-/ },\r\n      modes.CSS_VARIABLE,\r\n      {\r\n        className: 'attribute',\r\n        begin: '\\\\b(' + ATTRIBUTES.join('|') + ')\\\\b',\r\n        end: /(?=:)/,\r\n        starts: {\r\n          endsWithParent: true,\r\n          illegal: '[<=$]',\r\n          relevance: 0,\r\n          contains: VALUE_MODES\r\n        }\r\n      }\r\n    ]\r\n  };\r\n\r\n  const AT_RULE_MODE = {\r\n    className: 'keyword',\r\n    begin: '@(import|media|charset|font-face|(-[a-z]+-)?keyframes|supports|document|namespace|page|viewport|host)\\\\b',\r\n    starts: {\r\n      end: '[;{}]',\r\n      keywords: AT_KEYWORDS,\r\n      returnEnd: true,\r\n      contains: VALUE_MODES,\r\n      relevance: 0\r\n    }\r\n  };\r\n\r\n  // variable definitions and calls\r\n  const VAR_RULE_MODE = {\r\n    className: 'variable',\r\n    variants: [\r\n      // using more strict pattern for higher relevance to increase chances of Less detection.\r\n      // this is *the only* Less specific statement used in most of the sources, so...\r\n      // (we’ll still often loose to the css-parser unless there's '//' comment,\r\n      // simply because 1 variable just can't beat 99 properties :)\r\n      {\r\n        begin: '@' + IDENT_RE + '\\\\s*:',\r\n        relevance: 15\r\n      },\r\n      { begin: '@' + IDENT_RE }\r\n    ],\r\n    starts: {\r\n      end: '[;}]',\r\n      returnEnd: true,\r\n      contains: VALUE_WITH_RULESETS\r\n    }\r\n  };\r\n\r\n  const SELECTOR_MODE = {\r\n    // first parse unambiguous selectors (i.e. those not starting with tag)\r\n    // then fall into the scary lookahead-discriminator variant.\r\n    // this mode also handles mixin definitions and calls\r\n    variants: [\r\n      {\r\n        begin: '[\\\\.#:&\\\\[>]',\r\n        end: '[;{}]' // mixin calls end with ';'\r\n      },\r\n      {\r\n        begin: INTERP_IDENT_RE,\r\n        end: /\\{/\r\n      }\r\n    ],\r\n    returnBegin: true,\r\n    returnEnd: true,\r\n    illegal: '[<=\\'$\"]',\r\n    relevance: 0,\r\n    contains: [\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      MIXIN_GUARD_MODE,\r\n      IDENT_MODE('keyword', 'all\\\\b'),\r\n      IDENT_MODE('variable', '@\\\\{' + IDENT_RE + '\\\\}'), // otherwise it’s identified as tag\r\n      \r\n      {\r\n        begin: '\\\\b(' + TAGS.join('|') + ')\\\\b',\r\n        className: 'selector-tag'\r\n      },\r\n      modes.CSS_NUMBER_MODE,\r\n      IDENT_MODE('selector-tag', INTERP_IDENT_RE, 0),\r\n      IDENT_MODE('selector-id', '#' + INTERP_IDENT_RE),\r\n      IDENT_MODE('selector-class', '\\\\.' + INTERP_IDENT_RE, 0),\r\n      IDENT_MODE('selector-tag', '&', 0),\r\n      modes.ATTRIBUTE_SELECTOR_MODE,\r\n      {\r\n        className: 'selector-pseudo',\r\n        begin: ':(' + PSEUDO_CLASSES.join('|') + ')'\r\n      },\r\n      {\r\n        className: 'selector-pseudo',\r\n        begin: ':(:)?(' + PSEUDO_ELEMENTS.join('|') + ')'\r\n      },\r\n      {\r\n        begin: /\\(/,\r\n        end: /\\)/,\r\n        relevance: 0,\r\n        contains: VALUE_WITH_RULESETS\r\n      }, // argument list of parametric mixins\r\n      { begin: '!important' }, // eat !important after mixin call or it will be colored as tag\r\n      modes.FUNCTION_DISPATCH\r\n    ]\r\n  };\r\n\r\n  const PSEUDO_SELECTOR_MODE = {\r\n    begin: IDENT_RE + ':(:)?' + `(${PSEUDO_SELECTORS$1.join('|')})`,\r\n    returnBegin: true,\r\n    contains: [ SELECTOR_MODE ]\r\n  };\r\n\r\n  RULES.push(\r\n    hljs.C_LINE_COMMENT_MODE,\r\n    hljs.C_BLOCK_COMMENT_MODE,\r\n    AT_RULE_MODE,\r\n    VAR_RULE_MODE,\r\n    PSEUDO_SELECTOR_MODE,\r\n    RULE_MODE,\r\n    SELECTOR_MODE,\r\n    MIXIN_GUARD_MODE,\r\n    modes.FUNCTION_DISPATCH\r\n  );\r\n\r\n  return {\r\n    name: 'Less',\r\n    case_insensitive: true,\r\n    illegal: '[=>\\'/<($\"]',\r\n    contains: RULES\r\n  };\r\n}\r\n\r\nmodule.exports = less;\r\n", "/*\r\nLanguage: Lua\r\nDescription: Lua is a powerful, efficient, lightweight, embeddable scripting language.\r\nAuthor: Andrew Fedorov <dmmdrs@mail.ru>\r\nCategory: common, scripting\r\nWebsite: https://www.lua.org\r\n*/\r\n\r\nfunction lua(hljs) {\r\n  const OPENING_LONG_BRACKET = '\\\\[=*\\\\[';\r\n  const CLOSING_LONG_BRACKET = '\\\\]=*\\\\]';\r\n  const LONG_BRACKETS = {\r\n    begin: OPENING_LONG_BRACKET,\r\n    end: CLOSING_LONG_BRACKET,\r\n    contains: [ 'self' ]\r\n  };\r\n  const COMMENTS = [\r\n    hljs.COMMENT('--(?!' + OPENING_LONG_BRACKET + ')', '$'),\r\n    hljs.COMMENT(\r\n      '--' + OPENING_LONG_BRACKET,\r\n      CLOSING_LONG_BRACKET,\r\n      {\r\n        contains: [ LONG_BRACKETS ],\r\n        relevance: 10\r\n      }\r\n    )\r\n  ];\r\n  return {\r\n    name: 'Lua',\r\n    keywords: {\r\n      $pattern: hljs.UNDERSCORE_IDENT_RE,\r\n      literal: \"true false nil\",\r\n      keyword: \"and break do else elseif end for goto if in local not or repeat return then until while\",\r\n      built_in:\r\n        // Metatags and globals:\r\n        '_G _ENV _VERSION __index __newindex __mode __call __metatable __tostring __len '\r\n        + '__gc __add __sub __mul __div __mod __pow __concat __unm __eq __lt __le assert '\r\n        // Standard methods and properties:\r\n        + 'collectgarbage dofile error getfenv getmetatable ipairs load loadfile loadstring '\r\n        + 'module next pairs pcall print rawequal rawget rawset require select setfenv '\r\n        + 'setmetatable tonumber tostring type unpack xpcall arg self '\r\n        // Library methods and properties (one line per library):\r\n        + 'coroutine resume yield status wrap create running debug getupvalue '\r\n        + 'debug sethook getmetatable gethook setmetatable setlocal traceback setfenv getinfo setupvalue getlocal getregistry getfenv '\r\n        + 'io lines write close flush open output type read stderr stdin input stdout popen tmpfile '\r\n        + 'math log max acos huge ldexp pi cos tanh pow deg tan cosh sinh random randomseed frexp ceil floor rad abs sqrt modf asin min mod fmod log10 atan2 exp sin atan '\r\n        + 'os exit setlocale date getenv difftime remove time clock tmpname rename execute package preload loadlib loaded loaders cpath config path seeall '\r\n        + 'string sub upper len gfind rep find match char dump gmatch reverse byte format gsub lower '\r\n        + 'table setn insert getn foreachi maxn foreach concat sort remove'\r\n    },\r\n    contains: COMMENTS.concat([\r\n      {\r\n        className: 'function',\r\n        beginKeywords: 'function',\r\n        end: '\\\\)',\r\n        contains: [\r\n          hljs.inherit(hljs.TITLE_MODE, { begin: '([_a-zA-Z]\\\\w*\\\\.)*([_a-zA-Z]\\\\w*:)?[_a-zA-Z]\\\\w*' }),\r\n          {\r\n            className: 'params',\r\n            begin: '\\\\(',\r\n            endsWithParent: true,\r\n            contains: COMMENTS\r\n          }\r\n        ].concat(COMMENTS)\r\n      },\r\n      hljs.C_NUMBER_MODE,\r\n      hljs.APOS_STRING_MODE,\r\n      hljs.QUOTE_STRING_MODE,\r\n      {\r\n        className: 'string',\r\n        begin: OPENING_LONG_BRACKET,\r\n        end: CLOSING_LONG_BRACKET,\r\n        contains: [ LONG_BRACKETS ],\r\n        relevance: 5\r\n      }\r\n    ])\r\n  };\r\n}\r\n\r\nmodule.exports = lua;\r\n", "/*\r\nLanguage: Makefile\r\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\r\nContributors: Joël Porquet <joel@porquet.org>\r\nWebsite: https://www.gnu.org/software/make/manual/html_node/Introduction.html\r\nCategory: common\r\n*/\r\n\r\nfunction makefile(hljs) {\r\n  /* Variables: simple (eg $(var)) and special (eg $@) */\r\n  const VARIABLE = {\r\n    className: 'variable',\r\n    variants: [\r\n      {\r\n        begin: '\\\\$\\\\(' + hljs.UNDERSCORE_IDENT_RE + '\\\\)',\r\n        contains: [ hljs.BACKSLASH_ESCAPE ]\r\n      },\r\n      { begin: /\\$[@%<?\\^\\+\\*]/ }\r\n    ]\r\n  };\r\n  /* Quoted string with variables inside */\r\n  const QUOTE_STRING = {\r\n    className: 'string',\r\n    begin: /\"/,\r\n    end: /\"/,\r\n    contains: [\r\n      hljs.BACKSLASH_ESCAPE,\r\n      VARIABLE\r\n    ]\r\n  };\r\n  /* Function: $(func arg,...) */\r\n  const FUNC = {\r\n    className: 'variable',\r\n    begin: /\\$\\([\\w-]+\\s/,\r\n    end: /\\)/,\r\n    keywords: { built_in:\r\n        'subst patsubst strip findstring filter filter-out sort '\r\n        + 'word wordlist firstword lastword dir notdir suffix basename '\r\n        + 'addsuffix addprefix join wildcard realpath abspath error warning '\r\n        + 'shell origin flavor foreach if or and call eval file value' },\r\n    contains: [ VARIABLE ]\r\n  };\r\n  /* Variable assignment */\r\n  const ASSIGNMENT = { begin: '^' + hljs.UNDERSCORE_IDENT_RE + '\\\\s*(?=[:+?]?=)' };\r\n  /* Meta targets (.PHONY) */\r\n  const META = {\r\n    className: 'meta',\r\n    begin: /^\\.PHONY:/,\r\n    end: /$/,\r\n    keywords: {\r\n      $pattern: /[\\.\\w]+/,\r\n      keyword: '.PHONY'\r\n    }\r\n  };\r\n  /* Targets */\r\n  const TARGET = {\r\n    className: 'section',\r\n    begin: /^[^\\s]+:/,\r\n    end: /$/,\r\n    contains: [ VARIABLE ]\r\n  };\r\n  return {\r\n    name: 'Makefile',\r\n    aliases: [\r\n      'mk',\r\n      'mak',\r\n      'make',\r\n    ],\r\n    keywords: {\r\n      $pattern: /[\\w-]+/,\r\n      keyword: 'define endef undefine ifdef ifndef ifeq ifneq else endif '\r\n      + 'include -include sinclude override export unexport private vpath'\r\n    },\r\n    contains: [\r\n      hljs.HASH_COMMENT_MODE,\r\n      VARIABLE,\r\n      QUOTE_STRING,\r\n      FUNC,\r\n      ASSIGNMENT,\r\n      META,\r\n      TARGET\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = makefile;\r\n", "/*\r\nLanguage: Perl\r\nAuthor: Peter Leonov <gojpeg@yandex.ru>\r\nWebsite: https://www.perl.org\r\nCategory: common\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction perl(hljs) {\r\n  const regex = hljs.regex;\r\n  const KEYWORDS = [\r\n    'abs',\r\n    'accept',\r\n    'alarm',\r\n    'and',\r\n    'atan2',\r\n    'bind',\r\n    'binmode',\r\n    'bless',\r\n    'break',\r\n    'caller',\r\n    'chdir',\r\n    'chmod',\r\n    'chomp',\r\n    'chop',\r\n    'chown',\r\n    'chr',\r\n    'chroot',\r\n    'close',\r\n    'closedir',\r\n    'connect',\r\n    'continue',\r\n    'cos',\r\n    'crypt',\r\n    'dbmclose',\r\n    'dbmopen',\r\n    'defined',\r\n    'delete',\r\n    'die',\r\n    'do',\r\n    'dump',\r\n    'each',\r\n    'else',\r\n    'elsif',\r\n    'endgrent',\r\n    'endhostent',\r\n    'endnetent',\r\n    'endprotoent',\r\n    'endpwent',\r\n    'endservent',\r\n    'eof',\r\n    'eval',\r\n    'exec',\r\n    'exists',\r\n    'exit',\r\n    'exp',\r\n    'fcntl',\r\n    'fileno',\r\n    'flock',\r\n    'for',\r\n    'foreach',\r\n    'fork',\r\n    'format',\r\n    'formline',\r\n    'getc',\r\n    'getgrent',\r\n    'getgrgid',\r\n    'getgrnam',\r\n    'gethostbyaddr',\r\n    'gethostbyname',\r\n    'gethostent',\r\n    'getlogin',\r\n    'getnetbyaddr',\r\n    'getnetbyname',\r\n    'getnetent',\r\n    'getpeername',\r\n    'getpgrp',\r\n    'getpriority',\r\n    'getprotobyname',\r\n    'getprotobynumber',\r\n    'getprotoent',\r\n    'getpwent',\r\n    'getpwnam',\r\n    'getpwuid',\r\n    'getservbyname',\r\n    'getservbyport',\r\n    'getservent',\r\n    'getsockname',\r\n    'getsockopt',\r\n    'given',\r\n    'glob',\r\n    'gmtime',\r\n    'goto',\r\n    'grep',\r\n    'gt',\r\n    'hex',\r\n    'if',\r\n    'index',\r\n    'int',\r\n    'ioctl',\r\n    'join',\r\n    'keys',\r\n    'kill',\r\n    'last',\r\n    'lc',\r\n    'lcfirst',\r\n    'length',\r\n    'link',\r\n    'listen',\r\n    'local',\r\n    'localtime',\r\n    'log',\r\n    'lstat',\r\n    'lt',\r\n    'ma',\r\n    'map',\r\n    'mkdir',\r\n    'msgctl',\r\n    'msgget',\r\n    'msgrcv',\r\n    'msgsnd',\r\n    'my',\r\n    'ne',\r\n    'next',\r\n    'no',\r\n    'not',\r\n    'oct',\r\n    'open',\r\n    'opendir',\r\n    'or',\r\n    'ord',\r\n    'our',\r\n    'pack',\r\n    'package',\r\n    'pipe',\r\n    'pop',\r\n    'pos',\r\n    'print',\r\n    'printf',\r\n    'prototype',\r\n    'push',\r\n    'q|0',\r\n    'qq',\r\n    'quotemeta',\r\n    'qw',\r\n    'qx',\r\n    'rand',\r\n    'read',\r\n    'readdir',\r\n    'readline',\r\n    'readlink',\r\n    'readpipe',\r\n    'recv',\r\n    'redo',\r\n    'ref',\r\n    'rename',\r\n    'require',\r\n    'reset',\r\n    'return',\r\n    'reverse',\r\n    'rewinddir',\r\n    'rindex',\r\n    'rmdir',\r\n    'say',\r\n    'scalar',\r\n    'seek',\r\n    'seekdir',\r\n    'select',\r\n    'semctl',\r\n    'semget',\r\n    'semop',\r\n    'send',\r\n    'setgrent',\r\n    'sethostent',\r\n    'setnetent',\r\n    'setpgrp',\r\n    'setpriority',\r\n    'setprotoent',\r\n    'setpwent',\r\n    'setservent',\r\n    'setsockopt',\r\n    'shift',\r\n    'shmctl',\r\n    'shmget',\r\n    'shmread',\r\n    'shmwrite',\r\n    'shutdown',\r\n    'sin',\r\n    'sleep',\r\n    'socket',\r\n    'socketpair',\r\n    'sort',\r\n    'splice',\r\n    'split',\r\n    'sprintf',\r\n    'sqrt',\r\n    'srand',\r\n    'stat',\r\n    'state',\r\n    'study',\r\n    'sub',\r\n    'substr',\r\n    'symlink',\r\n    'syscall',\r\n    'sysopen',\r\n    'sysread',\r\n    'sysseek',\r\n    'system',\r\n    'syswrite',\r\n    'tell',\r\n    'telldir',\r\n    'tie',\r\n    'tied',\r\n    'time',\r\n    'times',\r\n    'tr',\r\n    'truncate',\r\n    'uc',\r\n    'ucfirst',\r\n    'umask',\r\n    'undef',\r\n    'unless',\r\n    'unlink',\r\n    'unpack',\r\n    'unshift',\r\n    'untie',\r\n    'until',\r\n    'use',\r\n    'utime',\r\n    'values',\r\n    'vec',\r\n    'wait',\r\n    'waitpid',\r\n    'wantarray',\r\n    'warn',\r\n    'when',\r\n    'while',\r\n    'write',\r\n    'x|0',\r\n    'xor',\r\n    'y|0'\r\n  ];\r\n\r\n  // https://perldoc.perl.org/perlre#Modifiers\r\n  const REGEX_MODIFIERS = /[dualxmsipngr]{0,12}/; // aa and xx are valid, making max length 12\r\n  const PERL_KEYWORDS = {\r\n    $pattern: /[\\w.]+/,\r\n    keyword: KEYWORDS.join(\" \")\r\n  };\r\n  const SUBST = {\r\n    className: 'subst',\r\n    begin: '[$@]\\\\{',\r\n    end: '\\\\}',\r\n    keywords: PERL_KEYWORDS\r\n  };\r\n  const METHOD = {\r\n    begin: /->\\{/,\r\n    end: /\\}/\r\n    // contains defined later\r\n  };\r\n  const VAR = { variants: [\r\n    { begin: /\\$\\d/ },\r\n    { begin: regex.concat(\r\n      /[$%@](\\^\\w\\b|#\\w+(::\\w+)*|\\{\\w+\\}|\\w+(::\\w*)*)/,\r\n      // negative look-ahead tries to avoid matching patterns that are not\r\n      // Perl at all like $ident$, @ident@, etc.\r\n      `(?![A-Za-z])(?![@$%])`\r\n    ) },\r\n    {\r\n      begin: /[$%@][^\\s\\w{]/,\r\n      relevance: 0\r\n    }\r\n  ] };\r\n  const STRING_CONTAINS = [\r\n    hljs.BACKSLASH_ESCAPE,\r\n    SUBST,\r\n    VAR\r\n  ];\r\n  const REGEX_DELIMS = [\r\n    /!/,\r\n    /\\//,\r\n    /\\|/,\r\n    /\\?/,\r\n    /'/,\r\n    /\"/, // valid but infrequent and weird\r\n    /#/ // valid but infrequent and weird\r\n  ];\r\n  /**\r\n   * @param {string|RegExp} prefix\r\n   * @param {string|RegExp} open\r\n   * @param {string|RegExp} close\r\n   */\r\n  const PAIRED_DOUBLE_RE = (prefix, open, close = '\\\\1') => {\r\n    const middle = (close === '\\\\1')\r\n      ? close\r\n      : regex.concat(close, open);\r\n    return regex.concat(\r\n      regex.concat(\"(?:\", prefix, \")\"),\r\n      open,\r\n      /(?:\\\\.|[^\\\\\\/])*?/,\r\n      middle,\r\n      /(?:\\\\.|[^\\\\\\/])*?/,\r\n      close,\r\n      REGEX_MODIFIERS\r\n    );\r\n  };\r\n  /**\r\n   * @param {string|RegExp} prefix\r\n   * @param {string|RegExp} open\r\n   * @param {string|RegExp} close\r\n   */\r\n  const PAIRED_RE = (prefix, open, close) => {\r\n    return regex.concat(\r\n      regex.concat(\"(?:\", prefix, \")\"),\r\n      open,\r\n      /(?:\\\\.|[^\\\\\\/])*?/,\r\n      close,\r\n      REGEX_MODIFIERS\r\n    );\r\n  };\r\n  const PERL_DEFAULT_CONTAINS = [\r\n    VAR,\r\n    hljs.HASH_COMMENT_MODE,\r\n    hljs.COMMENT(\r\n      /^=\\w/,\r\n      /=cut/,\r\n      { endsWithParent: true }\r\n    ),\r\n    METHOD,\r\n    {\r\n      className: 'string',\r\n      contains: STRING_CONTAINS,\r\n      variants: [\r\n        {\r\n          begin: 'q[qwxr]?\\\\s*\\\\(',\r\n          end: '\\\\)',\r\n          relevance: 5\r\n        },\r\n        {\r\n          begin: 'q[qwxr]?\\\\s*\\\\[',\r\n          end: '\\\\]',\r\n          relevance: 5\r\n        },\r\n        {\r\n          begin: 'q[qwxr]?\\\\s*\\\\{',\r\n          end: '\\\\}',\r\n          relevance: 5\r\n        },\r\n        {\r\n          begin: 'q[qwxr]?\\\\s*\\\\|',\r\n          end: '\\\\|',\r\n          relevance: 5\r\n        },\r\n        {\r\n          begin: 'q[qwxr]?\\\\s*<',\r\n          end: '>',\r\n          relevance: 5\r\n        },\r\n        {\r\n          begin: 'qw\\\\s+q',\r\n          end: 'q',\r\n          relevance: 5\r\n        },\r\n        {\r\n          begin: '\\'',\r\n          end: '\\'',\r\n          contains: [ hljs.BACKSLASH_ESCAPE ]\r\n        },\r\n        {\r\n          begin: '\"',\r\n          end: '\"'\r\n        },\r\n        {\r\n          begin: '`',\r\n          end: '`',\r\n          contains: [ hljs.BACKSLASH_ESCAPE ]\r\n        },\r\n        {\r\n          begin: /\\{\\w+\\}/,\r\n          relevance: 0\r\n        },\r\n        {\r\n          begin: '-?\\\\w+\\\\s*=>',\r\n          relevance: 0\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      className: 'number',\r\n      begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\r\n      relevance: 0\r\n    },\r\n    { // regexp container\r\n      begin: '(\\\\/\\\\/|' + hljs.RE_STARTERS_RE + '|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*',\r\n      keywords: 'split return print reverse grep',\r\n      relevance: 0,\r\n      contains: [\r\n        hljs.HASH_COMMENT_MODE,\r\n        {\r\n          className: 'regexp',\r\n          variants: [\r\n            // allow matching common delimiters\r\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", regex.either(...REGEX_DELIMS, { capture: true })) },\r\n            // and then paired delmis\r\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\(\", \"\\\\)\") },\r\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\[\", \"\\\\]\") },\r\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\{\", \"\\\\}\") }\r\n          ],\r\n          relevance: 2\r\n        },\r\n        {\r\n          className: 'regexp',\r\n          variants: [\r\n            {\r\n              // could be a comment in many languages so do not count\r\n              // as relevant\r\n              begin: /(m|qr)\\/\\//,\r\n              relevance: 0\r\n            },\r\n            // prefix is optional with /regex/\r\n            { begin: PAIRED_RE(\"(?:m|qr)?\", /\\//, /\\//) },\r\n            // allow matching common delimiters\r\n            { begin: PAIRED_RE(\"m|qr\", regex.either(...REGEX_DELIMS, { capture: true }), /\\1/) },\r\n            // allow common paired delmins\r\n            { begin: PAIRED_RE(\"m|qr\", /\\(/, /\\)/) },\r\n            { begin: PAIRED_RE(\"m|qr\", /\\[/, /\\]/) },\r\n            { begin: PAIRED_RE(\"m|qr\", /\\{/, /\\}/) }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      className: 'function',\r\n      beginKeywords: 'sub',\r\n      end: '(\\\\s*\\\\(.*?\\\\))?[;{]',\r\n      excludeEnd: true,\r\n      relevance: 5,\r\n      contains: [ hljs.TITLE_MODE ]\r\n    },\r\n    {\r\n      begin: '-\\\\w\\\\b',\r\n      relevance: 0\r\n    },\r\n    {\r\n      begin: \"^__DATA__$\",\r\n      end: \"^__END__$\",\r\n      subLanguage: 'mojolicious',\r\n      contains: [\r\n        {\r\n          begin: \"^@@.*\",\r\n          end: \"$\",\r\n          className: \"comment\"\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n  SUBST.contains = PERL_DEFAULT_CONTAINS;\r\n  METHOD.contains = PERL_DEFAULT_CONTAINS;\r\n\r\n  return {\r\n    name: 'Perl',\r\n    aliases: [\r\n      'pl',\r\n      'pm'\r\n    ],\r\n    keywords: PERL_KEYWORDS,\r\n    contains: PERL_DEFAULT_CONTAINS\r\n  };\r\n}\r\n\r\nmodule.exports = perl;\r\n", "/*\r\nLanguage: Objective-C\r\nAuthor: Valerii Hiora <valerii.hiora@gmail.com>\r\nContributors: Angel G. Olloqui <angelgarcia.mail@gmail.com>, Matt Diephouse <matt@diephouse.com>, Andrew Farmer <ahfarmer@gmail.com>, Minh Nguyễn <mxn@1ec5.org>\r\nWebsite: https://developer.apple.com/documentation/objectivec\r\nCategory: common\r\n*/\r\n\r\nfunction objectivec(hljs) {\r\n  const API_CLASS = {\r\n    className: 'built_in',\r\n    begin: '\\\\b(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)\\\\w+'\r\n  };\r\n  const IDENTIFIER_RE = /[a-zA-Z@][a-zA-Z0-9_]*/;\r\n  const TYPES = [\r\n    \"int\",\r\n    \"float\",\r\n    \"char\",\r\n    \"unsigned\",\r\n    \"signed\",\r\n    \"short\",\r\n    \"long\",\r\n    \"double\",\r\n    \"wchar_t\",\r\n    \"unichar\",\r\n    \"void\",\r\n    \"bool\",\r\n    \"BOOL\",\r\n    \"id|0\",\r\n    \"_Bool\"\r\n  ];\r\n  const KWS = [\r\n    \"while\",\r\n    \"export\",\r\n    \"sizeof\",\r\n    \"typedef\",\r\n    \"const\",\r\n    \"struct\",\r\n    \"for\",\r\n    \"union\",\r\n    \"volatile\",\r\n    \"static\",\r\n    \"mutable\",\r\n    \"if\",\r\n    \"do\",\r\n    \"return\",\r\n    \"goto\",\r\n    \"enum\",\r\n    \"else\",\r\n    \"break\",\r\n    \"extern\",\r\n    \"asm\",\r\n    \"case\",\r\n    \"default\",\r\n    \"register\",\r\n    \"explicit\",\r\n    \"typename\",\r\n    \"switch\",\r\n    \"continue\",\r\n    \"inline\",\r\n    \"readonly\",\r\n    \"assign\",\r\n    \"readwrite\",\r\n    \"self\",\r\n    \"@synchronized\",\r\n    \"id\",\r\n    \"typeof\",\r\n    \"nonatomic\",\r\n    \"IBOutlet\",\r\n    \"IBAction\",\r\n    \"strong\",\r\n    \"weak\",\r\n    \"copy\",\r\n    \"in\",\r\n    \"out\",\r\n    \"inout\",\r\n    \"bycopy\",\r\n    \"byref\",\r\n    \"oneway\",\r\n    \"__strong\",\r\n    \"__weak\",\r\n    \"__block\",\r\n    \"__autoreleasing\",\r\n    \"@private\",\r\n    \"@protected\",\r\n    \"@public\",\r\n    \"@try\",\r\n    \"@property\",\r\n    \"@end\",\r\n    \"@throw\",\r\n    \"@catch\",\r\n    \"@finally\",\r\n    \"@autoreleasepool\",\r\n    \"@synthesize\",\r\n    \"@dynamic\",\r\n    \"@selector\",\r\n    \"@optional\",\r\n    \"@required\",\r\n    \"@encode\",\r\n    \"@package\",\r\n    \"@import\",\r\n    \"@defs\",\r\n    \"@compatibility_alias\",\r\n    \"__bridge\",\r\n    \"__bridge_transfer\",\r\n    \"__bridge_retained\",\r\n    \"__bridge_retain\",\r\n    \"__covariant\",\r\n    \"__contravariant\",\r\n    \"__kindof\",\r\n    \"_Nonnull\",\r\n    \"_Nullable\",\r\n    \"_Null_unspecified\",\r\n    \"__FUNCTION__\",\r\n    \"__PRETTY_FUNCTION__\",\r\n    \"__attribute__\",\r\n    \"getter\",\r\n    \"setter\",\r\n    \"retain\",\r\n    \"unsafe_unretained\",\r\n    \"nonnull\",\r\n    \"nullable\",\r\n    \"null_unspecified\",\r\n    \"null_resettable\",\r\n    \"class\",\r\n    \"instancetype\",\r\n    \"NS_DESIGNATED_INITIALIZER\",\r\n    \"NS_UNAVAILABLE\",\r\n    \"NS_REQUIRES_SUPER\",\r\n    \"NS_RETURNS_INNER_POINTER\",\r\n    \"NS_INLINE\",\r\n    \"NS_AVAILABLE\",\r\n    \"NS_DEPRECATED\",\r\n    \"NS_ENUM\",\r\n    \"NS_OPTIONS\",\r\n    \"NS_SWIFT_UNAVAILABLE\",\r\n    \"NS_ASSUME_NONNULL_BEGIN\",\r\n    \"NS_ASSUME_NONNULL_END\",\r\n    \"NS_REFINED_FOR_SWIFT\",\r\n    \"NS_SWIFT_NAME\",\r\n    \"NS_SWIFT_NOTHROW\",\r\n    \"NS_DURING\",\r\n    \"NS_HANDLER\",\r\n    \"NS_ENDHANDLER\",\r\n    \"NS_VALUERETURN\",\r\n    \"NS_VOIDRETURN\"\r\n  ];\r\n  const LITERALS = [\r\n    \"false\",\r\n    \"true\",\r\n    \"FALSE\",\r\n    \"TRUE\",\r\n    \"nil\",\r\n    \"YES\",\r\n    \"NO\",\r\n    \"NULL\"\r\n  ];\r\n  const BUILT_INS = [\r\n    \"dispatch_once_t\",\r\n    \"dispatch_queue_t\",\r\n    \"dispatch_sync\",\r\n    \"dispatch_async\",\r\n    \"dispatch_once\"\r\n  ];\r\n  const KEYWORDS = {\r\n    \"variable.language\": [\r\n      \"this\",\r\n      \"super\"\r\n    ],\r\n    $pattern: IDENTIFIER_RE,\r\n    keyword: KWS,\r\n    literal: LITERALS,\r\n    built_in: BUILT_INS,\r\n    type: TYPES\r\n  };\r\n  const CLASS_KEYWORDS = {\r\n    $pattern: IDENTIFIER_RE,\r\n    keyword: [\r\n      \"@interface\",\r\n      \"@class\",\r\n      \"@protocol\",\r\n      \"@implementation\"\r\n    ]\r\n  };\r\n  return {\r\n    name: 'Objective-C',\r\n    aliases: [\r\n      'mm',\r\n      'objc',\r\n      'obj-c',\r\n      'obj-c++',\r\n      'objective-c++'\r\n    ],\r\n    keywords: KEYWORDS,\r\n    illegal: '</',\r\n    contains: [\r\n      API_CLASS,\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      hljs.C_NUMBER_MODE,\r\n      hljs.QUOTE_STRING_MODE,\r\n      hljs.APOS_STRING_MODE,\r\n      {\r\n        className: 'string',\r\n        variants: [\r\n          {\r\n            begin: '@\"',\r\n            end: '\"',\r\n            illegal: '\\\\n',\r\n            contains: [ hljs.BACKSLASH_ESCAPE ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        className: 'meta',\r\n        begin: /#\\s*[a-z]+\\b/,\r\n        end: /$/,\r\n        keywords: { keyword:\r\n            'if else elif endif define undef warning error line '\r\n            + 'pragma ifdef ifndef include' },\r\n        contains: [\r\n          {\r\n            begin: /\\\\\\n/,\r\n            relevance: 0\r\n          },\r\n          hljs.inherit(hljs.QUOTE_STRING_MODE, { className: 'string' }),\r\n          {\r\n            className: 'string',\r\n            begin: /<.*?>/,\r\n            end: /$/,\r\n            illegal: '\\\\n'\r\n          },\r\n          hljs.C_LINE_COMMENT_MODE,\r\n          hljs.C_BLOCK_COMMENT_MODE\r\n        ]\r\n      },\r\n      {\r\n        className: 'class',\r\n        begin: '(' + CLASS_KEYWORDS.keyword.join('|') + ')\\\\b',\r\n        end: /(\\{|$)/,\r\n        excludeEnd: true,\r\n        keywords: CLASS_KEYWORDS,\r\n        contains: [ hljs.UNDERSCORE_TITLE_MODE ]\r\n      },\r\n      {\r\n        begin: '\\\\.' + hljs.UNDERSCORE_IDENT_RE,\r\n        relevance: 0\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = objectivec;\r\n", "/*\r\nLanguage: PHP\r\nAuthor: Victor Karamzin <Victor.Karamzin@enterra-inc.com>\r\nContributors: Evgeny Stepanischev <imbolk@gmail.com>, Ivan Sagalaev <maniac@softwaremaniacs.org>\r\nWebsite: https://www.php.net\r\nCategory: common\r\n*/\r\n\r\n/**\r\n * @param {HLJSApi} hljs\r\n * @returns {LanguageDetail}\r\n * */\r\nfunction php(hljs) {\r\n  const regex = hljs.regex;\r\n  // negative look-ahead tries to avoid matching patterns that are not\r\n  // Perl at all like $ident$, @ident@, etc.\r\n  const NOT_PERL_ETC = /(?![A-Za-z0-9])(?![$])/;\r\n  const IDENT_RE = regex.concat(\r\n    /[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*/,\r\n    NOT_PERL_ETC);\r\n  // Will not detect camelCase classes\r\n  const PASCAL_CASE_CLASS_NAME_RE = regex.concat(\r\n    /(\\\\?[A-Z][a-z0-9_\\x7f-\\xff]+|\\\\?[A-Z]+(?=[A-Z][a-z0-9_\\x7f-\\xff])){1,}/,\r\n    NOT_PERL_ETC);\r\n  const VARIABLE = {\r\n    scope: 'variable',\r\n    match: '\\\\$+' + IDENT_RE,\r\n  };\r\n  const PREPROCESSOR = {\r\n    scope: 'meta',\r\n    variants: [\r\n      { begin: /<\\?php/, relevance: 10 }, // boost for obvious PHP\r\n      { begin: /<\\?=/ },\r\n      // less relevant per PSR-1 which says not to use short-tags\r\n      { begin: /<\\?/, relevance: 0.1 },\r\n      { begin: /\\?>/ } // end php tag\r\n    ]\r\n  };\r\n  const SUBST = {\r\n    scope: 'subst',\r\n    variants: [\r\n      { begin: /\\$\\w+/ },\r\n      {\r\n        begin: /\\{\\$/,\r\n        end: /\\}/\r\n      }\r\n    ]\r\n  };\r\n  const SINGLE_QUOTED = hljs.inherit(hljs.APOS_STRING_MODE, { illegal: null, });\r\n  const DOUBLE_QUOTED = hljs.inherit(hljs.QUOTE_STRING_MODE, {\r\n    illegal: null,\r\n    contains: hljs.QUOTE_STRING_MODE.contains.concat(SUBST),\r\n  });\r\n\r\n  const HEREDOC = {\r\n    begin: /<<<[ \\t]*(?:(\\w+)|\"(\\w+)\")\\n/,\r\n    end: /[ \\t]*(\\w+)\\b/,\r\n    contains: hljs.QUOTE_STRING_MODE.contains.concat(SUBST),\r\n    'on:begin': (m, resp) => { resp.data._beginMatch = m[1] || m[2]; },\r\n    'on:end': (m, resp) => { if (resp.data._beginMatch !== m[1]) resp.ignoreMatch(); },\r\n  };\r\n\r\n  const NOWDOC = hljs.END_SAME_AS_BEGIN({\r\n    begin: /<<<[ \\t]*'(\\w+)'\\n/,\r\n    end: /[ \\t]*(\\w+)\\b/,\r\n  });\r\n  // list of valid whitespaces because non-breaking space might be part of a IDENT_RE\r\n  const WHITESPACE = '[ \\t\\n]';\r\n  const STRING = {\r\n    scope: 'string',\r\n    variants: [\r\n      DOUBLE_QUOTED,\r\n      SINGLE_QUOTED,\r\n      HEREDOC,\r\n      NOWDOC\r\n    ]\r\n  };\r\n  const NUMBER = {\r\n    scope: 'number',\r\n    variants: [\r\n      { begin: `\\\\b0[bB][01]+(?:_[01]+)*\\\\b` }, // Binary w/ underscore support\r\n      { begin: `\\\\b0[oO][0-7]+(?:_[0-7]+)*\\\\b` }, // Octals w/ underscore support\r\n      { begin: `\\\\b0[xX][\\\\da-fA-F]+(?:_[\\\\da-fA-F]+)*\\\\b` }, // Hex w/ underscore support\r\n      // Decimals w/ underscore support, with optional fragments and scientific exponent (e) suffix.\r\n      { begin: `(?:\\\\b\\\\d+(?:_\\\\d+)*(\\\\.(?:\\\\d+(?:_\\\\d+)*))?|\\\\B\\\\.\\\\d+)(?:[eE][+-]?\\\\d+)?` }\r\n    ],\r\n    relevance: 0\r\n  };\r\n  const LITERALS = [\r\n    \"false\",\r\n    \"null\",\r\n    \"true\"\r\n  ];\r\n  const KWS = [\r\n    // Magic constants:\r\n    // <https://www.php.net/manual/en/language.constants.predefined.php>\r\n    \"__CLASS__\",\r\n    \"__DIR__\",\r\n    \"__FILE__\",\r\n    \"__FUNCTION__\",\r\n    \"__COMPILER_HALT_OFFSET__\",\r\n    \"__LINE__\",\r\n    \"__METHOD__\",\r\n    \"__NAMESPACE__\",\r\n    \"__TRAIT__\",\r\n    // Function that look like language construct or language construct that look like function:\r\n    // List of keywords that may not require parenthesis\r\n    \"die\",\r\n    \"echo\",\r\n    \"exit\",\r\n    \"include\",\r\n    \"include_once\",\r\n    \"print\",\r\n    \"require\",\r\n    \"require_once\",\r\n    // These are not language construct (function) but operate on the currently-executing function and can access the current symbol table\r\n    // 'compact extract func_get_arg func_get_args func_num_args get_called_class get_parent_class ' +\r\n    // Other keywords:\r\n    // <https://www.php.net/manual/en/reserved.php>\r\n    // <https://www.php.net/manual/en/language.types.type-juggling.php>\r\n    \"array\",\r\n    \"abstract\",\r\n    \"and\",\r\n    \"as\",\r\n    \"binary\",\r\n    \"bool\",\r\n    \"boolean\",\r\n    \"break\",\r\n    \"callable\",\r\n    \"case\",\r\n    \"catch\",\r\n    \"class\",\r\n    \"clone\",\r\n    \"const\",\r\n    \"continue\",\r\n    \"declare\",\r\n    \"default\",\r\n    \"do\",\r\n    \"double\",\r\n    \"else\",\r\n    \"elseif\",\r\n    \"empty\",\r\n    \"enddeclare\",\r\n    \"endfor\",\r\n    \"endforeach\",\r\n    \"endif\",\r\n    \"endswitch\",\r\n    \"endwhile\",\r\n    \"enum\",\r\n    \"eval\",\r\n    \"extends\",\r\n    \"final\",\r\n    \"finally\",\r\n    \"float\",\r\n    \"for\",\r\n    \"foreach\",\r\n    \"from\",\r\n    \"global\",\r\n    \"goto\",\r\n    \"if\",\r\n    \"implements\",\r\n    \"instanceof\",\r\n    \"insteadof\",\r\n    \"int\",\r\n    \"integer\",\r\n    \"interface\",\r\n    \"isset\",\r\n    \"iterable\",\r\n    \"list\",\r\n    \"match|0\",\r\n    \"mixed\",\r\n    \"new\",\r\n    \"never\",\r\n    \"object\",\r\n    \"or\",\r\n    \"private\",\r\n    \"protected\",\r\n    \"public\",\r\n    \"readonly\",\r\n    \"real\",\r\n    \"return\",\r\n    \"string\",\r\n    \"switch\",\r\n    \"throw\",\r\n    \"trait\",\r\n    \"try\",\r\n    \"unset\",\r\n    \"use\",\r\n    \"var\",\r\n    \"void\",\r\n    \"while\",\r\n    \"xor\",\r\n    \"yield\"\r\n  ];\r\n\r\n  const BUILT_INS = [\r\n    // Standard PHP library:\r\n    // <https://www.php.net/manual/en/book.spl.php>\r\n    \"Error|0\",\r\n    \"AppendIterator\",\r\n    \"ArgumentCountError\",\r\n    \"ArithmeticError\",\r\n    \"ArrayIterator\",\r\n    \"ArrayObject\",\r\n    \"AssertionError\",\r\n    \"BadFunctionCallException\",\r\n    \"BadMethodCallException\",\r\n    \"CachingIterator\",\r\n    \"CallbackFilterIterator\",\r\n    \"CompileError\",\r\n    \"Countable\",\r\n    \"DirectoryIterator\",\r\n    \"DivisionByZeroError\",\r\n    \"DomainException\",\r\n    \"EmptyIterator\",\r\n    \"ErrorException\",\r\n    \"Exception\",\r\n    \"FilesystemIterator\",\r\n    \"FilterIterator\",\r\n    \"GlobIterator\",\r\n    \"InfiniteIterator\",\r\n    \"InvalidArgumentException\",\r\n    \"IteratorIterator\",\r\n    \"LengthException\",\r\n    \"LimitIterator\",\r\n    \"LogicException\",\r\n    \"MultipleIterator\",\r\n    \"NoRewindIterator\",\r\n    \"OutOfBoundsException\",\r\n    \"OutOfRangeException\",\r\n    \"OuterIterator\",\r\n    \"OverflowException\",\r\n    \"ParentIterator\",\r\n    \"ParseError\",\r\n    \"RangeException\",\r\n    \"RecursiveArrayIterator\",\r\n    \"RecursiveCachingIterator\",\r\n    \"RecursiveCallbackFilterIterator\",\r\n    \"RecursiveDirectoryIterator\",\r\n    \"RecursiveFilterIterator\",\r\n    \"RecursiveIterator\",\r\n    \"RecursiveIteratorIterator\",\r\n    \"RecursiveRegexIterator\",\r\n    \"RecursiveTreeIterator\",\r\n    \"RegexIterator\",\r\n    \"RuntimeException\",\r\n    \"SeekableIterator\",\r\n    \"SplDoublyLinkedList\",\r\n    \"SplFileInfo\",\r\n    \"SplFileObject\",\r\n    \"SplFixedArray\",\r\n    \"SplHeap\",\r\n    \"SplMaxHeap\",\r\n    \"SplMinHeap\",\r\n    \"SplObjectStorage\",\r\n    \"SplObserver\",\r\n    \"SplPriorityQueue\",\r\n    \"SplQueue\",\r\n    \"SplStack\",\r\n    \"SplSubject\",\r\n    \"SplTempFileObject\",\r\n    \"TypeError\",\r\n    \"UnderflowException\",\r\n    \"UnexpectedValueException\",\r\n    \"UnhandledMatchError\",\r\n    // Reserved interfaces:\r\n    // <https://www.php.net/manual/en/reserved.interfaces.php>\r\n    \"ArrayAccess\",\r\n    \"BackedEnum\",\r\n    \"Closure\",\r\n    \"Fiber\",\r\n    \"Generator\",\r\n    \"Iterator\",\r\n    \"IteratorAggregate\",\r\n    \"Serializable\",\r\n    \"Stringable\",\r\n    \"Throwable\",\r\n    \"Traversable\",\r\n    \"UnitEnum\",\r\n    \"WeakReference\",\r\n    \"WeakMap\",\r\n    // Reserved classes:\r\n    // <https://www.php.net/manual/en/reserved.classes.php>\r\n    \"Directory\",\r\n    \"__PHP_Incomplete_Class\",\r\n    \"parent\",\r\n    \"php_user_filter\",\r\n    \"self\",\r\n    \"static\",\r\n    \"stdClass\"\r\n  ];\r\n\r\n  /** Dual-case keywords\r\n   *\r\n   * [\"then\",\"FILE\"] =>\r\n   *     [\"then\", \"THEN\", \"FILE\", \"file\"]\r\n   *\r\n   * @param {string[]} items */\r\n  const dualCase = (items) => {\r\n    /** @type string[] */\r\n    const result = [];\r\n    items.forEach(item => {\r\n      result.push(item);\r\n      if (item.toLowerCase() === item) {\r\n        result.push(item.toUpperCase());\r\n      } else {\r\n        result.push(item.toLowerCase());\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const KEYWORDS = {\r\n    keyword: KWS,\r\n    literal: dualCase(LITERALS),\r\n    built_in: BUILT_INS,\r\n  };\r\n\r\n  /**\r\n   * @param {string[]} items */\r\n  const normalizeKeywords = (items) => {\r\n    return items.map(item => {\r\n      return item.replace(/\\|\\d+$/, \"\");\r\n    });\r\n  };\r\n\r\n  const CONSTRUCTOR_CALL = { variants: [\r\n    {\r\n      match: [\r\n        /new/,\r\n        regex.concat(WHITESPACE, \"+\"),\r\n        // to prevent built ins from being confused as the class constructor call\r\n        regex.concat(\"(?!\", normalizeKeywords(BUILT_INS).join(\"\\\\b|\"), \"\\\\b)\"),\r\n        PASCAL_CASE_CLASS_NAME_RE,\r\n      ],\r\n      scope: {\r\n        1: \"keyword\",\r\n        4: \"title.class\",\r\n      },\r\n    }\r\n  ] };\r\n\r\n  const CONSTANT_REFERENCE = regex.concat(IDENT_RE, \"\\\\b(?!\\\\()\");\r\n\r\n  const LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON = { variants: [\r\n    {\r\n      match: [\r\n        regex.concat(\r\n          /::/,\r\n          regex.lookahead(/(?!class\\b)/)\r\n        ),\r\n        CONSTANT_REFERENCE,\r\n      ],\r\n      scope: { 2: \"variable.constant\", },\r\n    },\r\n    {\r\n      match: [\r\n        /::/,\r\n        /class/,\r\n      ],\r\n      scope: { 2: \"variable.language\", },\r\n    },\r\n    {\r\n      match: [\r\n        PASCAL_CASE_CLASS_NAME_RE,\r\n        regex.concat(\r\n          /::/,\r\n          regex.lookahead(/(?!class\\b)/)\r\n        ),\r\n        CONSTANT_REFERENCE,\r\n      ],\r\n      scope: {\r\n        1: \"title.class\",\r\n        3: \"variable.constant\",\r\n      },\r\n    },\r\n    {\r\n      match: [\r\n        PASCAL_CASE_CLASS_NAME_RE,\r\n        regex.concat(\r\n          \"::\",\r\n          regex.lookahead(/(?!class\\b)/)\r\n        ),\r\n      ],\r\n      scope: { 1: \"title.class\", },\r\n    },\r\n    {\r\n      match: [\r\n        PASCAL_CASE_CLASS_NAME_RE,\r\n        /::/,\r\n        /class/,\r\n      ],\r\n      scope: {\r\n        1: \"title.class\",\r\n        3: \"variable.language\",\r\n      },\r\n    }\r\n  ] };\r\n\r\n  const NAMED_ARGUMENT = {\r\n    scope: 'attr',\r\n    match: regex.concat(IDENT_RE, regex.lookahead(':'), regex.lookahead(/(?!::)/)),\r\n  };\r\n  const PARAMS_MODE = {\r\n    relevance: 0,\r\n    begin: /\\(/,\r\n    end: /\\)/,\r\n    keywords: KEYWORDS,\r\n    contains: [\r\n      NAMED_ARGUMENT,\r\n      VARIABLE,\r\n      LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      STRING,\r\n      NUMBER,\r\n      CONSTRUCTOR_CALL,\r\n    ],\r\n  };\r\n  const FUNCTION_INVOKE = {\r\n    relevance: 0,\r\n    match: [\r\n      /\\b/,\r\n      // to prevent keywords from being confused as the function title\r\n      regex.concat(\"(?!fn\\\\b|function\\\\b|\", normalizeKeywords(KWS).join(\"\\\\b|\"), \"|\", normalizeKeywords(BUILT_INS).join(\"\\\\b|\"), \"\\\\b)\"),\r\n      IDENT_RE,\r\n      regex.concat(WHITESPACE, \"*\"),\r\n      regex.lookahead(/(?=\\()/)\r\n    ],\r\n    scope: { 3: \"title.function.invoke\", },\r\n    contains: [ PARAMS_MODE ]\r\n  };\r\n  PARAMS_MODE.contains.push(FUNCTION_INVOKE);\r\n\r\n  const ATTRIBUTE_CONTAINS = [\r\n    NAMED_ARGUMENT,\r\n    LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,\r\n    hljs.C_BLOCK_COMMENT_MODE,\r\n    STRING,\r\n    NUMBER,\r\n    CONSTRUCTOR_CALL,\r\n  ];\r\n\r\n  const ATTRIBUTES = {\r\n    begin: regex.concat(/#\\[\\s*/, PASCAL_CASE_CLASS_NAME_RE),\r\n    beginScope: \"meta\",\r\n    end: /]/,\r\n    endScope: \"meta\",\r\n    keywords: {\r\n      literal: LITERALS,\r\n      keyword: [\r\n        'new',\r\n        'array',\r\n      ]\r\n    },\r\n    contains: [\r\n      {\r\n        begin: /\\[/,\r\n        end: /]/,\r\n        keywords: {\r\n          literal: LITERALS,\r\n          keyword: [\r\n            'new',\r\n            'array',\r\n          ]\r\n        },\r\n        contains: [\r\n          'self',\r\n          ...ATTRIBUTE_CONTAINS,\r\n        ]\r\n      },\r\n      ...ATTRIBUTE_CONTAINS,\r\n      {\r\n        scope: 'meta',\r\n        match: PASCAL_CASE_CLASS_NAME_RE\r\n      }\r\n    ]\r\n  };\r\n\r\n  return {\r\n    case_insensitive: false,\r\n    keywords: KEYWORDS,\r\n    contains: [\r\n      ATTRIBUTES,\r\n      hljs.HASH_COMMENT_MODE,\r\n      hljs.COMMENT('//', '$'),\r\n      hljs.COMMENT(\r\n        '/\\\\*',\r\n        '\\\\*/',\r\n        { contains: [\r\n          {\r\n            scope: 'doctag',\r\n            match: '@[A-Za-z]+'\r\n          }\r\n        ] }\r\n      ),\r\n      {\r\n        match: /__halt_compiler\\(\\);/,\r\n        keywords: '__halt_compiler',\r\n        starts: {\r\n          scope: \"comment\",\r\n          end: hljs.MATCH_NOTHING_RE,\r\n          contains: [\r\n            {\r\n              match: /\\?>/,\r\n              scope: \"meta\",\r\n              endsParent: true\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      PREPROCESSOR,\r\n      {\r\n        scope: 'variable.language',\r\n        match: /\\$this\\b/\r\n      },\r\n      VARIABLE,\r\n      FUNCTION_INVOKE,\r\n      LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,\r\n      {\r\n        match: [\r\n          /const/,\r\n          /\\s/,\r\n          IDENT_RE,\r\n        ],\r\n        scope: {\r\n          1: \"keyword\",\r\n          3: \"variable.constant\",\r\n        },\r\n      },\r\n      CONSTRUCTOR_CALL,\r\n      {\r\n        scope: 'function',\r\n        relevance: 0,\r\n        beginKeywords: 'fn function',\r\n        end: /[;{]/,\r\n        excludeEnd: true,\r\n        illegal: '[$%\\\\[]',\r\n        contains: [\r\n          { beginKeywords: 'use', },\r\n          hljs.UNDERSCORE_TITLE_MODE,\r\n          {\r\n            begin: '=>', // No markup, just a relevance booster\r\n            endsParent: true\r\n          },\r\n          {\r\n            scope: 'params',\r\n            begin: '\\\\(',\r\n            end: '\\\\)',\r\n            excludeBegin: true,\r\n            excludeEnd: true,\r\n            keywords: KEYWORDS,\r\n            contains: [\r\n              'self',\r\n              VARIABLE,\r\n              LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,\r\n              hljs.C_BLOCK_COMMENT_MODE,\r\n              STRING,\r\n              NUMBER\r\n            ]\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        scope: 'class',\r\n        variants: [\r\n          {\r\n            beginKeywords: \"enum\",\r\n            illegal: /[($\"]/\r\n          },\r\n          {\r\n            beginKeywords: \"class interface trait\",\r\n            illegal: /[:($\"]/\r\n          }\r\n        ],\r\n        relevance: 0,\r\n        end: /\\{/,\r\n        excludeEnd: true,\r\n        contains: [\r\n          { beginKeywords: 'extends implements' },\r\n          hljs.UNDERSCORE_TITLE_MODE\r\n        ]\r\n      },\r\n      // both use and namespace still use \"old style\" rules (vs multi-match)\r\n      // because the namespace name can include `\\` and we still want each\r\n      // element to be treated as its own *individual* title\r\n      {\r\n        beginKeywords: 'namespace',\r\n        relevance: 0,\r\n        end: ';',\r\n        illegal: /[.']/,\r\n        contains: [ hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, { scope: \"title.class\" }) ]\r\n      },\r\n      {\r\n        beginKeywords: 'use',\r\n        relevance: 0,\r\n        end: ';',\r\n        contains: [\r\n          // TODO: title.function vs title.class\r\n          {\r\n            match: /\\b(as|const|function)\\b/,\r\n            scope: \"keyword\"\r\n          },\r\n          // TODO: could be title.class or title.function\r\n          hljs.UNDERSCORE_TITLE_MODE\r\n        ]\r\n      },\r\n      STRING,\r\n      NUMBER,\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = php;\r\n", "/*\r\nLanguage: PHP Template\r\nRequires: xml.js, php.js\r\nAuthor: Josh Goebel <hello@joshgoebel.com>\r\nWebsite: https://www.php.net\r\nCategory: common\r\n*/\r\n\r\nfunction phpTemplate(hljs) {\r\n  return {\r\n    name: \"PHP template\",\r\n    subLanguage: 'xml',\r\n    contains: [\r\n      {\r\n        begin: /<\\?(php|=)?/,\r\n        end: /\\?>/,\r\n        subLanguage: 'php',\r\n        contains: [\r\n          // We don't want the php closing tag ?> to close the PHP block when\r\n          // inside any of the following blocks:\r\n          {\r\n            begin: '/\\\\*',\r\n            end: '\\\\*/',\r\n            skip: true\r\n          },\r\n          {\r\n            begin: 'b\"',\r\n            end: '\"',\r\n            skip: true\r\n          },\r\n          {\r\n            begin: 'b\\'',\r\n            end: '\\'',\r\n            skip: true\r\n          },\r\n          hljs.inherit(hljs.APOS_STRING_MODE, {\r\n            illegal: null,\r\n            className: null,\r\n            contains: null,\r\n            skip: true\r\n          }),\r\n          hljs.inherit(hljs.QUOTE_STRING_MODE, {\r\n            illegal: null,\r\n            className: null,\r\n            contains: null,\r\n            skip: true\r\n          })\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = phpTemplate;\r\n", "/*\r\nLanguage: Plain text\r\nAuthor: Egor Rogov (e.rogov@postgrespro.ru)\r\nDescription: Plain text without any highlighting.\r\nCategory: common\r\n*/\r\n\r\nfunction plaintext(hljs) {\r\n  return {\r\n    name: 'Plain text',\r\n    aliases: [\r\n      'text',\r\n      'txt'\r\n    ],\r\n    disableAutodetect: true\r\n  };\r\n}\r\n\r\nmodule.exports = plaintext;\r\n", "/*\r\nLanguage: Python\r\nDescription: Python is an interpreted, object-oriented, high-level programming language with dynamic semantics.\r\nWebsite: https://www.python.org\r\nCategory: common\r\n*/\r\n\r\nfunction python(hljs) {\r\n  const regex = hljs.regex;\r\n  const IDENT_RE = /[\\p{XID_Start}_]\\p{XID_Continue}*/u;\r\n  const RESERVED_WORDS = [\r\n    'and',\r\n    'as',\r\n    'assert',\r\n    'async',\r\n    'await',\r\n    'break',\r\n    'case',\r\n    'class',\r\n    'continue',\r\n    'def',\r\n    'del',\r\n    'elif',\r\n    'else',\r\n    'except',\r\n    'finally',\r\n    'for',\r\n    'from',\r\n    'global',\r\n    'if',\r\n    'import',\r\n    'in',\r\n    'is',\r\n    'lambda',\r\n    'match',\r\n    'nonlocal|10',\r\n    'not',\r\n    'or',\r\n    'pass',\r\n    'raise',\r\n    'return',\r\n    'try',\r\n    'while',\r\n    'with',\r\n    'yield'\r\n  ];\r\n\r\n  const BUILT_INS = [\r\n    '__import__',\r\n    'abs',\r\n    'all',\r\n    'any',\r\n    'ascii',\r\n    'bin',\r\n    'bool',\r\n    'breakpoint',\r\n    'bytearray',\r\n    'bytes',\r\n    'callable',\r\n    'chr',\r\n    'classmethod',\r\n    'compile',\r\n    'complex',\r\n    'delattr',\r\n    'dict',\r\n    'dir',\r\n    'divmod',\r\n    'enumerate',\r\n    'eval',\r\n    'exec',\r\n    'filter',\r\n    'float',\r\n    'format',\r\n    'frozenset',\r\n    'getattr',\r\n    'globals',\r\n    'hasattr',\r\n    'hash',\r\n    'help',\r\n    'hex',\r\n    'id',\r\n    'input',\r\n    'int',\r\n    'isinstance',\r\n    'issubclass',\r\n    'iter',\r\n    'len',\r\n    'list',\r\n    'locals',\r\n    'map',\r\n    'max',\r\n    'memoryview',\r\n    'min',\r\n    'next',\r\n    'object',\r\n    'oct',\r\n    'open',\r\n    'ord',\r\n    'pow',\r\n    'print',\r\n    'property',\r\n    'range',\r\n    'repr',\r\n    'reversed',\r\n    'round',\r\n    'set',\r\n    'setattr',\r\n    'slice',\r\n    'sorted',\r\n    'staticmethod',\r\n    'str',\r\n    'sum',\r\n    'super',\r\n    'tuple',\r\n    'type',\r\n    'vars',\r\n    'zip'\r\n  ];\r\n\r\n  const LITERALS = [\r\n    '__debug__',\r\n    'Ellipsis',\r\n    'False',\r\n    'None',\r\n    'NotImplemented',\r\n    'True'\r\n  ];\r\n\r\n  // https://docs.python.org/3/library/typing.html\r\n  // TODO: Could these be supplemented by a CamelCase matcher in certain\r\n  // contexts, leaving these remaining only for relevance hinting?\r\n  const TYPES = [\r\n    \"Any\",\r\n    \"Callable\",\r\n    \"Coroutine\",\r\n    \"Dict\",\r\n    \"List\",\r\n    \"Literal\",\r\n    \"Generic\",\r\n    \"Optional\",\r\n    \"Sequence\",\r\n    \"Set\",\r\n    \"Tuple\",\r\n    \"Type\",\r\n    \"Union\"\r\n  ];\r\n\r\n  const KEYWORDS = {\r\n    $pattern: /[A-Za-z]\\w+|__\\w+__/,\r\n    keyword: RESERVED_WORDS,\r\n    built_in: BUILT_INS,\r\n    literal: LITERALS,\r\n    type: TYPES\r\n  };\r\n\r\n  const PROMPT = {\r\n    className: 'meta',\r\n    begin: /^(>>>|\\.\\.\\.) /\r\n  };\r\n\r\n  const SUBST = {\r\n    className: 'subst',\r\n    begin: /\\{/,\r\n    end: /\\}/,\r\n    keywords: KEYWORDS,\r\n    illegal: /#/\r\n  };\r\n\r\n  const LITERAL_BRACKET = {\r\n    begin: /\\{\\{/,\r\n    relevance: 0\r\n  };\r\n\r\n  const STRING = {\r\n    className: 'string',\r\n    contains: [ hljs.BACKSLASH_ESCAPE ],\r\n    variants: [\r\n      {\r\n        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,\r\n        end: /'''/,\r\n        contains: [\r\n          hljs.BACKSLASH_ESCAPE,\r\n          PROMPT\r\n        ],\r\n        relevance: 10\r\n      },\r\n      {\r\n        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?\"\"\"/,\r\n        end: /\"\"\"/,\r\n        contains: [\r\n          hljs.BACKSLASH_ESCAPE,\r\n          PROMPT\r\n        ],\r\n        relevance: 10\r\n      },\r\n      {\r\n        begin: /([fF][rR]|[rR][fF]|[fF])'''/,\r\n        end: /'''/,\r\n        contains: [\r\n          hljs.BACKSLASH_ESCAPE,\r\n          PROMPT,\r\n          LITERAL_BRACKET,\r\n          SUBST\r\n        ]\r\n      },\r\n      {\r\n        begin: /([fF][rR]|[rR][fF]|[fF])\"\"\"/,\r\n        end: /\"\"\"/,\r\n        contains: [\r\n          hljs.BACKSLASH_ESCAPE,\r\n          PROMPT,\r\n          LITERAL_BRACKET,\r\n          SUBST\r\n        ]\r\n      },\r\n      {\r\n        begin: /([uU]|[rR])'/,\r\n        end: /'/,\r\n        relevance: 10\r\n      },\r\n      {\r\n        begin: /([uU]|[rR])\"/,\r\n        end: /\"/,\r\n        relevance: 10\r\n      },\r\n      {\r\n        begin: /([bB]|[bB][rR]|[rR][bB])'/,\r\n        end: /'/\r\n      },\r\n      {\r\n        begin: /([bB]|[bB][rR]|[rR][bB])\"/,\r\n        end: /\"/\r\n      },\r\n      {\r\n        begin: /([fF][rR]|[rR][fF]|[fF])'/,\r\n        end: /'/,\r\n        contains: [\r\n          hljs.BACKSLASH_ESCAPE,\r\n          LITERAL_BRACKET,\r\n          SUBST\r\n        ]\r\n      },\r\n      {\r\n        begin: /([fF][rR]|[rR][fF]|[fF])\"/,\r\n        end: /\"/,\r\n        contains: [\r\n          hljs.BACKSLASH_ESCAPE,\r\n          LITERAL_BRACKET,\r\n          SUBST\r\n        ]\r\n      },\r\n      hljs.APOS_STRING_MODE,\r\n      hljs.QUOTE_STRING_MODE\r\n    ]\r\n  };\r\n\r\n  // https://docs.python.org/3.9/reference/lexical_analysis.html#numeric-literals\r\n  const digitpart = '[0-9](_?[0-9])*';\r\n  const pointfloat = `(\\\\b(${digitpart}))?\\\\.(${digitpart})|\\\\b(${digitpart})\\\\.`;\r\n  // Whitespace after a number (or any lexical token) is needed only if its absence\r\n  // would change the tokenization\r\n  // https://docs.python.org/3.9/reference/lexical_analysis.html#whitespace-between-tokens\r\n  // We deviate slightly, requiring a word boundary or a keyword\r\n  // to avoid accidentally recognizing *prefixes* (e.g., `0` in `0x41` or `08` or `0__1`)\r\n  const lookahead = `\\\\b|${RESERVED_WORDS.join('|')}`;\r\n  const NUMBER = {\r\n    className: 'number',\r\n    relevance: 0,\r\n    variants: [\r\n      // exponentfloat, pointfloat\r\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#floating-point-literals\r\n      // optionally imaginary\r\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\r\n      // Note: no leading \\b because floats can start with a decimal point\r\n      // and we don't want to mishandle e.g. `fn(.5)`,\r\n      // no trailing \\b for pointfloat because it can end with a decimal point\r\n      // and we don't want to mishandle e.g. `0..hex()`; this should be safe\r\n      // because both MUST contain a decimal point and so cannot be confused with\r\n      // the interior part of an identifier\r\n      {\r\n        begin: `(\\\\b(${digitpart})|(${pointfloat}))[eE][+-]?(${digitpart})[jJ]?(?=${lookahead})`\r\n      },\r\n      {\r\n        begin: `(${pointfloat})[jJ]?`\r\n      },\r\n\r\n      // decinteger, bininteger, octinteger, hexinteger\r\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#integer-literals\r\n      // optionally \"long\" in Python 2\r\n      // https://docs.python.org/2.7/reference/lexical_analysis.html#integer-and-long-integer-literals\r\n      // decinteger is optionally imaginary\r\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\r\n      {\r\n        begin: `\\\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?(?=${lookahead})`\r\n      },\r\n      {\r\n        begin: `\\\\b0[bB](_?[01])+[lL]?(?=${lookahead})`\r\n      },\r\n      {\r\n        begin: `\\\\b0[oO](_?[0-7])+[lL]?(?=${lookahead})`\r\n      },\r\n      {\r\n        begin: `\\\\b0[xX](_?[0-9a-fA-F])+[lL]?(?=${lookahead})`\r\n      },\r\n\r\n      // imagnumber (digitpart-based)\r\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\r\n      {\r\n        begin: `\\\\b(${digitpart})[jJ](?=${lookahead})`\r\n      }\r\n    ]\r\n  };\r\n  const COMMENT_TYPE = {\r\n    className: \"comment\",\r\n    begin: regex.lookahead(/# type:/),\r\n    end: /$/,\r\n    keywords: KEYWORDS,\r\n    contains: [\r\n      { // prevent keywords from coloring `type`\r\n        begin: /# type:/\r\n      },\r\n      // comment within a datatype comment includes no keywords\r\n      {\r\n        begin: /#/,\r\n        end: /\\b\\B/,\r\n        endsWithParent: true\r\n      }\r\n    ]\r\n  };\r\n  const PARAMS = {\r\n    className: 'params',\r\n    variants: [\r\n      // Exclude params in functions without params\r\n      {\r\n        className: \"\",\r\n        begin: /\\(\\s*\\)/,\r\n        skip: true\r\n      },\r\n      {\r\n        begin: /\\(/,\r\n        end: /\\)/,\r\n        excludeBegin: true,\r\n        excludeEnd: true,\r\n        keywords: KEYWORDS,\r\n        contains: [\r\n          'self',\r\n          PROMPT,\r\n          NUMBER,\r\n          STRING,\r\n          hljs.HASH_COMMENT_MODE\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n  SUBST.contains = [\r\n    STRING,\r\n    NUMBER,\r\n    PROMPT\r\n  ];\r\n\r\n  return {\r\n    name: 'Python',\r\n    aliases: [\r\n      'py',\r\n      'gyp',\r\n      'ipython'\r\n    ],\r\n    unicodeRegex: true,\r\n    keywords: KEYWORDS,\r\n    illegal: /(<\\/|\\?)|=>/,\r\n    contains: [\r\n      PROMPT,\r\n      NUMBER,\r\n      {\r\n        // very common convention\r\n        begin: /\\bself\\b/\r\n      },\r\n      {\r\n        // eat \"if\" prior to string so that it won't accidentally be\r\n        // labeled as an f-string\r\n        beginKeywords: \"if\",\r\n        relevance: 0\r\n      },\r\n      STRING,\r\n      COMMENT_TYPE,\r\n      hljs.HASH_COMMENT_MODE,\r\n      {\r\n        match: [\r\n          /\\bdef/, /\\s+/,\r\n          IDENT_RE,\r\n        ],\r\n        scope: {\r\n          1: \"keyword\",\r\n          3: \"title.function\"\r\n        },\r\n        contains: [ PARAMS ]\r\n      },\r\n      {\r\n        variants: [\r\n          {\r\n            match: [\r\n              /\\bclass/, /\\s+/,\r\n              IDENT_RE, /\\s*/,\r\n              /\\(\\s*/, IDENT_RE,/\\s*\\)/\r\n            ],\r\n          },\r\n          {\r\n            match: [\r\n              /\\bclass/, /\\s+/,\r\n              IDENT_RE\r\n            ],\r\n          }\r\n        ],\r\n        scope: {\r\n          1: \"keyword\",\r\n          3: \"title.class\",\r\n          6: \"title.class.inherited\",\r\n        }\r\n      },\r\n      {\r\n        className: 'meta',\r\n        begin: /^[\\t ]*@/,\r\n        end: /(?=#)|$/,\r\n        contains: [\r\n          NUMBER,\r\n          PARAMS,\r\n          STRING\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = python;\r\n", "/*\r\nLanguage: Python REPL\r\nRequires: python.js\r\nAuthor: Josh Goebel <hello@joshgoebel.com>\r\nCategory: common\r\n*/\r\n\r\nfunction pythonRepl(hljs) {\r\n  return {\r\n    aliases: [ 'pycon' ],\r\n    contains: [\r\n      {\r\n        className: 'meta.prompt',\r\n        starts: {\r\n          // a space separates the REPL prefix from the actual code\r\n          // this is purely for cleaner HTML output\r\n          end: / |$/,\r\n          starts: {\r\n            end: '$',\r\n            subLanguage: 'python'\r\n          }\r\n        },\r\n        variants: [\r\n          { begin: /^>>>(?=[ ]|$)/ },\r\n          { begin: /^\\.\\.\\.(?=[ ]|$)/ }\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = pythonRepl;\r\n", "/*\r\nLanguage: R\r\nDescription: R is a free software environment for statistical computing and graphics.\r\nAuthor: Joe Cheng <joe@rstudio.org>\r\nContributors: Konrad Rudolph <konrad.rudolph@gmail.com>\r\nWebsite: https://www.r-project.org\r\nCategory: common,scientific\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction r(hljs) {\r\n  const regex = hljs.regex;\r\n  // Identifiers in R cannot start with `_`, but they can start with `.` if it\r\n  // is not immediately followed by a digit.\r\n  // R also supports quoted identifiers, which are near-arbitrary sequences\r\n  // delimited by backticks (`…`), which may contain escape sequences. These are\r\n  // handled in a separate mode. See `test/markup/r/names.txt` for examples.\r\n  // FIXME: Support Unicode identifiers.\r\n  const IDENT_RE = /(?:(?:[a-zA-Z]|\\.[._a-zA-Z])[._a-zA-Z0-9]*)|\\.(?!\\d)/;\r\n  const NUMBER_TYPES_RE = regex.either(\r\n    // Special case: only hexadecimal binary powers can contain fractions\r\n    /0[xX][0-9a-fA-F]+\\.[0-9a-fA-F]*[pP][+-]?\\d+i?/,\r\n    // Hexadecimal numbers without fraction and optional binary power\r\n    /0[xX][0-9a-fA-F]+(?:[pP][+-]?\\d+)?[Li]?/,\r\n    // Decimal numbers\r\n    /(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?[Li]?/\r\n  );\r\n  const OPERATORS_RE = /[=!<>:]=|\\|\\||&&|:::?|<-|<<-|->>|->|\\|>|[-+*\\/?!$&|:<=>@^~]|\\*\\*/;\r\n  const PUNCTUATION_RE = regex.either(\r\n    /[()]/,\r\n    /[{}]/,\r\n    /\\[\\[/,\r\n    /[[\\]]/,\r\n    /\\\\/,\r\n    /,/\r\n  );\r\n\r\n  return {\r\n    name: 'R',\r\n\r\n    keywords: {\r\n      $pattern: IDENT_RE,\r\n      keyword:\r\n        'function if in break next repeat else for while',\r\n      literal:\r\n        'NULL NA TRUE FALSE Inf NaN NA_integer_|10 NA_real_|10 '\r\n        + 'NA_character_|10 NA_complex_|10',\r\n      built_in:\r\n        // Builtin constants\r\n        'LETTERS letters month.abb month.name pi T F '\r\n        // Primitive functions\r\n        // These are all the functions in `base` that are implemented as a\r\n        // `.Primitive`, minus those functions that are also keywords.\r\n        + 'abs acos acosh all any anyNA Arg as.call as.character '\r\n        + 'as.complex as.double as.environment as.integer as.logical '\r\n        + 'as.null.default as.numeric as.raw asin asinh atan atanh attr '\r\n        + 'attributes baseenv browser c call ceiling class Conj cos cosh '\r\n        + 'cospi cummax cummin cumprod cumsum digamma dim dimnames '\r\n        + 'emptyenv exp expression floor forceAndCall gamma gc.time '\r\n        + 'globalenv Im interactive invisible is.array is.atomic is.call '\r\n        + 'is.character is.complex is.double is.environment is.expression '\r\n        + 'is.finite is.function is.infinite is.integer is.language '\r\n        + 'is.list is.logical is.matrix is.na is.name is.nan is.null '\r\n        + 'is.numeric is.object is.pairlist is.raw is.recursive is.single '\r\n        + 'is.symbol lazyLoadDBfetch length lgamma list log max min '\r\n        + 'missing Mod names nargs nzchar oldClass on.exit pos.to.env '\r\n        + 'proc.time prod quote range Re rep retracemem return round '\r\n        + 'seq_along seq_len seq.int sign signif sin sinh sinpi sqrt '\r\n        + 'standardGeneric substitute sum switch tan tanh tanpi tracemem '\r\n        + 'trigamma trunc unclass untracemem UseMethod xtfrm',\r\n    },\r\n\r\n    contains: [\r\n      // Roxygen comments\r\n      hljs.COMMENT(\r\n        /#'/,\r\n        /$/,\r\n        { contains: [\r\n          {\r\n            // Handle `@examples` separately to cause all subsequent code\r\n            // until the next `@`-tag on its own line to be kept as-is,\r\n            // preventing highlighting. This code is example R code, so nested\r\n            // doctags shouldn’t be treated as such. See\r\n            // `test/markup/r/roxygen.txt` for an example.\r\n            scope: 'doctag',\r\n            match: /@examples/,\r\n            starts: {\r\n              end: regex.lookahead(regex.either(\r\n                // end if another doc comment\r\n                /\\n^#'\\s*(?=@[a-zA-Z]+)/,\r\n                // or a line with no comment\r\n                /\\n^(?!#')/\r\n              )),\r\n              endsParent: true\r\n            }\r\n          },\r\n          {\r\n            // Handle `@param` to highlight the parameter name following\r\n            // after.\r\n            scope: 'doctag',\r\n            begin: '@param',\r\n            end: /$/,\r\n            contains: [\r\n              {\r\n                scope: 'variable',\r\n                variants: [\r\n                  { match: IDENT_RE },\r\n                  { match: /`(?:\\\\.|[^`\\\\])+`/ }\r\n                ],\r\n                endsParent: true\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            scope: 'doctag',\r\n            match: /@[a-zA-Z]+/\r\n          },\r\n          {\r\n            scope: 'keyword',\r\n            match: /\\\\[a-zA-Z]+/\r\n          }\r\n        ] }\r\n      ),\r\n\r\n      hljs.HASH_COMMENT_MODE,\r\n\r\n      {\r\n        scope: 'string',\r\n        contains: [ hljs.BACKSLASH_ESCAPE ],\r\n        variants: [\r\n          hljs.END_SAME_AS_BEGIN({\r\n            begin: /[rR]\"(-*)\\(/,\r\n            end: /\\)(-*)\"/\r\n          }),\r\n          hljs.END_SAME_AS_BEGIN({\r\n            begin: /[rR]\"(-*)\\{/,\r\n            end: /\\}(-*)\"/\r\n          }),\r\n          hljs.END_SAME_AS_BEGIN({\r\n            begin: /[rR]\"(-*)\\[/,\r\n            end: /\\](-*)\"/\r\n          }),\r\n          hljs.END_SAME_AS_BEGIN({\r\n            begin: /[rR]'(-*)\\(/,\r\n            end: /\\)(-*)'/\r\n          }),\r\n          hljs.END_SAME_AS_BEGIN({\r\n            begin: /[rR]'(-*)\\{/,\r\n            end: /\\}(-*)'/\r\n          }),\r\n          hljs.END_SAME_AS_BEGIN({\r\n            begin: /[rR]'(-*)\\[/,\r\n            end: /\\](-*)'/\r\n          }),\r\n          {\r\n            begin: '\"',\r\n            end: '\"',\r\n            relevance: 0\r\n          },\r\n          {\r\n            begin: \"'\",\r\n            end: \"'\",\r\n            relevance: 0\r\n          }\r\n        ],\r\n      },\r\n\r\n      // Matching numbers immediately following punctuation and operators is\r\n      // tricky since we need to look at the character ahead of a number to\r\n      // ensure the number is not part of an identifier, and we cannot use\r\n      // negative look-behind assertions. So instead we explicitly handle all\r\n      // possible combinations of (operator|punctuation), number.\r\n      // TODO: replace with negative look-behind when available\r\n      // { begin: /(?<![a-zA-Z0-9._])0[xX][0-9a-fA-F]+\\.[0-9a-fA-F]*[pP][+-]?\\d+i?/ },\r\n      // { begin: /(?<![a-zA-Z0-9._])0[xX][0-9a-fA-F]+([pP][+-]?\\d+)?[Li]?/ },\r\n      // { begin: /(?<![a-zA-Z0-9._])(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?[Li]?/ }\r\n      {\r\n        relevance: 0,\r\n        variants: [\r\n          {\r\n            scope: {\r\n              1: 'operator',\r\n              2: 'number'\r\n            },\r\n            match: [\r\n              OPERATORS_RE,\r\n              NUMBER_TYPES_RE\r\n            ]\r\n          },\r\n          {\r\n            scope: {\r\n              1: 'operator',\r\n              2: 'number'\r\n            },\r\n            match: [\r\n              /%[^%]*%/,\r\n              NUMBER_TYPES_RE\r\n            ]\r\n          },\r\n          {\r\n            scope: {\r\n              1: 'punctuation',\r\n              2: 'number'\r\n            },\r\n            match: [\r\n              PUNCTUATION_RE,\r\n              NUMBER_TYPES_RE\r\n            ]\r\n          },\r\n          {\r\n            scope: { 2: 'number' },\r\n            match: [\r\n              /[^a-zA-Z0-9._]|^/, // not part of an identifier, or start of document\r\n              NUMBER_TYPES_RE\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n\r\n      // Operators/punctuation when they're not directly followed by numbers\r\n      {\r\n        // Relevance boost for the most common assignment form.\r\n        scope: { 3: 'operator' },\r\n        match: [\r\n          IDENT_RE,\r\n          /\\s+/,\r\n          /<-/,\r\n          /\\s+/\r\n        ]\r\n      },\r\n\r\n      {\r\n        scope: 'operator',\r\n        relevance: 0,\r\n        variants: [\r\n          { match: OPERATORS_RE },\r\n          { match: /%[^%]*%/ }\r\n        ]\r\n      },\r\n\r\n      {\r\n        scope: 'punctuation',\r\n        relevance: 0,\r\n        match: PUNCTUATION_RE\r\n      },\r\n\r\n      {\r\n        // Escaped identifier\r\n        begin: '`',\r\n        end: '`',\r\n        contains: [ { begin: /\\\\./ } ]\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = r;\r\n", "/*\r\nLanguage: Rust\r\nAuthor: Andrey Vlasovskikh <andrey.vlasovskikh@gmail.com>\r\nContributors: Roman Shmatov <romanshmatov@gmail.com>, Kasper Andersen <kma_untrusted@protonmail.com>\r\nWebsite: https://www.rust-lang.org\r\nCategory: common, system\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction rust(hljs) {\r\n  const regex = hljs.regex;\r\n  const FUNCTION_INVOKE = {\r\n    className: \"title.function.invoke\",\r\n    relevance: 0,\r\n    begin: regex.concat(\r\n      /\\b/,\r\n      /(?!let\\b)/,\r\n      hljs.IDENT_RE,\r\n      regex.lookahead(/\\s*\\(/))\r\n  };\r\n  const NUMBER_SUFFIX = '([ui](8|16|32|64|128|size)|f(32|64))\\?';\r\n  const KEYWORDS = [\r\n    \"abstract\",\r\n    \"as\",\r\n    \"async\",\r\n    \"await\",\r\n    \"become\",\r\n    \"box\",\r\n    \"break\",\r\n    \"const\",\r\n    \"continue\",\r\n    \"crate\",\r\n    \"do\",\r\n    \"dyn\",\r\n    \"else\",\r\n    \"enum\",\r\n    \"extern\",\r\n    \"false\",\r\n    \"final\",\r\n    \"fn\",\r\n    \"for\",\r\n    \"if\",\r\n    \"impl\",\r\n    \"in\",\r\n    \"let\",\r\n    \"loop\",\r\n    \"macro\",\r\n    \"match\",\r\n    \"mod\",\r\n    \"move\",\r\n    \"mut\",\r\n    \"override\",\r\n    \"priv\",\r\n    \"pub\",\r\n    \"ref\",\r\n    \"return\",\r\n    \"self\",\r\n    \"Self\",\r\n    \"static\",\r\n    \"struct\",\r\n    \"super\",\r\n    \"trait\",\r\n    \"true\",\r\n    \"try\",\r\n    \"type\",\r\n    \"typeof\",\r\n    \"unsafe\",\r\n    \"unsized\",\r\n    \"use\",\r\n    \"virtual\",\r\n    \"where\",\r\n    \"while\",\r\n    \"yield\"\r\n  ];\r\n  const LITERALS = [\r\n    \"true\",\r\n    \"false\",\r\n    \"Some\",\r\n    \"None\",\r\n    \"Ok\",\r\n    \"Err\"\r\n  ];\r\n  const BUILTINS = [\r\n    // functions\r\n    'drop ',\r\n    // traits\r\n    \"Copy\",\r\n    \"Send\",\r\n    \"Sized\",\r\n    \"Sync\",\r\n    \"Drop\",\r\n    \"Fn\",\r\n    \"FnMut\",\r\n    \"FnOnce\",\r\n    \"ToOwned\",\r\n    \"Clone\",\r\n    \"Debug\",\r\n    \"PartialEq\",\r\n    \"PartialOrd\",\r\n    \"Eq\",\r\n    \"Ord\",\r\n    \"AsRef\",\r\n    \"AsMut\",\r\n    \"Into\",\r\n    \"From\",\r\n    \"Default\",\r\n    \"Iterator\",\r\n    \"Extend\",\r\n    \"IntoIterator\",\r\n    \"DoubleEndedIterator\",\r\n    \"ExactSizeIterator\",\r\n    \"SliceConcatExt\",\r\n    \"ToString\",\r\n    // macros\r\n    \"assert!\",\r\n    \"assert_eq!\",\r\n    \"bitflags!\",\r\n    \"bytes!\",\r\n    \"cfg!\",\r\n    \"col!\",\r\n    \"concat!\",\r\n    \"concat_idents!\",\r\n    \"debug_assert!\",\r\n    \"debug_assert_eq!\",\r\n    \"env!\",\r\n    \"panic!\",\r\n    \"file!\",\r\n    \"format!\",\r\n    \"format_args!\",\r\n    \"include_bytes!\",\r\n    \"include_str!\",\r\n    \"line!\",\r\n    \"local_data_key!\",\r\n    \"module_path!\",\r\n    \"option_env!\",\r\n    \"print!\",\r\n    \"println!\",\r\n    \"select!\",\r\n    \"stringify!\",\r\n    \"try!\",\r\n    \"unimplemented!\",\r\n    \"unreachable!\",\r\n    \"vec!\",\r\n    \"write!\",\r\n    \"writeln!\",\r\n    \"macro_rules!\",\r\n    \"assert_ne!\",\r\n    \"debug_assert_ne!\"\r\n  ];\r\n  const TYPES = [\r\n    \"i8\",\r\n    \"i16\",\r\n    \"i32\",\r\n    \"i64\",\r\n    \"i128\",\r\n    \"isize\",\r\n    \"u8\",\r\n    \"u16\",\r\n    \"u32\",\r\n    \"u64\",\r\n    \"u128\",\r\n    \"usize\",\r\n    \"f32\",\r\n    \"f64\",\r\n    \"str\",\r\n    \"char\",\r\n    \"bool\",\r\n    \"Box\",\r\n    \"Option\",\r\n    \"Result\",\r\n    \"String\",\r\n    \"Vec\"\r\n  ];\r\n  return {\r\n    name: 'Rust',\r\n    aliases: [ 'rs' ],\r\n    keywords: {\r\n      $pattern: hljs.IDENT_RE + '!?',\r\n      type: TYPES,\r\n      keyword: KEYWORDS,\r\n      literal: LITERALS,\r\n      built_in: BUILTINS\r\n    },\r\n    illegal: '</',\r\n    contains: [\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.COMMENT('/\\\\*', '\\\\*/', { contains: [ 'self' ] }),\r\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\r\n        begin: /b?\"/,\r\n        illegal: null\r\n      }),\r\n      {\r\n        className: 'string',\r\n        variants: [\r\n          { begin: /b?r(#*)\"(.|\\n)*?\"\\1(?!#)/ },\r\n          { begin: /b?'\\\\?(x\\w{2}|u\\w{4}|U\\w{8}|.)'/ }\r\n        ]\r\n      },\r\n      {\r\n        className: 'symbol',\r\n        begin: /'[a-zA-Z_][a-zA-Z0-9_]*/\r\n      },\r\n      {\r\n        className: 'number',\r\n        variants: [\r\n          { begin: '\\\\b0b([01_]+)' + NUMBER_SUFFIX },\r\n          { begin: '\\\\b0o([0-7_]+)' + NUMBER_SUFFIX },\r\n          { begin: '\\\\b0x([A-Fa-f0-9_]+)' + NUMBER_SUFFIX },\r\n          { begin: '\\\\b(\\\\d[\\\\d_]*(\\\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)'\r\n                   + NUMBER_SUFFIX }\r\n        ],\r\n        relevance: 0\r\n      },\r\n      {\r\n        begin: [\r\n          /fn/,\r\n          /\\s+/,\r\n          hljs.UNDERSCORE_IDENT_RE\r\n        ],\r\n        className: {\r\n          1: \"keyword\",\r\n          3: \"title.function\"\r\n        }\r\n      },\r\n      {\r\n        className: 'meta',\r\n        begin: '#!?\\\\[',\r\n        end: '\\\\]',\r\n        contains: [\r\n          {\r\n            className: 'string',\r\n            begin: /\"/,\r\n            end: /\"/\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        begin: [\r\n          /let/,\r\n          /\\s+/,\r\n          /(?:mut\\s+)?/,\r\n          hljs.UNDERSCORE_IDENT_RE\r\n        ],\r\n        className: {\r\n          1: \"keyword\",\r\n          3: \"keyword\",\r\n          4: \"variable\"\r\n        }\r\n      },\r\n      // must come before impl/for rule later\r\n      {\r\n        begin: [\r\n          /for/,\r\n          /\\s+/,\r\n          hljs.UNDERSCORE_IDENT_RE,\r\n          /\\s+/,\r\n          /in/\r\n        ],\r\n        className: {\r\n          1: \"keyword\",\r\n          3: \"variable\",\r\n          5: \"keyword\"\r\n        }\r\n      },\r\n      {\r\n        begin: [\r\n          /type/,\r\n          /\\s+/,\r\n          hljs.UNDERSCORE_IDENT_RE\r\n        ],\r\n        className: {\r\n          1: \"keyword\",\r\n          3: \"title.class\"\r\n        }\r\n      },\r\n      {\r\n        begin: [\r\n          /(?:trait|enum|struct|union|impl|for)/,\r\n          /\\s+/,\r\n          hljs.UNDERSCORE_IDENT_RE\r\n        ],\r\n        className: {\r\n          1: \"keyword\",\r\n          3: \"title.class\"\r\n        }\r\n      },\r\n      {\r\n        begin: hljs.IDENT_RE + '::',\r\n        keywords: {\r\n          keyword: \"Self\",\r\n          built_in: BUILTINS,\r\n          type: TYPES\r\n        }\r\n      },\r\n      {\r\n        className: \"punctuation\",\r\n        begin: '->'\r\n      },\r\n      FUNCTION_INVOKE\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = rust;\r\n", "const MODES = (hljs) => {\r\n  return {\r\n    IMPORTANT: {\r\n      scope: 'meta',\r\n      begin: '!important'\r\n    },\r\n    BLOCK_COMMENT: hljs.C_BLOCK_COMMENT_MODE,\r\n    HEXCOLOR: {\r\n      scope: 'number',\r\n      begin: /#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\\b/\r\n    },\r\n    FUNCTION_DISPATCH: {\r\n      className: \"built_in\",\r\n      begin: /[\\w-]+(?=\\()/\r\n    },\r\n    ATTRIBUTE_SELECTOR_MODE: {\r\n      scope: 'selector-attr',\r\n      begin: /\\[/,\r\n      end: /\\]/,\r\n      illegal: '$',\r\n      contains: [\r\n        hljs.APOS_STRING_MODE,\r\n        hljs.QUOTE_STRING_MODE\r\n      ]\r\n    },\r\n    CSS_NUMBER_MODE: {\r\n      scope: 'number',\r\n      begin: hljs.NUMBER_RE + '(' +\r\n        '%|em|ex|ch|rem' +\r\n        '|vw|vh|vmin|vmax' +\r\n        '|cm|mm|in|pt|pc|px' +\r\n        '|deg|grad|rad|turn' +\r\n        '|s|ms' +\r\n        '|Hz|kHz' +\r\n        '|dpi|dpcm|dppx' +\r\n        ')?',\r\n      relevance: 0\r\n    },\r\n    CSS_VARIABLE: {\r\n      className: \"attr\",\r\n      begin: /--[A-Za-z][A-Za-z0-9_-]*/\r\n    }\r\n  };\r\n};\r\n\r\nconst TAGS = [\r\n  'a',\r\n  'abbr',\r\n  'address',\r\n  'article',\r\n  'aside',\r\n  'audio',\r\n  'b',\r\n  'blockquote',\r\n  'body',\r\n  'button',\r\n  'canvas',\r\n  'caption',\r\n  'cite',\r\n  'code',\r\n  'dd',\r\n  'del',\r\n  'details',\r\n  'dfn',\r\n  'div',\r\n  'dl',\r\n  'dt',\r\n  'em',\r\n  'fieldset',\r\n  'figcaption',\r\n  'figure',\r\n  'footer',\r\n  'form',\r\n  'h1',\r\n  'h2',\r\n  'h3',\r\n  'h4',\r\n  'h5',\r\n  'h6',\r\n  'header',\r\n  'hgroup',\r\n  'html',\r\n  'i',\r\n  'iframe',\r\n  'img',\r\n  'input',\r\n  'ins',\r\n  'kbd',\r\n  'label',\r\n  'legend',\r\n  'li',\r\n  'main',\r\n  'mark',\r\n  'menu',\r\n  'nav',\r\n  'object',\r\n  'ol',\r\n  'p',\r\n  'q',\r\n  'quote',\r\n  'samp',\r\n  'section',\r\n  'span',\r\n  'strong',\r\n  'summary',\r\n  'sup',\r\n  'table',\r\n  'tbody',\r\n  'td',\r\n  'textarea',\r\n  'tfoot',\r\n  'th',\r\n  'thead',\r\n  'time',\r\n  'tr',\r\n  'ul',\r\n  'var',\r\n  'video'\r\n];\r\n\r\nconst MEDIA_FEATURES = [\r\n  'any-hover',\r\n  'any-pointer',\r\n  'aspect-ratio',\r\n  'color',\r\n  'color-gamut',\r\n  'color-index',\r\n  'device-aspect-ratio',\r\n  'device-height',\r\n  'device-width',\r\n  'display-mode',\r\n  'forced-colors',\r\n  'grid',\r\n  'height',\r\n  'hover',\r\n  'inverted-colors',\r\n  'monochrome',\r\n  'orientation',\r\n  'overflow-block',\r\n  'overflow-inline',\r\n  'pointer',\r\n  'prefers-color-scheme',\r\n  'prefers-contrast',\r\n  'prefers-reduced-motion',\r\n  'prefers-reduced-transparency',\r\n  'resolution',\r\n  'scan',\r\n  'scripting',\r\n  'update',\r\n  'width',\r\n  // TODO: find a better solution?\r\n  'min-width',\r\n  'max-width',\r\n  'min-height',\r\n  'max-height'\r\n];\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes\r\nconst PSEUDO_CLASSES = [\r\n  'active',\r\n  'any-link',\r\n  'blank',\r\n  'checked',\r\n  'current',\r\n  'default',\r\n  'defined',\r\n  'dir', // dir()\r\n  'disabled',\r\n  'drop',\r\n  'empty',\r\n  'enabled',\r\n  'first',\r\n  'first-child',\r\n  'first-of-type',\r\n  'fullscreen',\r\n  'future',\r\n  'focus',\r\n  'focus-visible',\r\n  'focus-within',\r\n  'has', // has()\r\n  'host', // host or host()\r\n  'host-context', // host-context()\r\n  'hover',\r\n  'indeterminate',\r\n  'in-range',\r\n  'invalid',\r\n  'is', // is()\r\n  'lang', // lang()\r\n  'last-child',\r\n  'last-of-type',\r\n  'left',\r\n  'link',\r\n  'local-link',\r\n  'not', // not()\r\n  'nth-child', // nth-child()\r\n  'nth-col', // nth-col()\r\n  'nth-last-child', // nth-last-child()\r\n  'nth-last-col', // nth-last-col()\r\n  'nth-last-of-type', //nth-last-of-type()\r\n  'nth-of-type', //nth-of-type()\r\n  'only-child',\r\n  'only-of-type',\r\n  'optional',\r\n  'out-of-range',\r\n  'past',\r\n  'placeholder-shown',\r\n  'read-only',\r\n  'read-write',\r\n  'required',\r\n  'right',\r\n  'root',\r\n  'scope',\r\n  'target',\r\n  'target-within',\r\n  'user-invalid',\r\n  'valid',\r\n  'visited',\r\n  'where' // where()\r\n];\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements\r\nconst PSEUDO_ELEMENTS = [\r\n  'after',\r\n  'backdrop',\r\n  'before',\r\n  'cue',\r\n  'cue-region',\r\n  'first-letter',\r\n  'first-line',\r\n  'grammar-error',\r\n  'marker',\r\n  'part',\r\n  'placeholder',\r\n  'selection',\r\n  'slotted',\r\n  'spelling-error'\r\n];\r\n\r\nconst ATTRIBUTES = [\r\n  'align-content',\r\n  'align-items',\r\n  'align-self',\r\n  'all',\r\n  'animation',\r\n  'animation-delay',\r\n  'animation-direction',\r\n  'animation-duration',\r\n  'animation-fill-mode',\r\n  'animation-iteration-count',\r\n  'animation-name',\r\n  'animation-play-state',\r\n  'animation-timing-function',\r\n  'backface-visibility',\r\n  'background',\r\n  'background-attachment',\r\n  'background-blend-mode',\r\n  'background-clip',\r\n  'background-color',\r\n  'background-image',\r\n  'background-origin',\r\n  'background-position',\r\n  'background-repeat',\r\n  'background-size',\r\n  'block-size',\r\n  'border',\r\n  'border-block',\r\n  'border-block-color',\r\n  'border-block-end',\r\n  'border-block-end-color',\r\n  'border-block-end-style',\r\n  'border-block-end-width',\r\n  'border-block-start',\r\n  'border-block-start-color',\r\n  'border-block-start-style',\r\n  'border-block-start-width',\r\n  'border-block-style',\r\n  'border-block-width',\r\n  'border-bottom',\r\n  'border-bottom-color',\r\n  'border-bottom-left-radius',\r\n  'border-bottom-right-radius',\r\n  'border-bottom-style',\r\n  'border-bottom-width',\r\n  'border-collapse',\r\n  'border-color',\r\n  'border-image',\r\n  'border-image-outset',\r\n  'border-image-repeat',\r\n  'border-image-slice',\r\n  'border-image-source',\r\n  'border-image-width',\r\n  'border-inline',\r\n  'border-inline-color',\r\n  'border-inline-end',\r\n  'border-inline-end-color',\r\n  'border-inline-end-style',\r\n  'border-inline-end-width',\r\n  'border-inline-start',\r\n  'border-inline-start-color',\r\n  'border-inline-start-style',\r\n  'border-inline-start-width',\r\n  'border-inline-style',\r\n  'border-inline-width',\r\n  'border-left',\r\n  'border-left-color',\r\n  'border-left-style',\r\n  'border-left-width',\r\n  'border-radius',\r\n  'border-right',\r\n  'border-right-color',\r\n  'border-right-style',\r\n  'border-right-width',\r\n  'border-spacing',\r\n  'border-style',\r\n  'border-top',\r\n  'border-top-color',\r\n  'border-top-left-radius',\r\n  'border-top-right-radius',\r\n  'border-top-style',\r\n  'border-top-width',\r\n  'border-width',\r\n  'bottom',\r\n  'box-decoration-break',\r\n  'box-shadow',\r\n  'box-sizing',\r\n  'break-after',\r\n  'break-before',\r\n  'break-inside',\r\n  'caption-side',\r\n  'caret-color',\r\n  'clear',\r\n  'clip',\r\n  'clip-path',\r\n  'clip-rule',\r\n  'color',\r\n  'column-count',\r\n  'column-fill',\r\n  'column-gap',\r\n  'column-rule',\r\n  'column-rule-color',\r\n  'column-rule-style',\r\n  'column-rule-width',\r\n  'column-span',\r\n  'column-width',\r\n  'columns',\r\n  'contain',\r\n  'content',\r\n  'content-visibility',\r\n  'counter-increment',\r\n  'counter-reset',\r\n  'cue',\r\n  'cue-after',\r\n  'cue-before',\r\n  'cursor',\r\n  'direction',\r\n  'display',\r\n  'empty-cells',\r\n  'filter',\r\n  'flex',\r\n  'flex-basis',\r\n  'flex-direction',\r\n  'flex-flow',\r\n  'flex-grow',\r\n  'flex-shrink',\r\n  'flex-wrap',\r\n  'float',\r\n  'flow',\r\n  'font',\r\n  'font-display',\r\n  'font-family',\r\n  'font-feature-settings',\r\n  'font-kerning',\r\n  'font-language-override',\r\n  'font-size',\r\n  'font-size-adjust',\r\n  'font-smoothing',\r\n  'font-stretch',\r\n  'font-style',\r\n  'font-synthesis',\r\n  'font-variant',\r\n  'font-variant-caps',\r\n  'font-variant-east-asian',\r\n  'font-variant-ligatures',\r\n  'font-variant-numeric',\r\n  'font-variant-position',\r\n  'font-variation-settings',\r\n  'font-weight',\r\n  'gap',\r\n  'glyph-orientation-vertical',\r\n  'grid',\r\n  'grid-area',\r\n  'grid-auto-columns',\r\n  'grid-auto-flow',\r\n  'grid-auto-rows',\r\n  'grid-column',\r\n  'grid-column-end',\r\n  'grid-column-start',\r\n  'grid-gap',\r\n  'grid-row',\r\n  'grid-row-end',\r\n  'grid-row-start',\r\n  'grid-template',\r\n  'grid-template-areas',\r\n  'grid-template-columns',\r\n  'grid-template-rows',\r\n  'hanging-punctuation',\r\n  'height',\r\n  'hyphens',\r\n  'icon',\r\n  'image-orientation',\r\n  'image-rendering',\r\n  'image-resolution',\r\n  'ime-mode',\r\n  'inline-size',\r\n  'isolation',\r\n  'justify-content',\r\n  'left',\r\n  'letter-spacing',\r\n  'line-break',\r\n  'line-height',\r\n  'list-style',\r\n  'list-style-image',\r\n  'list-style-position',\r\n  'list-style-type',\r\n  'margin',\r\n  'margin-block',\r\n  'margin-block-end',\r\n  'margin-block-start',\r\n  'margin-bottom',\r\n  'margin-inline',\r\n  'margin-inline-end',\r\n  'margin-inline-start',\r\n  'margin-left',\r\n  'margin-right',\r\n  'margin-top',\r\n  'marks',\r\n  'mask',\r\n  'mask-border',\r\n  'mask-border-mode',\r\n  'mask-border-outset',\r\n  'mask-border-repeat',\r\n  'mask-border-slice',\r\n  'mask-border-source',\r\n  'mask-border-width',\r\n  'mask-clip',\r\n  'mask-composite',\r\n  'mask-image',\r\n  'mask-mode',\r\n  'mask-origin',\r\n  'mask-position',\r\n  'mask-repeat',\r\n  'mask-size',\r\n  'mask-type',\r\n  'max-block-size',\r\n  'max-height',\r\n  'max-inline-size',\r\n  'max-width',\r\n  'min-block-size',\r\n  'min-height',\r\n  'min-inline-size',\r\n  'min-width',\r\n  'mix-blend-mode',\r\n  'nav-down',\r\n  'nav-index',\r\n  'nav-left',\r\n  'nav-right',\r\n  'nav-up',\r\n  'none',\r\n  'normal',\r\n  'object-fit',\r\n  'object-position',\r\n  'opacity',\r\n  'order',\r\n  'orphans',\r\n  'outline',\r\n  'outline-color',\r\n  'outline-offset',\r\n  'outline-style',\r\n  'outline-width',\r\n  'overflow',\r\n  'overflow-wrap',\r\n  'overflow-x',\r\n  'overflow-y',\r\n  'padding',\r\n  'padding-block',\r\n  'padding-block-end',\r\n  'padding-block-start',\r\n  'padding-bottom',\r\n  'padding-inline',\r\n  'padding-inline-end',\r\n  'padding-inline-start',\r\n  'padding-left',\r\n  'padding-right',\r\n  'padding-top',\r\n  'page-break-after',\r\n  'page-break-before',\r\n  'page-break-inside',\r\n  'pause',\r\n  'pause-after',\r\n  'pause-before',\r\n  'perspective',\r\n  'perspective-origin',\r\n  'pointer-events',\r\n  'position',\r\n  'quotes',\r\n  'resize',\r\n  'rest',\r\n  'rest-after',\r\n  'rest-before',\r\n  'right',\r\n  'row-gap',\r\n  'scroll-margin',\r\n  'scroll-margin-block',\r\n  'scroll-margin-block-end',\r\n  'scroll-margin-block-start',\r\n  'scroll-margin-bottom',\r\n  'scroll-margin-inline',\r\n  'scroll-margin-inline-end',\r\n  'scroll-margin-inline-start',\r\n  'scroll-margin-left',\r\n  'scroll-margin-right',\r\n  'scroll-margin-top',\r\n  'scroll-padding',\r\n  'scroll-padding-block',\r\n  'scroll-padding-block-end',\r\n  'scroll-padding-block-start',\r\n  'scroll-padding-bottom',\r\n  'scroll-padding-inline',\r\n  'scroll-padding-inline-end',\r\n  'scroll-padding-inline-start',\r\n  'scroll-padding-left',\r\n  'scroll-padding-right',\r\n  'scroll-padding-top',\r\n  'scroll-snap-align',\r\n  'scroll-snap-stop',\r\n  'scroll-snap-type',\r\n  'scrollbar-color',\r\n  'scrollbar-gutter',\r\n  'scrollbar-width',\r\n  'shape-image-threshold',\r\n  'shape-margin',\r\n  'shape-outside',\r\n  'speak',\r\n  'speak-as',\r\n  'src', // @font-face\r\n  'tab-size',\r\n  'table-layout',\r\n  'text-align',\r\n  'text-align-all',\r\n  'text-align-last',\r\n  'text-combine-upright',\r\n  'text-decoration',\r\n  'text-decoration-color',\r\n  'text-decoration-line',\r\n  'text-decoration-style',\r\n  'text-emphasis',\r\n  'text-emphasis-color',\r\n  'text-emphasis-position',\r\n  'text-emphasis-style',\r\n  'text-indent',\r\n  'text-justify',\r\n  'text-orientation',\r\n  'text-overflow',\r\n  'text-rendering',\r\n  'text-shadow',\r\n  'text-transform',\r\n  'text-underline-position',\r\n  'top',\r\n  'transform',\r\n  'transform-box',\r\n  'transform-origin',\r\n  'transform-style',\r\n  'transition',\r\n  'transition-delay',\r\n  'transition-duration',\r\n  'transition-property',\r\n  'transition-timing-function',\r\n  'unicode-bidi',\r\n  'vertical-align',\r\n  'visibility',\r\n  'voice-balance',\r\n  'voice-duration',\r\n  'voice-family',\r\n  'voice-pitch',\r\n  'voice-range',\r\n  'voice-rate',\r\n  'voice-stress',\r\n  'voice-volume',\r\n  'white-space',\r\n  'widows',\r\n  'width',\r\n  'will-change',\r\n  'word-break',\r\n  'word-spacing',\r\n  'word-wrap',\r\n  'writing-mode',\r\n  'z-index'\r\n  // reverse makes sure longer attributes `font-weight` are matched fully\r\n  // instead of getting false positives on say `font`\r\n].reverse();\r\n\r\n/*\r\nLanguage: SCSS\r\nDescription: Scss is an extension of the syntax of CSS.\r\nAuthor: Kurt Emch <kurt@kurtemch.com>\r\nWebsite: https://sass-lang.com\r\nCategory: common, css, web\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction scss(hljs) {\r\n  const modes = MODES(hljs);\r\n  const PSEUDO_ELEMENTS$1 = PSEUDO_ELEMENTS;\r\n  const PSEUDO_CLASSES$1 = PSEUDO_CLASSES;\r\n\r\n  const AT_IDENTIFIER = '@[a-z-]+'; // @font-face\r\n  const AT_MODIFIERS = \"and or not only\";\r\n  const IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\r\n  const VARIABLE = {\r\n    className: 'variable',\r\n    begin: '(\\\\$' + IDENT_RE + ')\\\\b',\r\n    relevance: 0\r\n  };\r\n\r\n  return {\r\n    name: 'SCSS',\r\n    case_insensitive: true,\r\n    illegal: '[=/|\\']',\r\n    contains: [\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      // to recognize keyframe 40% etc which are outside the scope of our\r\n      // attribute value mode\r\n      modes.CSS_NUMBER_MODE,\r\n      {\r\n        className: 'selector-id',\r\n        begin: '#[A-Za-z0-9_-]+',\r\n        relevance: 0\r\n      },\r\n      {\r\n        className: 'selector-class',\r\n        begin: '\\\\.[A-Za-z0-9_-]+',\r\n        relevance: 0\r\n      },\r\n      modes.ATTRIBUTE_SELECTOR_MODE,\r\n      {\r\n        className: 'selector-tag',\r\n        begin: '\\\\b(' + TAGS.join('|') + ')\\\\b',\r\n        // was there, before, but why?\r\n        relevance: 0\r\n      },\r\n      {\r\n        className: 'selector-pseudo',\r\n        begin: ':(' + PSEUDO_CLASSES$1.join('|') + ')'\r\n      },\r\n      {\r\n        className: 'selector-pseudo',\r\n        begin: ':(:)?(' + PSEUDO_ELEMENTS$1.join('|') + ')'\r\n      },\r\n      VARIABLE,\r\n      { // pseudo-selector params\r\n        begin: /\\(/,\r\n        end: /\\)/,\r\n        contains: [ modes.CSS_NUMBER_MODE ]\r\n      },\r\n      modes.CSS_VARIABLE,\r\n      {\r\n        className: 'attribute',\r\n        begin: '\\\\b(' + ATTRIBUTES.join('|') + ')\\\\b'\r\n      },\r\n      { begin: '\\\\b(whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|underline|transparent|top|thin|thick|text|text-top|text-bottom|tb-rl|table-header-group|table-footer-group|sw-resize|super|strict|static|square|solid|small-caps|separate|se-resize|scroll|s-resize|rtl|row-resize|ridge|right|repeat|repeat-y|repeat-x|relative|progress|pointer|overline|outside|outset|oblique|nowrap|not-allowed|normal|none|nw-resize|no-repeat|no-drop|newspaper|ne-resize|n-resize|move|middle|medium|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|list-item|line|line-through|line-edge|lighter|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline|inline-block|inherit|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|horizontal|hidden|help|hand|groove|fixed|ellipsis|e-resize|double|dotted|distribute|distribute-space|distribute-letter|distribute-all-lines|disc|disabled|default|decimal|dashed|crosshair|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|bolder|bold|block|bidi-override|below|baseline|auto|always|all-scroll|absolute|table|table-cell)\\\\b' },\r\n      {\r\n        begin: /:/,\r\n        end: /[;}{]/,\r\n        relevance: 0,\r\n        contains: [\r\n          modes.BLOCK_COMMENT,\r\n          VARIABLE,\r\n          modes.HEXCOLOR,\r\n          modes.CSS_NUMBER_MODE,\r\n          hljs.QUOTE_STRING_MODE,\r\n          hljs.APOS_STRING_MODE,\r\n          modes.IMPORTANT,\r\n          modes.FUNCTION_DISPATCH\r\n        ]\r\n      },\r\n      // matching these here allows us to treat them more like regular CSS\r\n      // rules so everything between the {} gets regular rule highlighting,\r\n      // which is what we want for page and font-face\r\n      {\r\n        begin: '@(page|font-face)',\r\n        keywords: {\r\n          $pattern: AT_IDENTIFIER,\r\n          keyword: '@page @font-face'\r\n        }\r\n      },\r\n      {\r\n        begin: '@',\r\n        end: '[{;]',\r\n        returnBegin: true,\r\n        keywords: {\r\n          $pattern: /[a-z-]+/,\r\n          keyword: AT_MODIFIERS,\r\n          attribute: MEDIA_FEATURES.join(\" \")\r\n        },\r\n        contains: [\r\n          {\r\n            begin: AT_IDENTIFIER,\r\n            className: \"keyword\"\r\n          },\r\n          {\r\n            begin: /[a-z-]+(?=:)/,\r\n            className: \"attribute\"\r\n          },\r\n          VARIABLE,\r\n          hljs.QUOTE_STRING_MODE,\r\n          hljs.APOS_STRING_MODE,\r\n          modes.HEXCOLOR,\r\n          modes.CSS_NUMBER_MODE\r\n        ]\r\n      },\r\n      modes.FUNCTION_DISPATCH\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = scss;\r\n", "/*\r\nLanguage: Shell Session\r\nRequires: bash.js\r\nAuthor: TSUYUSATO Kitsune <make.just.on@gmail.com>\r\nCategory: common\r\nAudit: 2020\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction shell(hljs) {\r\n  return {\r\n    name: 'Shell Session',\r\n    aliases: [\r\n      'console',\r\n      'shellsession'\r\n    ],\r\n    contains: [\r\n      {\r\n        className: 'meta.prompt',\r\n        // We cannot add \\s (spaces) in the regular expression otherwise it will be too broad and produce unexpected result.\r\n        // For instance, in the following example, it would match \"echo /path/to/home >\" as a prompt:\r\n        // echo /path/to/home > t.exe\r\n        begin: /^\\s{0,3}[/~\\w\\d[\\]()@-]*[>%$#][ ]?/,\r\n        starts: {\r\n          end: /[^\\\\](?=\\s*$)/,\r\n          subLanguage: 'bash'\r\n        }\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = shell;\r\n", "/*\r\n Language: SQL\r\n Website: https://en.wikipedia.org/wiki/SQL\r\n Category: common, database\r\n */\r\n\r\n/*\r\n\r\nGoals:\r\n\r\nSQL is intended to highlight basic/common SQL keywords and expressions\r\n\r\n- If pretty much every single SQL server includes supports, then it's a canidate.\r\n- It is NOT intended to include tons of vendor specific keywords (Oracle, MySQL,\r\n  PostgreSQL) although the list of data types is purposely a bit more expansive.\r\n- For more specific SQL grammars please see:\r\n  - PostgreSQL and PL/pgSQL - core\r\n  - T-SQL - https://github.com/highlightjs/highlightjs-tsql\r\n  - sql_more (core)\r\n\r\n */\r\n\r\nfunction sql(hljs) {\r\n  const regex = hljs.regex;\r\n  const COMMENT_MODE = hljs.COMMENT('--', '$');\r\n  const STRING = {\r\n    className: 'string',\r\n    variants: [\r\n      {\r\n        begin: /'/,\r\n        end: /'/,\r\n        contains: [ { begin: /''/ } ]\r\n      }\r\n    ]\r\n  };\r\n  const QUOTED_IDENTIFIER = {\r\n    begin: /\"/,\r\n    end: /\"/,\r\n    contains: [ { begin: /\"\"/ } ]\r\n  };\r\n\r\n  const LITERALS = [\r\n    \"true\",\r\n    \"false\",\r\n    // Not sure it's correct to call NULL literal, and clauses like IS [NOT] NULL look strange that way.\r\n    // \"null\",\r\n    \"unknown\"\r\n  ];\r\n\r\n  const MULTI_WORD_TYPES = [\r\n    \"double precision\",\r\n    \"large object\",\r\n    \"with timezone\",\r\n    \"without timezone\"\r\n  ];\r\n\r\n  const TYPES = [\r\n    'bigint',\r\n    'binary',\r\n    'blob',\r\n    'boolean',\r\n    'char',\r\n    'character',\r\n    'clob',\r\n    'date',\r\n    'dec',\r\n    'decfloat',\r\n    'decimal',\r\n    'float',\r\n    'int',\r\n    'integer',\r\n    'interval',\r\n    'nchar',\r\n    'nclob',\r\n    'national',\r\n    'numeric',\r\n    'real',\r\n    'row',\r\n    'smallint',\r\n    'time',\r\n    'timestamp',\r\n    'varchar',\r\n    'varying', // modifier (character varying)\r\n    'varbinary'\r\n  ];\r\n\r\n  const NON_RESERVED_WORDS = [\r\n    \"add\",\r\n    \"asc\",\r\n    \"collation\",\r\n    \"desc\",\r\n    \"final\",\r\n    \"first\",\r\n    \"last\",\r\n    \"view\"\r\n  ];\r\n\r\n  // https://jakewheat.github.io/sql-overview/sql-2016-foundation-grammar.html#reserved-word\r\n  const RESERVED_WORDS = [\r\n    \"abs\",\r\n    \"acos\",\r\n    \"all\",\r\n    \"allocate\",\r\n    \"alter\",\r\n    \"and\",\r\n    \"any\",\r\n    \"are\",\r\n    \"array\",\r\n    \"array_agg\",\r\n    \"array_max_cardinality\",\r\n    \"as\",\r\n    \"asensitive\",\r\n    \"asin\",\r\n    \"asymmetric\",\r\n    \"at\",\r\n    \"atan\",\r\n    \"atomic\",\r\n    \"authorization\",\r\n    \"avg\",\r\n    \"begin\",\r\n    \"begin_frame\",\r\n    \"begin_partition\",\r\n    \"between\",\r\n    \"bigint\",\r\n    \"binary\",\r\n    \"blob\",\r\n    \"boolean\",\r\n    \"both\",\r\n    \"by\",\r\n    \"call\",\r\n    \"called\",\r\n    \"cardinality\",\r\n    \"cascaded\",\r\n    \"case\",\r\n    \"cast\",\r\n    \"ceil\",\r\n    \"ceiling\",\r\n    \"char\",\r\n    \"char_length\",\r\n    \"character\",\r\n    \"character_length\",\r\n    \"check\",\r\n    \"classifier\",\r\n    \"clob\",\r\n    \"close\",\r\n    \"coalesce\",\r\n    \"collate\",\r\n    \"collect\",\r\n    \"column\",\r\n    \"commit\",\r\n    \"condition\",\r\n    \"connect\",\r\n    \"constraint\",\r\n    \"contains\",\r\n    \"convert\",\r\n    \"copy\",\r\n    \"corr\",\r\n    \"corresponding\",\r\n    \"cos\",\r\n    \"cosh\",\r\n    \"count\",\r\n    \"covar_pop\",\r\n    \"covar_samp\",\r\n    \"create\",\r\n    \"cross\",\r\n    \"cube\",\r\n    \"cume_dist\",\r\n    \"current\",\r\n    \"current_catalog\",\r\n    \"current_date\",\r\n    \"current_default_transform_group\",\r\n    \"current_path\",\r\n    \"current_role\",\r\n    \"current_row\",\r\n    \"current_schema\",\r\n    \"current_time\",\r\n    \"current_timestamp\",\r\n    \"current_path\",\r\n    \"current_role\",\r\n    \"current_transform_group_for_type\",\r\n    \"current_user\",\r\n    \"cursor\",\r\n    \"cycle\",\r\n    \"date\",\r\n    \"day\",\r\n    \"deallocate\",\r\n    \"dec\",\r\n    \"decimal\",\r\n    \"decfloat\",\r\n    \"declare\",\r\n    \"default\",\r\n    \"define\",\r\n    \"delete\",\r\n    \"dense_rank\",\r\n    \"deref\",\r\n    \"describe\",\r\n    \"deterministic\",\r\n    \"disconnect\",\r\n    \"distinct\",\r\n    \"double\",\r\n    \"drop\",\r\n    \"dynamic\",\r\n    \"each\",\r\n    \"element\",\r\n    \"else\",\r\n    \"empty\",\r\n    \"end\",\r\n    \"end_frame\",\r\n    \"end_partition\",\r\n    \"end-exec\",\r\n    \"equals\",\r\n    \"escape\",\r\n    \"every\",\r\n    \"except\",\r\n    \"exec\",\r\n    \"execute\",\r\n    \"exists\",\r\n    \"exp\",\r\n    \"external\",\r\n    \"extract\",\r\n    \"false\",\r\n    \"fetch\",\r\n    \"filter\",\r\n    \"first_value\",\r\n    \"float\",\r\n    \"floor\",\r\n    \"for\",\r\n    \"foreign\",\r\n    \"frame_row\",\r\n    \"free\",\r\n    \"from\",\r\n    \"full\",\r\n    \"function\",\r\n    \"fusion\",\r\n    \"get\",\r\n    \"global\",\r\n    \"grant\",\r\n    \"group\",\r\n    \"grouping\",\r\n    \"groups\",\r\n    \"having\",\r\n    \"hold\",\r\n    \"hour\",\r\n    \"identity\",\r\n    \"in\",\r\n    \"indicator\",\r\n    \"initial\",\r\n    \"inner\",\r\n    \"inout\",\r\n    \"insensitive\",\r\n    \"insert\",\r\n    \"int\",\r\n    \"integer\",\r\n    \"intersect\",\r\n    \"intersection\",\r\n    \"interval\",\r\n    \"into\",\r\n    \"is\",\r\n    \"join\",\r\n    \"json_array\",\r\n    \"json_arrayagg\",\r\n    \"json_exists\",\r\n    \"json_object\",\r\n    \"json_objectagg\",\r\n    \"json_query\",\r\n    \"json_table\",\r\n    \"json_table_primitive\",\r\n    \"json_value\",\r\n    \"lag\",\r\n    \"language\",\r\n    \"large\",\r\n    \"last_value\",\r\n    \"lateral\",\r\n    \"lead\",\r\n    \"leading\",\r\n    \"left\",\r\n    \"like\",\r\n    \"like_regex\",\r\n    \"listagg\",\r\n    \"ln\",\r\n    \"local\",\r\n    \"localtime\",\r\n    \"localtimestamp\",\r\n    \"log\",\r\n    \"log10\",\r\n    \"lower\",\r\n    \"match\",\r\n    \"match_number\",\r\n    \"match_recognize\",\r\n    \"matches\",\r\n    \"max\",\r\n    \"member\",\r\n    \"merge\",\r\n    \"method\",\r\n    \"min\",\r\n    \"minute\",\r\n    \"mod\",\r\n    \"modifies\",\r\n    \"module\",\r\n    \"month\",\r\n    \"multiset\",\r\n    \"national\",\r\n    \"natural\",\r\n    \"nchar\",\r\n    \"nclob\",\r\n    \"new\",\r\n    \"no\",\r\n    \"none\",\r\n    \"normalize\",\r\n    \"not\",\r\n    \"nth_value\",\r\n    \"ntile\",\r\n    \"null\",\r\n    \"nullif\",\r\n    \"numeric\",\r\n    \"octet_length\",\r\n    \"occurrences_regex\",\r\n    \"of\",\r\n    \"offset\",\r\n    \"old\",\r\n    \"omit\",\r\n    \"on\",\r\n    \"one\",\r\n    \"only\",\r\n    \"open\",\r\n    \"or\",\r\n    \"order\",\r\n    \"out\",\r\n    \"outer\",\r\n    \"over\",\r\n    \"overlaps\",\r\n    \"overlay\",\r\n    \"parameter\",\r\n    \"partition\",\r\n    \"pattern\",\r\n    \"per\",\r\n    \"percent\",\r\n    \"percent_rank\",\r\n    \"percentile_cont\",\r\n    \"percentile_disc\",\r\n    \"period\",\r\n    \"portion\",\r\n    \"position\",\r\n    \"position_regex\",\r\n    \"power\",\r\n    \"precedes\",\r\n    \"precision\",\r\n    \"prepare\",\r\n    \"primary\",\r\n    \"procedure\",\r\n    \"ptf\",\r\n    \"range\",\r\n    \"rank\",\r\n    \"reads\",\r\n    \"real\",\r\n    \"recursive\",\r\n    \"ref\",\r\n    \"references\",\r\n    \"referencing\",\r\n    \"regr_avgx\",\r\n    \"regr_avgy\",\r\n    \"regr_count\",\r\n    \"regr_intercept\",\r\n    \"regr_r2\",\r\n    \"regr_slope\",\r\n    \"regr_sxx\",\r\n    \"regr_sxy\",\r\n    \"regr_syy\",\r\n    \"release\",\r\n    \"result\",\r\n    \"return\",\r\n    \"returns\",\r\n    \"revoke\",\r\n    \"right\",\r\n    \"rollback\",\r\n    \"rollup\",\r\n    \"row\",\r\n    \"row_number\",\r\n    \"rows\",\r\n    \"running\",\r\n    \"savepoint\",\r\n    \"scope\",\r\n    \"scroll\",\r\n    \"search\",\r\n    \"second\",\r\n    \"seek\",\r\n    \"select\",\r\n    \"sensitive\",\r\n    \"session_user\",\r\n    \"set\",\r\n    \"show\",\r\n    \"similar\",\r\n    \"sin\",\r\n    \"sinh\",\r\n    \"skip\",\r\n    \"smallint\",\r\n    \"some\",\r\n    \"specific\",\r\n    \"specifictype\",\r\n    \"sql\",\r\n    \"sqlexception\",\r\n    \"sqlstate\",\r\n    \"sqlwarning\",\r\n    \"sqrt\",\r\n    \"start\",\r\n    \"static\",\r\n    \"stddev_pop\",\r\n    \"stddev_samp\",\r\n    \"submultiset\",\r\n    \"subset\",\r\n    \"substring\",\r\n    \"substring_regex\",\r\n    \"succeeds\",\r\n    \"sum\",\r\n    \"symmetric\",\r\n    \"system\",\r\n    \"system_time\",\r\n    \"system_user\",\r\n    \"table\",\r\n    \"tablesample\",\r\n    \"tan\",\r\n    \"tanh\",\r\n    \"then\",\r\n    \"time\",\r\n    \"timestamp\",\r\n    \"timezone_hour\",\r\n    \"timezone_minute\",\r\n    \"to\",\r\n    \"trailing\",\r\n    \"translate\",\r\n    \"translate_regex\",\r\n    \"translation\",\r\n    \"treat\",\r\n    \"trigger\",\r\n    \"trim\",\r\n    \"trim_array\",\r\n    \"true\",\r\n    \"truncate\",\r\n    \"uescape\",\r\n    \"union\",\r\n    \"unique\",\r\n    \"unknown\",\r\n    \"unnest\",\r\n    \"update\",\r\n    \"upper\",\r\n    \"user\",\r\n    \"using\",\r\n    \"value\",\r\n    \"values\",\r\n    \"value_of\",\r\n    \"var_pop\",\r\n    \"var_samp\",\r\n    \"varbinary\",\r\n    \"varchar\",\r\n    \"varying\",\r\n    \"versioning\",\r\n    \"when\",\r\n    \"whenever\",\r\n    \"where\",\r\n    \"width_bucket\",\r\n    \"window\",\r\n    \"with\",\r\n    \"within\",\r\n    \"without\",\r\n    \"year\",\r\n  ];\r\n\r\n  // these are reserved words we have identified to be functions\r\n  // and should only be highlighted in a dispatch-like context\r\n  // ie, array_agg(...), etc.\r\n  const RESERVED_FUNCTIONS = [\r\n    \"abs\",\r\n    \"acos\",\r\n    \"array_agg\",\r\n    \"asin\",\r\n    \"atan\",\r\n    \"avg\",\r\n    \"cast\",\r\n    \"ceil\",\r\n    \"ceiling\",\r\n    \"coalesce\",\r\n    \"corr\",\r\n    \"cos\",\r\n    \"cosh\",\r\n    \"count\",\r\n    \"covar_pop\",\r\n    \"covar_samp\",\r\n    \"cume_dist\",\r\n    \"dense_rank\",\r\n    \"deref\",\r\n    \"element\",\r\n    \"exp\",\r\n    \"extract\",\r\n    \"first_value\",\r\n    \"floor\",\r\n    \"json_array\",\r\n    \"json_arrayagg\",\r\n    \"json_exists\",\r\n    \"json_object\",\r\n    \"json_objectagg\",\r\n    \"json_query\",\r\n    \"json_table\",\r\n    \"json_table_primitive\",\r\n    \"json_value\",\r\n    \"lag\",\r\n    \"last_value\",\r\n    \"lead\",\r\n    \"listagg\",\r\n    \"ln\",\r\n    \"log\",\r\n    \"log10\",\r\n    \"lower\",\r\n    \"max\",\r\n    \"min\",\r\n    \"mod\",\r\n    \"nth_value\",\r\n    \"ntile\",\r\n    \"nullif\",\r\n    \"percent_rank\",\r\n    \"percentile_cont\",\r\n    \"percentile_disc\",\r\n    \"position\",\r\n    \"position_regex\",\r\n    \"power\",\r\n    \"rank\",\r\n    \"regr_avgx\",\r\n    \"regr_avgy\",\r\n    \"regr_count\",\r\n    \"regr_intercept\",\r\n    \"regr_r2\",\r\n    \"regr_slope\",\r\n    \"regr_sxx\",\r\n    \"regr_sxy\",\r\n    \"regr_syy\",\r\n    \"row_number\",\r\n    \"sin\",\r\n    \"sinh\",\r\n    \"sqrt\",\r\n    \"stddev_pop\",\r\n    \"stddev_samp\",\r\n    \"substring\",\r\n    \"substring_regex\",\r\n    \"sum\",\r\n    \"tan\",\r\n    \"tanh\",\r\n    \"translate\",\r\n    \"translate_regex\",\r\n    \"treat\",\r\n    \"trim\",\r\n    \"trim_array\",\r\n    \"unnest\",\r\n    \"upper\",\r\n    \"value_of\",\r\n    \"var_pop\",\r\n    \"var_samp\",\r\n    \"width_bucket\",\r\n  ];\r\n\r\n  // these functions can\r\n  const POSSIBLE_WITHOUT_PARENS = [\r\n    \"current_catalog\",\r\n    \"current_date\",\r\n    \"current_default_transform_group\",\r\n    \"current_path\",\r\n    \"current_role\",\r\n    \"current_schema\",\r\n    \"current_transform_group_for_type\",\r\n    \"current_user\",\r\n    \"session_user\",\r\n    \"system_time\",\r\n    \"system_user\",\r\n    \"current_time\",\r\n    \"localtime\",\r\n    \"current_timestamp\",\r\n    \"localtimestamp\"\r\n  ];\r\n\r\n  // those exist to boost relevance making these very\r\n  // \"SQL like\" keyword combos worth +1 extra relevance\r\n  const COMBOS = [\r\n    \"create table\",\r\n    \"insert into\",\r\n    \"primary key\",\r\n    \"foreign key\",\r\n    \"not null\",\r\n    \"alter table\",\r\n    \"add constraint\",\r\n    \"grouping sets\",\r\n    \"on overflow\",\r\n    \"character set\",\r\n    \"respect nulls\",\r\n    \"ignore nulls\",\r\n    \"nulls first\",\r\n    \"nulls last\",\r\n    \"depth first\",\r\n    \"breadth first\"\r\n  ];\r\n\r\n  const FUNCTIONS = RESERVED_FUNCTIONS;\r\n\r\n  const KEYWORDS = [\r\n    ...RESERVED_WORDS,\r\n    ...NON_RESERVED_WORDS\r\n  ].filter((keyword) => {\r\n    return !RESERVED_FUNCTIONS.includes(keyword);\r\n  });\r\n\r\n  const VARIABLE = {\r\n    className: \"variable\",\r\n    begin: /@[a-z0-9][a-z0-9_]*/,\r\n  };\r\n\r\n  const OPERATOR = {\r\n    className: \"operator\",\r\n    begin: /[-+*/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,\r\n    relevance: 0,\r\n  };\r\n\r\n  const FUNCTION_CALL = {\r\n    begin: regex.concat(/\\b/, regex.either(...FUNCTIONS), /\\s*\\(/),\r\n    relevance: 0,\r\n    keywords: { built_in: FUNCTIONS }\r\n  };\r\n\r\n  // keywords with less than 3 letters are reduced in relevancy\r\n  function reduceRelevancy(list, {\r\n    exceptions, when\r\n  } = {}) {\r\n    const qualifyFn = when;\r\n    exceptions = exceptions || [];\r\n    return list.map((item) => {\r\n      if (item.match(/\\|\\d+$/) || exceptions.includes(item)) {\r\n        return item;\r\n      } else if (qualifyFn(item)) {\r\n        return `${item}|0`;\r\n      } else {\r\n        return item;\r\n      }\r\n    });\r\n  }\r\n\r\n  return {\r\n    name: 'SQL',\r\n    case_insensitive: true,\r\n    // does not include {} or HTML tags `</`\r\n    illegal: /[{}]|<\\//,\r\n    keywords: {\r\n      $pattern: /\\b[\\w\\.]+/,\r\n      keyword:\r\n        reduceRelevancy(KEYWORDS, { when: (x) => x.length < 3 }),\r\n      literal: LITERALS,\r\n      type: TYPES,\r\n      built_in: POSSIBLE_WITHOUT_PARENS\r\n    },\r\n    contains: [\r\n      {\r\n        begin: regex.either(...COMBOS),\r\n        relevance: 0,\r\n        keywords: {\r\n          $pattern: /[\\w\\.]+/,\r\n          keyword: KEYWORDS.concat(COMBOS),\r\n          literal: LITERALS,\r\n          type: TYPES\r\n        },\r\n      },\r\n      {\r\n        className: \"type\",\r\n        begin: regex.either(...MULTI_WORD_TYPES)\r\n      },\r\n      FUNCTION_CALL,\r\n      VARIABLE,\r\n      STRING,\r\n      QUOTED_IDENTIFIER,\r\n      hljs.C_NUMBER_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      COMMENT_MODE,\r\n      OPERATOR\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = sql;\r\n", "/**\r\n * @param {string} value\r\n * @returns {RegExp}\r\n * */\r\n\r\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\r\nfunction source(re) {\r\n  if (!re) return null;\r\n  if (typeof re === \"string\") return re;\r\n\r\n  return re.source;\r\n}\r\n\r\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\r\nfunction lookahead(re) {\r\n  return concat('(?=', re, ')');\r\n}\r\n\r\n/**\r\n * @param {...(RegExp | string) } args\r\n * @returns {string}\r\n */\r\nfunction concat(...args) {\r\n  const joined = args.map((x) => source(x)).join(\"\");\r\n  return joined;\r\n}\r\n\r\n/**\r\n * @param { Array<string | RegExp | Object> } args\r\n * @returns {object}\r\n */\r\nfunction stripOptionsFromArgs(args) {\r\n  const opts = args[args.length - 1];\r\n\r\n  if (typeof opts === 'object' && opts.constructor === Object) {\r\n    args.splice(args.length - 1, 1);\r\n    return opts;\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n\r\n/** @typedef { {capture?: boolean} } RegexEitherOptions */\r\n\r\n/**\r\n * Any of the passed expresssions may match\r\n *\r\n * Creates a huge this | this | that | that match\r\n * @param {(RegExp | string)[] | [...(RegExp | string)[], RegexEitherOptions]} args\r\n * @returns {string}\r\n */\r\nfunction either(...args) {\r\n  /** @type { object & {capture?: boolean} }  */\r\n  const opts = stripOptionsFromArgs(args);\r\n  const joined = '('\r\n    + (opts.capture ? \"\" : \"?:\")\r\n    + args.map((x) => source(x)).join(\"|\") + \")\";\r\n  return joined;\r\n}\r\n\r\nconst keywordWrapper = keyword => concat(\r\n  /\\b/,\r\n  keyword,\r\n  /\\w$/.test(keyword) ? /\\b/ : /\\B/\r\n);\r\n\r\n// Keywords that require a leading dot.\r\nconst dotKeywords = [\r\n  'Protocol', // contextual\r\n  'Type' // contextual\r\n].map(keywordWrapper);\r\n\r\n// Keywords that may have a leading dot.\r\nconst optionalDotKeywords = [\r\n  'init',\r\n  'self'\r\n].map(keywordWrapper);\r\n\r\n// should register as keyword, not type\r\nconst keywordTypes = [\r\n  'Any',\r\n  'Self'\r\n];\r\n\r\n// Regular keywords and literals.\r\nconst keywords = [\r\n  // strings below will be fed into the regular `keywords` engine while regex\r\n  // will result in additional modes being created to scan for those keywords to\r\n  // avoid conflicts with other rules\r\n  'actor',\r\n  'any', // contextual\r\n  'associatedtype',\r\n  'async',\r\n  'await',\r\n  /as\\?/, // operator\r\n  /as!/, // operator\r\n  'as', // operator\r\n  'break',\r\n  'case',\r\n  'catch',\r\n  'class',\r\n  'continue',\r\n  'convenience', // contextual\r\n  'default',\r\n  'defer',\r\n  'deinit',\r\n  'didSet', // contextual\r\n  'distributed',\r\n  'do',\r\n  'dynamic', // contextual\r\n  'else',\r\n  'enum',\r\n  'extension',\r\n  'fallthrough',\r\n  /fileprivate\\(set\\)/,\r\n  'fileprivate',\r\n  'final', // contextual\r\n  'for',\r\n  'func',\r\n  'get', // contextual\r\n  'guard',\r\n  'if',\r\n  'import',\r\n  'indirect', // contextual\r\n  'infix', // contextual\r\n  /init\\?/,\r\n  /init!/,\r\n  'inout',\r\n  /internal\\(set\\)/,\r\n  'internal',\r\n  'in',\r\n  'is', // operator\r\n  'isolated', // contextual\r\n  'nonisolated', // contextual\r\n  'lazy', // contextual\r\n  'let',\r\n  'mutating', // contextual\r\n  'nonmutating', // contextual\r\n  /open\\(set\\)/, // contextual\r\n  'open', // contextual\r\n  'operator',\r\n  'optional', // contextual\r\n  'override', // contextual\r\n  'postfix', // contextual\r\n  'precedencegroup',\r\n  'prefix', // contextual\r\n  /private\\(set\\)/,\r\n  'private',\r\n  'protocol',\r\n  /public\\(set\\)/,\r\n  'public',\r\n  'repeat',\r\n  'required', // contextual\r\n  'rethrows',\r\n  'return',\r\n  'set', // contextual\r\n  'some', // contextual\r\n  'static',\r\n  'struct',\r\n  'subscript',\r\n  'super',\r\n  'switch',\r\n  'throws',\r\n  'throw',\r\n  /try\\?/, // operator\r\n  /try!/, // operator\r\n  'try', // operator\r\n  'typealias',\r\n  /unowned\\(safe\\)/, // contextual\r\n  /unowned\\(unsafe\\)/, // contextual\r\n  'unowned', // contextual\r\n  'var',\r\n  'weak', // contextual\r\n  'where',\r\n  'while',\r\n  'willSet' // contextual\r\n];\r\n\r\n// NOTE: Contextual keywords are reserved only in specific contexts.\r\n// Ideally, these should be matched using modes to avoid false positives.\r\n\r\n// Literals.\r\nconst literals = [\r\n  'false',\r\n  'nil',\r\n  'true'\r\n];\r\n\r\n// Keywords used in precedence groups.\r\nconst precedencegroupKeywords = [\r\n  'assignment',\r\n  'associativity',\r\n  'higherThan',\r\n  'left',\r\n  'lowerThan',\r\n  'none',\r\n  'right'\r\n];\r\n\r\n// Keywords that start with a number sign (#).\r\n// #(un)available is handled separately.\r\nconst numberSignKeywords = [\r\n  '#colorLiteral',\r\n  '#column',\r\n  '#dsohandle',\r\n  '#else',\r\n  '#elseif',\r\n  '#endif',\r\n  '#error',\r\n  '#file',\r\n  '#fileID',\r\n  '#fileLiteral',\r\n  '#filePath',\r\n  '#function',\r\n  '#if',\r\n  '#imageLiteral',\r\n  '#keyPath',\r\n  '#line',\r\n  '#selector',\r\n  '#sourceLocation',\r\n  '#warn_unqualified_access',\r\n  '#warning'\r\n];\r\n\r\n// Global functions in the Standard Library.\r\nconst builtIns = [\r\n  'abs',\r\n  'all',\r\n  'any',\r\n  'assert',\r\n  'assertionFailure',\r\n  'debugPrint',\r\n  'dump',\r\n  'fatalError',\r\n  'getVaList',\r\n  'isKnownUniquelyReferenced',\r\n  'max',\r\n  'min',\r\n  'numericCast',\r\n  'pointwiseMax',\r\n  'pointwiseMin',\r\n  'precondition',\r\n  'preconditionFailure',\r\n  'print',\r\n  'readLine',\r\n  'repeatElement',\r\n  'sequence',\r\n  'stride',\r\n  'swap',\r\n  'swift_unboxFromSwiftValueWithType',\r\n  'transcode',\r\n  'type',\r\n  'unsafeBitCast',\r\n  'unsafeDowncast',\r\n  'withExtendedLifetime',\r\n  'withUnsafeMutablePointer',\r\n  'withUnsafePointer',\r\n  'withVaList',\r\n  'withoutActuallyEscaping',\r\n  'zip'\r\n];\r\n\r\n// Valid first characters for operators.\r\nconst operatorHead = either(\r\n  /[/=\\-+!*%<>&|^~?]/,\r\n  /[\\u00A1-\\u00A7]/,\r\n  /[\\u00A9\\u00AB]/,\r\n  /[\\u00AC\\u00AE]/,\r\n  /[\\u00B0\\u00B1]/,\r\n  /[\\u00B6\\u00BB\\u00BF\\u00D7\\u00F7]/,\r\n  /[\\u2016-\\u2017]/,\r\n  /[\\u2020-\\u2027]/,\r\n  /[\\u2030-\\u203E]/,\r\n  /[\\u2041-\\u2053]/,\r\n  /[\\u2055-\\u205E]/,\r\n  /[\\u2190-\\u23FF]/,\r\n  /[\\u2500-\\u2775]/,\r\n  /[\\u2794-\\u2BFF]/,\r\n  /[\\u2E00-\\u2E7F]/,\r\n  /[\\u3001-\\u3003]/,\r\n  /[\\u3008-\\u3020]/,\r\n  /[\\u3030]/\r\n);\r\n\r\n// Valid characters for operators.\r\nconst operatorCharacter = either(\r\n  operatorHead,\r\n  /[\\u0300-\\u036F]/,\r\n  /[\\u1DC0-\\u1DFF]/,\r\n  /[\\u20D0-\\u20FF]/,\r\n  /[\\uFE00-\\uFE0F]/,\r\n  /[\\uFE20-\\uFE2F]/\r\n  // TODO: The following characters are also allowed, but the regex isn't supported yet.\r\n  // /[\\u{E0100}-\\u{E01EF}]/u\r\n);\r\n\r\n// Valid operator.\r\nconst operator = concat(operatorHead, operatorCharacter, '*');\r\n\r\n// Valid first characters for identifiers.\r\nconst identifierHead = either(\r\n  /[a-zA-Z_]/,\r\n  /[\\u00A8\\u00AA\\u00AD\\u00AF\\u00B2-\\u00B5\\u00B7-\\u00BA]/,\r\n  /[\\u00BC-\\u00BE\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF]/,\r\n  /[\\u0100-\\u02FF\\u0370-\\u167F\\u1681-\\u180D\\u180F-\\u1DBF]/,\r\n  /[\\u1E00-\\u1FFF]/,\r\n  /[\\u200B-\\u200D\\u202A-\\u202E\\u203F-\\u2040\\u2054\\u2060-\\u206F]/,\r\n  /[\\u2070-\\u20CF\\u2100-\\u218F\\u2460-\\u24FF\\u2776-\\u2793]/,\r\n  /[\\u2C00-\\u2DFF\\u2E80-\\u2FFF]/,\r\n  /[\\u3004-\\u3007\\u3021-\\u302F\\u3031-\\u303F\\u3040-\\uD7FF]/,\r\n  /[\\uF900-\\uFD3D\\uFD40-\\uFDCF\\uFDF0-\\uFE1F\\uFE30-\\uFE44]/,\r\n  /[\\uFE47-\\uFEFE\\uFF00-\\uFFFD]/ // Should be /[\\uFE47-\\uFFFD]/, but we have to exclude FEFF.\r\n  // The following characters are also allowed, but the regexes aren't supported yet.\r\n  // /[\\u{10000}-\\u{1FFFD}\\u{20000-\\u{2FFFD}\\u{30000}-\\u{3FFFD}\\u{40000}-\\u{4FFFD}]/u,\r\n  // /[\\u{50000}-\\u{5FFFD}\\u{60000-\\u{6FFFD}\\u{70000}-\\u{7FFFD}\\u{80000}-\\u{8FFFD}]/u,\r\n  // /[\\u{90000}-\\u{9FFFD}\\u{A0000-\\u{AFFFD}\\u{B0000}-\\u{BFFFD}\\u{C0000}-\\u{CFFFD}]/u,\r\n  // /[\\u{D0000}-\\u{DFFFD}\\u{E0000-\\u{EFFFD}]/u\r\n);\r\n\r\n// Valid characters for identifiers.\r\nconst identifierCharacter = either(\r\n  identifierHead,\r\n  /\\d/,\r\n  /[\\u0300-\\u036F\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE20-\\uFE2F]/\r\n);\r\n\r\n// Valid identifier.\r\nconst identifier = concat(identifierHead, identifierCharacter, '*');\r\n\r\n// Valid type identifier.\r\nconst typeIdentifier = concat(/[A-Z]/, identifierCharacter, '*');\r\n\r\n// Built-in attributes, which are highlighted as keywords.\r\n// @available is handled separately.\r\nconst keywordAttributes = [\r\n  'autoclosure',\r\n  concat(/convention\\(/, either('swift', 'block', 'c'), /\\)/),\r\n  'discardableResult',\r\n  'dynamicCallable',\r\n  'dynamicMemberLookup',\r\n  'escaping',\r\n  'frozen',\r\n  'GKInspectable',\r\n  'IBAction',\r\n  'IBDesignable',\r\n  'IBInspectable',\r\n  'IBOutlet',\r\n  'IBSegueAction',\r\n  'inlinable',\r\n  'main',\r\n  'nonobjc',\r\n  'NSApplicationMain',\r\n  'NSCopying',\r\n  'NSManaged',\r\n  concat(/objc\\(/, identifier, /\\)/),\r\n  'objc',\r\n  'objcMembers',\r\n  'propertyWrapper',\r\n  'requires_stored_property_inits',\r\n  'resultBuilder',\r\n  'testable',\r\n  'UIApplicationMain',\r\n  'unknown',\r\n  'usableFromInline'\r\n];\r\n\r\n// Contextual keywords used in @available and #(un)available.\r\nconst availabilityKeywords = [\r\n  'iOS',\r\n  'iOSApplicationExtension',\r\n  'macOS',\r\n  'macOSApplicationExtension',\r\n  'macCatalyst',\r\n  'macCatalystApplicationExtension',\r\n  'watchOS',\r\n  'watchOSApplicationExtension',\r\n  'tvOS',\r\n  'tvOSApplicationExtension',\r\n  'swift'\r\n];\r\n\r\n/*\r\nLanguage: Swift\r\nDescription: Swift is a general-purpose programming language built using a modern approach to safety, performance, and software design patterns.\r\nAuthor: Steven Van Impe <steven.vanimpe@icloud.com>\r\nContributors: Chris Eidhof <chris@eidhof.nl>, Nate Cook <natecook@gmail.com>, Alexander Lichter <manniL@gmx.net>, Richard Gibson <gibson042@github>\r\nWebsite: https://swift.org\r\nCategory: common, system\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction swift(hljs) {\r\n  const WHITESPACE = {\r\n    match: /\\s+/,\r\n    relevance: 0\r\n  };\r\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#ID411\r\n  const BLOCK_COMMENT = hljs.COMMENT(\r\n    '/\\\\*',\r\n    '\\\\*/',\r\n    { contains: [ 'self' ] }\r\n  );\r\n  const COMMENTS = [\r\n    hljs.C_LINE_COMMENT_MODE,\r\n    BLOCK_COMMENT\r\n  ];\r\n\r\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#ID413\r\n  // https://docs.swift.org/swift-book/ReferenceManual/zzSummaryOfTheGrammar.html\r\n  const DOT_KEYWORD = {\r\n    match: [\r\n      /\\./,\r\n      either(...dotKeywords, ...optionalDotKeywords)\r\n    ],\r\n    className: { 2: \"keyword\" }\r\n  };\r\n  const KEYWORD_GUARD = {\r\n    // Consume .keyword to prevent highlighting properties and methods as keywords.\r\n    match: concat(/\\./, either(...keywords)),\r\n    relevance: 0\r\n  };\r\n  const PLAIN_KEYWORDS = keywords\r\n    .filter(kw => typeof kw === 'string')\r\n    .concat([ \"_|0\" ]); // seems common, so 0 relevance\r\n  const REGEX_KEYWORDS = keywords\r\n    .filter(kw => typeof kw !== 'string') // find regex\r\n    .concat(keywordTypes)\r\n    .map(keywordWrapper);\r\n  const KEYWORD = { variants: [\r\n    {\r\n      className: 'keyword',\r\n      match: either(...REGEX_KEYWORDS, ...optionalDotKeywords)\r\n    }\r\n  ] };\r\n  // find all the regular keywords\r\n  const KEYWORDS = {\r\n    $pattern: either(\r\n      /\\b\\w+/, // regular keywords\r\n      /#\\w+/ // number keywords\r\n    ),\r\n    keyword: PLAIN_KEYWORDS\r\n      .concat(numberSignKeywords),\r\n    literal: literals\r\n  };\r\n  const KEYWORD_MODES = [\r\n    DOT_KEYWORD,\r\n    KEYWORD_GUARD,\r\n    KEYWORD\r\n  ];\r\n\r\n  // https://github.com/apple/swift/tree/main/stdlib/public/core\r\n  const BUILT_IN_GUARD = {\r\n    // Consume .built_in to prevent highlighting properties and methods.\r\n    match: concat(/\\./, either(...builtIns)),\r\n    relevance: 0\r\n  };\r\n  const BUILT_IN = {\r\n    className: 'built_in',\r\n    match: concat(/\\b/, either(...builtIns), /(?=\\()/)\r\n  };\r\n  const BUILT_INS = [\r\n    BUILT_IN_GUARD,\r\n    BUILT_IN\r\n  ];\r\n\r\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#ID418\r\n  const OPERATOR_GUARD = {\r\n    // Prevent -> from being highlighting as an operator.\r\n    match: /->/,\r\n    relevance: 0\r\n  };\r\n  const OPERATOR = {\r\n    className: 'operator',\r\n    relevance: 0,\r\n    variants: [\r\n      { match: operator },\r\n      {\r\n        // dot-operator: only operators that start with a dot are allowed to use dots as\r\n        // characters (..., ...<, .*, etc). So there rule here is: a dot followed by one or more\r\n        // characters that may also include dots.\r\n        match: `\\\\.(\\\\.|${operatorCharacter})+` }\r\n    ]\r\n  };\r\n  const OPERATORS = [\r\n    OPERATOR_GUARD,\r\n    OPERATOR\r\n  ];\r\n\r\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#grammar_numeric-literal\r\n  // TODO: Update for leading `-` after lookbehind is supported everywhere\r\n  const decimalDigits = '([0-9]_*)+';\r\n  const hexDigits = '([0-9a-fA-F]_*)+';\r\n  const NUMBER = {\r\n    className: 'number',\r\n    relevance: 0,\r\n    variants: [\r\n      // decimal floating-point-literal (subsumes decimal-literal)\r\n      { match: `\\\\b(${decimalDigits})(\\\\.(${decimalDigits}))?` + `([eE][+-]?(${decimalDigits}))?\\\\b` },\r\n      // hexadecimal floating-point-literal (subsumes hexadecimal-literal)\r\n      { match: `\\\\b0x(${hexDigits})(\\\\.(${hexDigits}))?` + `([pP][+-]?(${decimalDigits}))?\\\\b` },\r\n      // octal-literal\r\n      { match: /\\b0o([0-7]_*)+\\b/ },\r\n      // binary-literal\r\n      { match: /\\b0b([01]_*)+\\b/ }\r\n    ]\r\n  };\r\n\r\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#grammar_string-literal\r\n  const ESCAPED_CHARACTER = (rawDelimiter = \"\") => ({\r\n    className: 'subst',\r\n    variants: [\r\n      { match: concat(/\\\\/, rawDelimiter, /[0\\\\tnr\"']/) },\r\n      { match: concat(/\\\\/, rawDelimiter, /u\\{[0-9a-fA-F]{1,8}\\}/) }\r\n    ]\r\n  });\r\n  const ESCAPED_NEWLINE = (rawDelimiter = \"\") => ({\r\n    className: 'subst',\r\n    match: concat(/\\\\/, rawDelimiter, /[\\t ]*(?:[\\r\\n]|\\r\\n)/)\r\n  });\r\n  const INTERPOLATION = (rawDelimiter = \"\") => ({\r\n    className: 'subst',\r\n    label: \"interpol\",\r\n    begin: concat(/\\\\/, rawDelimiter, /\\(/),\r\n    end: /\\)/\r\n  });\r\n  const MULTILINE_STRING = (rawDelimiter = \"\") => ({\r\n    begin: concat(rawDelimiter, /\"\"\"/),\r\n    end: concat(/\"\"\"/, rawDelimiter),\r\n    contains: [\r\n      ESCAPED_CHARACTER(rawDelimiter),\r\n      ESCAPED_NEWLINE(rawDelimiter),\r\n      INTERPOLATION(rawDelimiter)\r\n    ]\r\n  });\r\n  const SINGLE_LINE_STRING = (rawDelimiter = \"\") => ({\r\n    begin: concat(rawDelimiter, /\"/),\r\n    end: concat(/\"/, rawDelimiter),\r\n    contains: [\r\n      ESCAPED_CHARACTER(rawDelimiter),\r\n      INTERPOLATION(rawDelimiter)\r\n    ]\r\n  });\r\n  const STRING = {\r\n    className: 'string',\r\n    variants: [\r\n      MULTILINE_STRING(),\r\n      MULTILINE_STRING(\"#\"),\r\n      MULTILINE_STRING(\"##\"),\r\n      MULTILINE_STRING(\"###\"),\r\n      SINGLE_LINE_STRING(),\r\n      SINGLE_LINE_STRING(\"#\"),\r\n      SINGLE_LINE_STRING(\"##\"),\r\n      SINGLE_LINE_STRING(\"###\")\r\n    ]\r\n  };\r\n\r\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#ID412\r\n  const QUOTED_IDENTIFIER = { match: concat(/`/, identifier, /`/) };\r\n  const IMPLICIT_PARAMETER = {\r\n    className: 'variable',\r\n    match: /\\$\\d+/\r\n  };\r\n  const PROPERTY_WRAPPER_PROJECTION = {\r\n    className: 'variable',\r\n    match: `\\\\$${identifierCharacter}+`\r\n  };\r\n  const IDENTIFIERS = [\r\n    QUOTED_IDENTIFIER,\r\n    IMPLICIT_PARAMETER,\r\n    PROPERTY_WRAPPER_PROJECTION\r\n  ];\r\n\r\n  // https://docs.swift.org/swift-book/ReferenceManual/Attributes.html\r\n  const AVAILABLE_ATTRIBUTE = {\r\n    match: /(@|#(un)?)available/,\r\n    className: \"keyword\",\r\n    starts: { contains: [\r\n      {\r\n        begin: /\\(/,\r\n        end: /\\)/,\r\n        keywords: availabilityKeywords,\r\n        contains: [\r\n          ...OPERATORS,\r\n          NUMBER,\r\n          STRING\r\n        ]\r\n      }\r\n    ] }\r\n  };\r\n  const KEYWORD_ATTRIBUTE = {\r\n    className: 'keyword',\r\n    match: concat(/@/, either(...keywordAttributes))\r\n  };\r\n  const USER_DEFINED_ATTRIBUTE = {\r\n    className: 'meta',\r\n    match: concat(/@/, identifier)\r\n  };\r\n  const ATTRIBUTES = [\r\n    AVAILABLE_ATTRIBUTE,\r\n    KEYWORD_ATTRIBUTE,\r\n    USER_DEFINED_ATTRIBUTE\r\n  ];\r\n\r\n  // https://docs.swift.org/swift-book/ReferenceManual/Types.html\r\n  const TYPE = {\r\n    match: lookahead(/\\b[A-Z]/),\r\n    relevance: 0,\r\n    contains: [\r\n      { // Common Apple frameworks, for relevance boost\r\n        className: 'type',\r\n        match: concat(/(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)/, identifierCharacter, '+')\r\n      },\r\n      { // Type identifier\r\n        className: 'type',\r\n        match: typeIdentifier,\r\n        relevance: 0\r\n      },\r\n      { // Optional type\r\n        match: /[?!]+/,\r\n        relevance: 0\r\n      },\r\n      { // Variadic parameter\r\n        match: /\\.\\.\\./,\r\n        relevance: 0\r\n      },\r\n      { // Protocol composition\r\n        match: concat(/\\s+&\\s+/, lookahead(typeIdentifier)),\r\n        relevance: 0\r\n      }\r\n    ]\r\n  };\r\n  const GENERIC_ARGUMENTS = {\r\n    begin: /</,\r\n    end: />/,\r\n    keywords: KEYWORDS,\r\n    contains: [\r\n      ...COMMENTS,\r\n      ...KEYWORD_MODES,\r\n      ...ATTRIBUTES,\r\n      OPERATOR_GUARD,\r\n      TYPE\r\n    ]\r\n  };\r\n  TYPE.contains.push(GENERIC_ARGUMENTS);\r\n\r\n  // https://docs.swift.org/swift-book/ReferenceManual/Expressions.html#ID552\r\n  // Prevents element names from being highlighted as keywords.\r\n  const TUPLE_ELEMENT_NAME = {\r\n    match: concat(identifier, /\\s*:/),\r\n    keywords: \"_|0\",\r\n    relevance: 0\r\n  };\r\n  // Matches tuples as well as the parameter list of a function type.\r\n  const TUPLE = {\r\n    begin: /\\(/,\r\n    end: /\\)/,\r\n    relevance: 0,\r\n    keywords: KEYWORDS,\r\n    contains: [\r\n      'self',\r\n      TUPLE_ELEMENT_NAME,\r\n      ...COMMENTS,\r\n      ...KEYWORD_MODES,\r\n      ...BUILT_INS,\r\n      ...OPERATORS,\r\n      NUMBER,\r\n      STRING,\r\n      ...IDENTIFIERS,\r\n      ...ATTRIBUTES,\r\n      TYPE\r\n    ]\r\n  };\r\n\r\n  const GENERIC_PARAMETERS = {\r\n    begin: /</,\r\n    end: />/,\r\n    contains: [\r\n      ...COMMENTS,\r\n      TYPE\r\n    ]\r\n  };\r\n  const FUNCTION_PARAMETER_NAME = {\r\n    begin: either(\r\n      lookahead(concat(identifier, /\\s*:/)),\r\n      lookahead(concat(identifier, /\\s+/, identifier, /\\s*:/))\r\n    ),\r\n    end: /:/,\r\n    relevance: 0,\r\n    contains: [\r\n      {\r\n        className: 'keyword',\r\n        match: /\\b_\\b/\r\n      },\r\n      {\r\n        className: 'params',\r\n        match: identifier\r\n      }\r\n    ]\r\n  };\r\n  const FUNCTION_PARAMETERS = {\r\n    begin: /\\(/,\r\n    end: /\\)/,\r\n    keywords: KEYWORDS,\r\n    contains: [\r\n      FUNCTION_PARAMETER_NAME,\r\n      ...COMMENTS,\r\n      ...KEYWORD_MODES,\r\n      ...OPERATORS,\r\n      NUMBER,\r\n      STRING,\r\n      ...ATTRIBUTES,\r\n      TYPE,\r\n      TUPLE\r\n    ],\r\n    endsParent: true,\r\n    illegal: /[\"']/\r\n  };\r\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID362\r\n  const FUNCTION = {\r\n    match: [\r\n      /func/,\r\n      /\\s+/,\r\n      either(QUOTED_IDENTIFIER.match, identifier, operator)\r\n    ],\r\n    className: {\r\n      1: \"keyword\",\r\n      3: \"title.function\"\r\n    },\r\n    contains: [\r\n      GENERIC_PARAMETERS,\r\n      FUNCTION_PARAMETERS,\r\n      WHITESPACE\r\n    ],\r\n    illegal: [\r\n      /\\[/,\r\n      /%/\r\n    ]\r\n  };\r\n\r\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID375\r\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID379\r\n  const INIT_SUBSCRIPT = {\r\n    match: [\r\n      /\\b(?:subscript|init[?!]?)/,\r\n      /\\s*(?=[<(])/,\r\n    ],\r\n    className: { 1: \"keyword\" },\r\n    contains: [\r\n      GENERIC_PARAMETERS,\r\n      FUNCTION_PARAMETERS,\r\n      WHITESPACE\r\n    ],\r\n    illegal: /\\[|%/\r\n  };\r\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID380\r\n  const OPERATOR_DECLARATION = {\r\n    match: [\r\n      /operator/,\r\n      /\\s+/,\r\n      operator\r\n    ],\r\n    className: {\r\n      1: \"keyword\",\r\n      3: \"title\"\r\n    }\r\n  };\r\n\r\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID550\r\n  const PRECEDENCEGROUP = {\r\n    begin: [\r\n      /precedencegroup/,\r\n      /\\s+/,\r\n      typeIdentifier\r\n    ],\r\n    className: {\r\n      1: \"keyword\",\r\n      3: \"title\"\r\n    },\r\n    contains: [ TYPE ],\r\n    keywords: [\r\n      ...precedencegroupKeywords,\r\n      ...literals\r\n    ],\r\n    end: /}/\r\n  };\r\n\r\n  // Add supported submodes to string interpolation.\r\n  for (const variant of STRING.variants) {\r\n    const interpolation = variant.contains.find(mode => mode.label === \"interpol\");\r\n    // TODO: Interpolation can contain any expression, so there's room for improvement here.\r\n    interpolation.keywords = KEYWORDS;\r\n    const submodes = [\r\n      ...KEYWORD_MODES,\r\n      ...BUILT_INS,\r\n      ...OPERATORS,\r\n      NUMBER,\r\n      STRING,\r\n      ...IDENTIFIERS\r\n    ];\r\n    interpolation.contains = [\r\n      ...submodes,\r\n      {\r\n        begin: /\\(/,\r\n        end: /\\)/,\r\n        contains: [\r\n          'self',\r\n          ...submodes\r\n        ]\r\n      }\r\n    ];\r\n  }\r\n\r\n  return {\r\n    name: 'Swift',\r\n    keywords: KEYWORDS,\r\n    contains: [\r\n      ...COMMENTS,\r\n      FUNCTION,\r\n      INIT_SUBSCRIPT,\r\n      {\r\n        beginKeywords: 'struct protocol class extension enum actor',\r\n        end: '\\\\{',\r\n        excludeEnd: true,\r\n        keywords: KEYWORDS,\r\n        contains: [\r\n          hljs.inherit(hljs.TITLE_MODE, {\r\n            className: \"title.class\",\r\n            begin: /[A-Za-z$_][\\u00C0-\\u02B80-9A-Za-z$_]*/\r\n          }),\r\n          ...KEYWORD_MODES\r\n        ]\r\n      },\r\n      OPERATOR_DECLARATION,\r\n      PRECEDENCEGROUP,\r\n      {\r\n        beginKeywords: 'import',\r\n        end: /$/,\r\n        contains: [ ...COMMENTS ],\r\n        relevance: 0\r\n      },\r\n      ...KEYWORD_MODES,\r\n      ...BUILT_INS,\r\n      ...OPERATORS,\r\n      NUMBER,\r\n      STRING,\r\n      ...IDENTIFIERS,\r\n      ...ATTRIBUTES,\r\n      TYPE,\r\n      TUPLE\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = swift;\r\n", "/*\r\nLanguage: YAML\r\nDescription: Yet Another Markdown Language\r\nAuthor: Stefan Wienert <stwienert@gmail.com>\r\nContributors: Carl Baxter <carl@cbax.tech>\r\nRequires: ruby.js\r\nWebsite: https://yaml.org\r\nCategory: common, config\r\n*/\r\nfunction yaml(hljs) {\r\n  const LITERALS = 'true false yes no null';\r\n\r\n  // YAML spec allows non-reserved URI characters in tags.\r\n  const URI_CHARACTERS = '[\\\\w#;/?:@&=+$,.~*\\'()[\\\\]]+';\r\n\r\n  // Define keys as starting with a word character\r\n  // ...containing word chars, spaces, colons, forward-slashes, hyphens and periods\r\n  // ...and ending with a colon followed immediately by a space, tab or newline.\r\n  // The YAML spec allows for much more than this, but this covers most use-cases.\r\n  const KEY = {\r\n    className: 'attr',\r\n    variants: [\r\n      { begin: '\\\\w[\\\\w :\\\\/.-]*:(?=[ \\t]|$)' },\r\n      { // double quoted keys\r\n        begin: '\"\\\\w[\\\\w :\\\\/.-]*\":(?=[ \\t]|$)' },\r\n      { // single quoted keys\r\n        begin: '\\'\\\\w[\\\\w :\\\\/.-]*\\':(?=[ \\t]|$)' }\r\n    ]\r\n  };\r\n\r\n  const TEMPLATE_VARIABLES = {\r\n    className: 'template-variable',\r\n    variants: [\r\n      { // jinja templates Ansible\r\n        begin: /\\{\\{/,\r\n        end: /\\}\\}/\r\n      },\r\n      { // Ruby i18n\r\n        begin: /%\\{/,\r\n        end: /\\}/\r\n      }\r\n    ]\r\n  };\r\n  const STRING = {\r\n    className: 'string',\r\n    relevance: 0,\r\n    variants: [\r\n      {\r\n        begin: /'/,\r\n        end: /'/\r\n      },\r\n      {\r\n        begin: /\"/,\r\n        end: /\"/\r\n      },\r\n      { begin: /\\S+/ }\r\n    ],\r\n    contains: [\r\n      hljs.BACKSLASH_ESCAPE,\r\n      TEMPLATE_VARIABLES\r\n    ]\r\n  };\r\n\r\n  // Strings inside of value containers (objects) can't contain braces,\r\n  // brackets, or commas\r\n  const CONTAINER_STRING = hljs.inherit(STRING, { variants: [\r\n    {\r\n      begin: /'/,\r\n      end: /'/\r\n    },\r\n    {\r\n      begin: /\"/,\r\n      end: /\"/\r\n    },\r\n    { begin: /[^\\s,{}[\\]]+/ }\r\n  ] });\r\n\r\n  const DATE_RE = '[0-9]{4}(-[0-9][0-9]){0,2}';\r\n  const TIME_RE = '([Tt \\\\t][0-9][0-9]?(:[0-9][0-9]){2})?';\r\n  const FRACTION_RE = '(\\\\.[0-9]*)?';\r\n  const ZONE_RE = '([ \\\\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?';\r\n  const TIMESTAMP = {\r\n    className: 'number',\r\n    begin: '\\\\b' + DATE_RE + TIME_RE + FRACTION_RE + ZONE_RE + '\\\\b'\r\n  };\r\n\r\n  const VALUE_CONTAINER = {\r\n    end: ',',\r\n    endsWithParent: true,\r\n    excludeEnd: true,\r\n    keywords: LITERALS,\r\n    relevance: 0\r\n  };\r\n  const OBJECT = {\r\n    begin: /\\{/,\r\n    end: /\\}/,\r\n    contains: [ VALUE_CONTAINER ],\r\n    illegal: '\\\\n',\r\n    relevance: 0\r\n  };\r\n  const ARRAY = {\r\n    begin: '\\\\[',\r\n    end: '\\\\]',\r\n    contains: [ VALUE_CONTAINER ],\r\n    illegal: '\\\\n',\r\n    relevance: 0\r\n  };\r\n\r\n  const MODES = [\r\n    KEY,\r\n    {\r\n      className: 'meta',\r\n      begin: '^---\\\\s*$',\r\n      relevance: 10\r\n    },\r\n    { // multi line string\r\n      // Blocks start with a | or > followed by a newline\r\n      //\r\n      // Indentation of subsequent lines must be the same to\r\n      // be considered part of the block\r\n      className: 'string',\r\n      begin: '[\\\\|>]([1-9]?[+-])?[ ]*\\\\n( +)[^ ][^\\\\n]*\\\\n(\\\\2[^\\\\n]+\\\\n?)*'\r\n    },\r\n    { // Ruby/Rails erb\r\n      begin: '<%[%=-]?',\r\n      end: '[%-]?%>',\r\n      subLanguage: 'ruby',\r\n      excludeBegin: true,\r\n      excludeEnd: true,\r\n      relevance: 0\r\n    },\r\n    { // named tags\r\n      className: 'type',\r\n      begin: '!\\\\w+!' + URI_CHARACTERS\r\n    },\r\n    // https://yaml.org/spec/1.2/spec.html#id2784064\r\n    { // verbatim tags\r\n      className: 'type',\r\n      begin: '!<' + URI_CHARACTERS + \">\"\r\n    },\r\n    { // primary tags\r\n      className: 'type',\r\n      begin: '!' + URI_CHARACTERS\r\n    },\r\n    { // secondary tags\r\n      className: 'type',\r\n      begin: '!!' + URI_CHARACTERS\r\n    },\r\n    { // fragment id &ref\r\n      className: 'meta',\r\n      begin: '&' + hljs.UNDERSCORE_IDENT_RE + '$'\r\n    },\r\n    { // fragment reference *ref\r\n      className: 'meta',\r\n      begin: '\\\\*' + hljs.UNDERSCORE_IDENT_RE + '$'\r\n    },\r\n    { // array listing\r\n      className: 'bullet',\r\n      // TODO: remove |$ hack when we have proper look-ahead support\r\n      begin: '-(?=[ ]|$)',\r\n      relevance: 0\r\n    },\r\n    hljs.HASH_COMMENT_MODE,\r\n    {\r\n      beginKeywords: LITERALS,\r\n      keywords: { literal: LITERALS }\r\n    },\r\n    TIMESTAMP,\r\n    // numbers are any valid C-style number that\r\n    // sit isolated from other words\r\n    {\r\n      className: 'number',\r\n      begin: hljs.C_NUMBER_RE + '\\\\b',\r\n      relevance: 0\r\n    },\r\n    OBJECT,\r\n    ARRAY,\r\n    STRING\r\n  ];\r\n\r\n  const VALUE_MODES = [ ...MODES ];\r\n  VALUE_MODES.pop();\r\n  VALUE_MODES.push(CONTAINER_STRING);\r\n  VALUE_CONTAINER.contains = VALUE_MODES;\r\n\r\n  return {\r\n    name: 'YAML',\r\n    case_insensitive: true,\r\n    aliases: [ 'yml' ],\r\n    contains: MODES\r\n  };\r\n}\r\n\r\nmodule.exports = yaml;\r\n", "const IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\r\nconst KEYWORDS = [\r\n  \"as\", // for exports\r\n  \"in\",\r\n  \"of\",\r\n  \"if\",\r\n  \"for\",\r\n  \"while\",\r\n  \"finally\",\r\n  \"var\",\r\n  \"new\",\r\n  \"function\",\r\n  \"do\",\r\n  \"return\",\r\n  \"void\",\r\n  \"else\",\r\n  \"break\",\r\n  \"catch\",\r\n  \"instanceof\",\r\n  \"with\",\r\n  \"throw\",\r\n  \"case\",\r\n  \"default\",\r\n  \"try\",\r\n  \"switch\",\r\n  \"continue\",\r\n  \"typeof\",\r\n  \"delete\",\r\n  \"let\",\r\n  \"yield\",\r\n  \"const\",\r\n  \"class\",\r\n  // JS handles these with a special rule\r\n  // \"get\",\r\n  // \"set\",\r\n  \"debugger\",\r\n  \"async\",\r\n  \"await\",\r\n  \"static\",\r\n  \"import\",\r\n  \"from\",\r\n  \"export\",\r\n  \"extends\"\r\n];\r\nconst LITERALS = [\r\n  \"true\",\r\n  \"false\",\r\n  \"null\",\r\n  \"undefined\",\r\n  \"NaN\",\r\n  \"Infinity\"\r\n];\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\r\nconst TYPES = [\r\n  // Fundamental objects\r\n  \"Object\",\r\n  \"Function\",\r\n  \"Boolean\",\r\n  \"Symbol\",\r\n  // numbers and dates\r\n  \"Math\",\r\n  \"Date\",\r\n  \"Number\",\r\n  \"BigInt\",\r\n  // text\r\n  \"String\",\r\n  \"RegExp\",\r\n  // Indexed collections\r\n  \"Array\",\r\n  \"Float32Array\",\r\n  \"Float64Array\",\r\n  \"Int8Array\",\r\n  \"Uint8Array\",\r\n  \"Uint8ClampedArray\",\r\n  \"Int16Array\",\r\n  \"Int32Array\",\r\n  \"Uint16Array\",\r\n  \"Uint32Array\",\r\n  \"BigInt64Array\",\r\n  \"BigUint64Array\",\r\n  // Keyed collections\r\n  \"Set\",\r\n  \"Map\",\r\n  \"WeakSet\",\r\n  \"WeakMap\",\r\n  // Structured data\r\n  \"ArrayBuffer\",\r\n  \"SharedArrayBuffer\",\r\n  \"Atomics\",\r\n  \"DataView\",\r\n  \"JSON\",\r\n  // Control abstraction objects\r\n  \"Promise\",\r\n  \"Generator\",\r\n  \"GeneratorFunction\",\r\n  \"AsyncFunction\",\r\n  // Reflection\r\n  \"Reflect\",\r\n  \"Proxy\",\r\n  // Internationalization\r\n  \"Intl\",\r\n  // WebAssembly\r\n  \"WebAssembly\"\r\n];\r\n\r\nconst ERROR_TYPES = [\r\n  \"Error\",\r\n  \"EvalError\",\r\n  \"InternalError\",\r\n  \"RangeError\",\r\n  \"ReferenceError\",\r\n  \"SyntaxError\",\r\n  \"TypeError\",\r\n  \"URIError\"\r\n];\r\n\r\nconst BUILT_IN_GLOBALS = [\r\n  \"setInterval\",\r\n  \"setTimeout\",\r\n  \"clearInterval\",\r\n  \"clearTimeout\",\r\n\r\n  \"require\",\r\n  \"exports\",\r\n\r\n  \"eval\",\r\n  \"isFinite\",\r\n  \"isNaN\",\r\n  \"parseFloat\",\r\n  \"parseInt\",\r\n  \"decodeURI\",\r\n  \"decodeURIComponent\",\r\n  \"encodeURI\",\r\n  \"encodeURIComponent\",\r\n  \"escape\",\r\n  \"unescape\"\r\n];\r\n\r\nconst BUILT_IN_VARIABLES = [\r\n  \"arguments\",\r\n  \"this\",\r\n  \"super\",\r\n  \"console\",\r\n  \"window\",\r\n  \"document\",\r\n  \"localStorage\",\r\n  \"sessionStorage\",\r\n  \"module\",\r\n  \"global\" // Node.js\r\n];\r\n\r\nconst BUILT_INS = [].concat(\r\n  BUILT_IN_GLOBALS,\r\n  TYPES,\r\n  ERROR_TYPES\r\n);\r\n\r\n/*\r\nLanguage: JavaScript\r\nDescription: JavaScript (JS) is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions.\r\nCategory: common, scripting, web\r\nWebsite: https://developer.mozilla.org/en-US/docs/Web/JavaScript\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction javascript(hljs) {\r\n  const regex = hljs.regex;\r\n  /**\r\n   * Takes a string like \"<Booger\" and checks to see\r\n   * if we can find a matching \"</Booger\" later in the\r\n   * content.\r\n   * @param {RegExpMatchArray} match\r\n   * @param {{after:number}} param1\r\n   */\r\n  const hasClosingTag = (match, { after }) => {\r\n    const tag = \"</\" + match[0].slice(1);\r\n    const pos = match.input.indexOf(tag, after);\r\n    return pos !== -1;\r\n  };\r\n\r\n  const IDENT_RE$1 = IDENT_RE;\r\n  const FRAGMENT = {\r\n    begin: '<>',\r\n    end: '</>'\r\n  };\r\n  // to avoid some special cases inside isTrulyOpeningTag\r\n  const XML_SELF_CLOSING = /<[A-Za-z0-9\\\\._:-]+\\s*\\/>/;\r\n  const XML_TAG = {\r\n    begin: /<[A-Za-z0-9\\\\._:-]+/,\r\n    end: /\\/[A-Za-z0-9\\\\._:-]+>|\\/>/,\r\n    /**\r\n     * @param {RegExpMatchArray} match\r\n     * @param {CallbackResponse} response\r\n     */\r\n    isTrulyOpeningTag: (match, response) => {\r\n      const afterMatchIndex = match[0].length + match.index;\r\n      const nextChar = match.input[afterMatchIndex];\r\n      if (\r\n        // HTML should not include another raw `<` inside a tag\r\n        // nested type?\r\n        // `<Array<Array<number>>`, etc.\r\n        nextChar === \"<\" ||\r\n        // the , gives away that this is not HTML\r\n        // `<T, A extends keyof T, V>`\r\n        nextChar === \",\"\r\n        ) {\r\n        response.ignoreMatch();\r\n        return;\r\n      }\r\n\r\n      // `<something>`\r\n      // Quite possibly a tag, lets look for a matching closing tag...\r\n      if (nextChar === \">\") {\r\n        // if we cannot find a matching closing tag, then we\r\n        // will ignore it\r\n        if (!hasClosingTag(match, { after: afterMatchIndex })) {\r\n          response.ignoreMatch();\r\n        }\r\n      }\r\n\r\n      // `<blah />` (self-closing)\r\n      // handled by simpleSelfClosing rule\r\n\r\n      let m;\r\n      const afterMatch = match.input.substring(afterMatchIndex);\r\n\r\n      // some more template typing stuff\r\n      //  <T = any>(key?: string) => Modify<\r\n      if ((m = afterMatch.match(/^\\s*=/))) {\r\n        response.ignoreMatch();\r\n        return;\r\n      }\r\n\r\n      // `<From extends string>`\r\n      // technically this could be HTML, but it smells like a type\r\n      // NOTE: This is ugh, but added specifically for https://github.com/highlightjs/highlight.js/issues/3276\r\n      if ((m = afterMatch.match(/^\\s+extends\\s+/))) {\r\n        if (m.index === 0) {\r\n          response.ignoreMatch();\r\n          // eslint-disable-next-line no-useless-return\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const KEYWORDS$1 = {\r\n    $pattern: IDENT_RE,\r\n    keyword: KEYWORDS,\r\n    literal: LITERALS,\r\n    built_in: BUILT_INS,\r\n    \"variable.language\": BUILT_IN_VARIABLES\r\n  };\r\n\r\n  // https://tc39.es/ecma262/#sec-literals-numeric-literals\r\n  const decimalDigits = '[0-9](_?[0-9])*';\r\n  const frac = `\\\\.(${decimalDigits})`;\r\n  // DecimalIntegerLiteral, including Annex B NonOctalDecimalIntegerLiteral\r\n  // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\r\n  const decimalInteger = `0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*`;\r\n  const NUMBER = {\r\n    className: 'number',\r\n    variants: [\r\n      // DecimalLiteral\r\n      { begin: `(\\\\b(${decimalInteger})((${frac})|\\\\.)?|(${frac}))` +\r\n        `[eE][+-]?(${decimalDigits})\\\\b` },\r\n      { begin: `\\\\b(${decimalInteger})\\\\b((${frac})\\\\b|\\\\.)?|(${frac})\\\\b` },\r\n\r\n      // DecimalBigIntegerLiteral\r\n      { begin: `\\\\b(0|[1-9](_?[0-9])*)n\\\\b` },\r\n\r\n      // NonDecimalIntegerLiteral\r\n      { begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\b\" },\r\n      { begin: \"\\\\b0[bB][0-1](_?[0-1])*n?\\\\b\" },\r\n      { begin: \"\\\\b0[oO][0-7](_?[0-7])*n?\\\\b\" },\r\n\r\n      // LegacyOctalIntegerLiteral (does not include underscore separators)\r\n      // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\r\n      { begin: \"\\\\b0[0-7]+n?\\\\b\" },\r\n    ],\r\n    relevance: 0\r\n  };\r\n\r\n  const SUBST = {\r\n    className: 'subst',\r\n    begin: '\\\\$\\\\{',\r\n    end: '\\\\}',\r\n    keywords: KEYWORDS$1,\r\n    contains: [] // defined later\r\n  };\r\n  const HTML_TEMPLATE = {\r\n    begin: 'html`',\r\n    end: '',\r\n    starts: {\r\n      end: '`',\r\n      returnEnd: false,\r\n      contains: [\r\n        hljs.BACKSLASH_ESCAPE,\r\n        SUBST\r\n      ],\r\n      subLanguage: 'xml'\r\n    }\r\n  };\r\n  const CSS_TEMPLATE = {\r\n    begin: 'css`',\r\n    end: '',\r\n    starts: {\r\n      end: '`',\r\n      returnEnd: false,\r\n      contains: [\r\n        hljs.BACKSLASH_ESCAPE,\r\n        SUBST\r\n      ],\r\n      subLanguage: 'css'\r\n    }\r\n  };\r\n  const GRAPHQL_TEMPLATE = {\r\n    begin: 'gql`',\r\n    end: '',\r\n    starts: {\r\n      end: '`',\r\n      returnEnd: false,\r\n      contains: [\r\n        hljs.BACKSLASH_ESCAPE,\r\n        SUBST\r\n      ],\r\n      subLanguage: 'graphql'\r\n    }\r\n  };\r\n  const TEMPLATE_STRING = {\r\n    className: 'string',\r\n    begin: '`',\r\n    end: '`',\r\n    contains: [\r\n      hljs.BACKSLASH_ESCAPE,\r\n      SUBST\r\n    ]\r\n  };\r\n  const JSDOC_COMMENT = hljs.COMMENT(\r\n    /\\/\\*\\*(?!\\/)/,\r\n    '\\\\*/',\r\n    {\r\n      relevance: 0,\r\n      contains: [\r\n        {\r\n          begin: '(?=@[A-Za-z]+)',\r\n          relevance: 0,\r\n          contains: [\r\n            {\r\n              className: 'doctag',\r\n              begin: '@[A-Za-z]+'\r\n            },\r\n            {\r\n              className: 'type',\r\n              begin: '\\\\{',\r\n              end: '\\\\}',\r\n              excludeEnd: true,\r\n              excludeBegin: true,\r\n              relevance: 0\r\n            },\r\n            {\r\n              className: 'variable',\r\n              begin: IDENT_RE$1 + '(?=\\\\s*(-)|$)',\r\n              endsParent: true,\r\n              relevance: 0\r\n            },\r\n            // eat spaces (not newlines) so we can find\r\n            // types or variables\r\n            {\r\n              begin: /(?=[^\\n])\\s/,\r\n              relevance: 0\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  );\r\n  const COMMENT = {\r\n    className: \"comment\",\r\n    variants: [\r\n      JSDOC_COMMENT,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      hljs.C_LINE_COMMENT_MODE\r\n    ]\r\n  };\r\n  const SUBST_INTERNALS = [\r\n    hljs.APOS_STRING_MODE,\r\n    hljs.QUOTE_STRING_MODE,\r\n    HTML_TEMPLATE,\r\n    CSS_TEMPLATE,\r\n    GRAPHQL_TEMPLATE,\r\n    TEMPLATE_STRING,\r\n    // Skip numbers when they are part of a variable name\r\n    { match: /\\$\\d+/ },\r\n    NUMBER,\r\n    // This is intentional:\r\n    // See https://github.com/highlightjs/highlight.js/issues/3288\r\n    // hljs.REGEXP_MODE\r\n  ];\r\n  SUBST.contains = SUBST_INTERNALS\r\n    .concat({\r\n      // we need to pair up {} inside our subst to prevent\r\n      // it from ending too early by matching another }\r\n      begin: /\\{/,\r\n      end: /\\}/,\r\n      keywords: KEYWORDS$1,\r\n      contains: [\r\n        \"self\"\r\n      ].concat(SUBST_INTERNALS)\r\n    });\r\n  const SUBST_AND_COMMENTS = [].concat(COMMENT, SUBST.contains);\r\n  const PARAMS_CONTAINS = SUBST_AND_COMMENTS.concat([\r\n    // eat recursive parens in sub expressions\r\n    {\r\n      begin: /\\(/,\r\n      end: /\\)/,\r\n      keywords: KEYWORDS$1,\r\n      contains: [\"self\"].concat(SUBST_AND_COMMENTS)\r\n    }\r\n  ]);\r\n  const PARAMS = {\r\n    className: 'params',\r\n    begin: /\\(/,\r\n    end: /\\)/,\r\n    excludeBegin: true,\r\n    excludeEnd: true,\r\n    keywords: KEYWORDS$1,\r\n    contains: PARAMS_CONTAINS\r\n  };\r\n\r\n  // ES6 classes\r\n  const CLASS_OR_EXTENDS = {\r\n    variants: [\r\n      // class Car extends vehicle\r\n      {\r\n        match: [\r\n          /class/,\r\n          /\\s+/,\r\n          IDENT_RE$1,\r\n          /\\s+/,\r\n          /extends/,\r\n          /\\s+/,\r\n          regex.concat(IDENT_RE$1, \"(\", regex.concat(/\\./, IDENT_RE$1), \")*\")\r\n        ],\r\n        scope: {\r\n          1: \"keyword\",\r\n          3: \"title.class\",\r\n          5: \"keyword\",\r\n          7: \"title.class.inherited\"\r\n        }\r\n      },\r\n      // class Car\r\n      {\r\n        match: [\r\n          /class/,\r\n          /\\s+/,\r\n          IDENT_RE$1\r\n        ],\r\n        scope: {\r\n          1: \"keyword\",\r\n          3: \"title.class\"\r\n        }\r\n      },\r\n\r\n    ]\r\n  };\r\n\r\n  const CLASS_REFERENCE = {\r\n    relevance: 0,\r\n    match:\r\n    regex.either(\r\n      // Hard coded exceptions\r\n      /\\bJSON/,\r\n      // Float32Array, OutT\r\n      /\\b[A-Z][a-z]+([A-Z][a-z]*|\\d)*/,\r\n      // CSSFactory, CSSFactoryT\r\n      /\\b[A-Z]{2,}([A-Z][a-z]+|\\d)+([A-Z][a-z]*)*/,\r\n      // FPs, FPsT\r\n      /\\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\\d)*([A-Z][a-z]*)*/,\r\n      // P\r\n      // single letters are not highlighted\r\n      // BLAH\r\n      // this will be flagged as a UPPER_CASE_CONSTANT instead\r\n    ),\r\n    className: \"title.class\",\r\n    keywords: {\r\n      _: [\r\n        // se we still get relevance credit for JS library classes\r\n        ...TYPES,\r\n        ...ERROR_TYPES\r\n      ]\r\n    }\r\n  };\r\n\r\n  const USE_STRICT = {\r\n    label: \"use_strict\",\r\n    className: 'meta',\r\n    relevance: 10,\r\n    begin: /^\\s*['\"]use (strict|asm)['\"]/\r\n  };\r\n\r\n  const FUNCTION_DEFINITION = {\r\n    variants: [\r\n      {\r\n        match: [\r\n          /function/,\r\n          /\\s+/,\r\n          IDENT_RE$1,\r\n          /(?=\\s*\\()/\r\n        ]\r\n      },\r\n      // anonymous function\r\n      {\r\n        match: [\r\n          /function/,\r\n          /\\s*(?=\\()/\r\n        ]\r\n      }\r\n    ],\r\n    className: {\r\n      1: \"keyword\",\r\n      3: \"title.function\"\r\n    },\r\n    label: \"func.def\",\r\n    contains: [ PARAMS ],\r\n    illegal: /%/\r\n  };\r\n\r\n  const UPPER_CASE_CONSTANT = {\r\n    relevance: 0,\r\n    match: /\\b[A-Z][A-Z_0-9]+\\b/,\r\n    className: \"variable.constant\"\r\n  };\r\n\r\n  function noneOf(list) {\r\n    return regex.concat(\"(?!\", list.join(\"|\"), \")\");\r\n  }\r\n\r\n  const FUNCTION_CALL = {\r\n    match: regex.concat(\r\n      /\\b/,\r\n      noneOf([\r\n        ...BUILT_IN_GLOBALS,\r\n        \"super\",\r\n        \"import\"\r\n      ]),\r\n      IDENT_RE$1, regex.lookahead(/\\(/)),\r\n    className: \"title.function\",\r\n    relevance: 0\r\n  };\r\n\r\n  const PROPERTY_ACCESS = {\r\n    begin: regex.concat(/\\./, regex.lookahead(\r\n      regex.concat(IDENT_RE$1, /(?![0-9A-Za-z$_(])/)\r\n    )),\r\n    end: IDENT_RE$1,\r\n    excludeBegin: true,\r\n    keywords: \"prototype\",\r\n    className: \"property\",\r\n    relevance: 0\r\n  };\r\n\r\n  const GETTER_OR_SETTER = {\r\n    match: [\r\n      /get|set/,\r\n      /\\s+/,\r\n      IDENT_RE$1,\r\n      /(?=\\()/\r\n    ],\r\n    className: {\r\n      1: \"keyword\",\r\n      3: \"title.function\"\r\n    },\r\n    contains: [\r\n      { // eat to avoid empty params\r\n        begin: /\\(\\)/\r\n      },\r\n      PARAMS\r\n    ]\r\n  };\r\n\r\n  const FUNC_LEAD_IN_RE = '(\\\\(' +\r\n    '[^()]*(\\\\(' +\r\n    '[^()]*(\\\\(' +\r\n    '[^()]*' +\r\n    '\\\\)[^()]*)*' +\r\n    '\\\\)[^()]*)*' +\r\n    '\\\\)|' + hljs.UNDERSCORE_IDENT_RE + ')\\\\s*=>';\r\n\r\n  const FUNCTION_VARIABLE = {\r\n    match: [\r\n      /const|var|let/, /\\s+/,\r\n      IDENT_RE$1, /\\s*/,\r\n      /=\\s*/,\r\n      /(async\\s*)?/, // async is optional\r\n      regex.lookahead(FUNC_LEAD_IN_RE)\r\n    ],\r\n    keywords: \"async\",\r\n    className: {\r\n      1: \"keyword\",\r\n      3: \"title.function\"\r\n    },\r\n    contains: [\r\n      PARAMS\r\n    ]\r\n  };\r\n\r\n  return {\r\n    name: 'JavaScript',\r\n    aliases: ['js', 'jsx', 'mjs', 'cjs'],\r\n    keywords: KEYWORDS$1,\r\n    // this will be extended by TypeScript\r\n    exports: { PARAMS_CONTAINS, CLASS_REFERENCE },\r\n    illegal: /#(?![$_A-z])/,\r\n    contains: [\r\n      hljs.SHEBANG({\r\n        label: \"shebang\",\r\n        binary: \"node\",\r\n        relevance: 5\r\n      }),\r\n      USE_STRICT,\r\n      hljs.APOS_STRING_MODE,\r\n      hljs.QUOTE_STRING_MODE,\r\n      HTML_TEMPLATE,\r\n      CSS_TEMPLATE,\r\n      GRAPHQL_TEMPLATE,\r\n      TEMPLATE_STRING,\r\n      COMMENT,\r\n      // Skip numbers when they are part of a variable name\r\n      { match: /\\$\\d+/ },\r\n      NUMBER,\r\n      CLASS_REFERENCE,\r\n      {\r\n        className: 'attr',\r\n        begin: IDENT_RE$1 + regex.lookahead(':'),\r\n        relevance: 0\r\n      },\r\n      FUNCTION_VARIABLE,\r\n      { // \"value\" container\r\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\r\n        keywords: 'return throw case',\r\n        relevance: 0,\r\n        contains: [\r\n          COMMENT,\r\n          hljs.REGEXP_MODE,\r\n          {\r\n            className: 'function',\r\n            // we have to count the parens to make sure we actually have the\r\n            // correct bounding ( ) before the =>.  There could be any number of\r\n            // sub-expressions inside also surrounded by parens.\r\n            begin: FUNC_LEAD_IN_RE,\r\n            returnBegin: true,\r\n            end: '\\\\s*=>',\r\n            contains: [\r\n              {\r\n                className: 'params',\r\n                variants: [\r\n                  {\r\n                    begin: hljs.UNDERSCORE_IDENT_RE,\r\n                    relevance: 0\r\n                  },\r\n                  {\r\n                    className: null,\r\n                    begin: /\\(\\s*\\)/,\r\n                    skip: true\r\n                  },\r\n                  {\r\n                    begin: /\\(/,\r\n                    end: /\\)/,\r\n                    excludeBegin: true,\r\n                    excludeEnd: true,\r\n                    keywords: KEYWORDS$1,\r\n                    contains: PARAMS_CONTAINS\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          { // could be a comma delimited list of params to a function call\r\n            begin: /,/,\r\n            relevance: 0\r\n          },\r\n          {\r\n            match: /\\s+/,\r\n            relevance: 0\r\n          },\r\n          { // JSX\r\n            variants: [\r\n              { begin: FRAGMENT.begin, end: FRAGMENT.end },\r\n              { match: XML_SELF_CLOSING },\r\n              {\r\n                begin: XML_TAG.begin,\r\n                // we carefully check the opening tag to see if it truly\r\n                // is a tag and not a false positive\r\n                'on:begin': XML_TAG.isTrulyOpeningTag,\r\n                end: XML_TAG.end\r\n              }\r\n            ],\r\n            subLanguage: 'xml',\r\n            contains: [\r\n              {\r\n                begin: XML_TAG.begin,\r\n                end: XML_TAG.end,\r\n                skip: true,\r\n                contains: ['self']\r\n              }\r\n            ]\r\n          }\r\n        ],\r\n      },\r\n      FUNCTION_DEFINITION,\r\n      {\r\n        // prevent this from getting swallowed up by function\r\n        // since they appear \"function like\"\r\n        beginKeywords: \"while if switch catch for\"\r\n      },\r\n      {\r\n        // we have to count the parens to make sure we actually have the correct\r\n        // bounding ( ).  There could be any number of sub-expressions inside\r\n        // also surrounded by parens.\r\n        begin: '\\\\b(?!function)' + hljs.UNDERSCORE_IDENT_RE +\r\n          '\\\\(' + // first parens\r\n          '[^()]*(\\\\(' +\r\n            '[^()]*(\\\\(' +\r\n              '[^()]*' +\r\n            '\\\\)[^()]*)*' +\r\n          '\\\\)[^()]*)*' +\r\n          '\\\\)\\\\s*\\\\{', // end parens\r\n        returnBegin:true,\r\n        label: \"func.def\",\r\n        contains: [\r\n          PARAMS,\r\n          hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE$1, className: \"title.function\" })\r\n        ]\r\n      },\r\n      // catch ... so it won't trigger the property rule below\r\n      {\r\n        match: /\\.\\.\\./,\r\n        relevance: 0\r\n      },\r\n      PROPERTY_ACCESS,\r\n      // hack: prevents detection of keywords in some circumstances\r\n      // .keyword()\r\n      // $keyword = x\r\n      {\r\n        match: '\\\\$' + IDENT_RE$1,\r\n        relevance: 0\r\n      },\r\n      {\r\n        match: [ /\\bconstructor(?=\\s*\\()/ ],\r\n        className: { 1: \"title.function\" },\r\n        contains: [ PARAMS ]\r\n      },\r\n      FUNCTION_CALL,\r\n      UPPER_CASE_CONSTANT,\r\n      CLASS_OR_EXTENDS,\r\n      GETTER_OR_SETTER,\r\n      {\r\n        match: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\n/*\r\nLanguage: TypeScript\r\nAuthor: Panu Horsmalahti <panu.horsmalahti@iki.fi>\r\nContributors: Ike Ku <dempfi@yahoo.com>\r\nDescription: TypeScript is a strict superset of JavaScript\r\nWebsite: https://www.typescriptlang.org\r\nCategory: common, scripting\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction typescript(hljs) {\r\n  const tsLanguage = javascript(hljs);\r\n\r\n  const IDENT_RE$1 = IDENT_RE;\r\n  const TYPES = [\r\n    \"any\",\r\n    \"void\",\r\n    \"number\",\r\n    \"boolean\",\r\n    \"string\",\r\n    \"object\",\r\n    \"never\",\r\n    \"symbol\",\r\n    \"bigint\",\r\n    \"unknown\"\r\n  ];\r\n  const NAMESPACE = {\r\n    beginKeywords: 'namespace',\r\n    end: /\\{/,\r\n    excludeEnd: true,\r\n    contains: [ tsLanguage.exports.CLASS_REFERENCE ]\r\n  };\r\n  const INTERFACE = {\r\n    beginKeywords: 'interface',\r\n    end: /\\{/,\r\n    excludeEnd: true,\r\n    keywords: {\r\n      keyword: 'interface extends',\r\n      built_in: TYPES\r\n    },\r\n    contains: [ tsLanguage.exports.CLASS_REFERENCE ]\r\n  };\r\n  const USE_STRICT = {\r\n    className: 'meta',\r\n    relevance: 10,\r\n    begin: /^\\s*['\"]use strict['\"]/\r\n  };\r\n  const TS_SPECIFIC_KEYWORDS = [\r\n    \"type\",\r\n    \"namespace\",\r\n    \"interface\",\r\n    \"public\",\r\n    \"private\",\r\n    \"protected\",\r\n    \"implements\",\r\n    \"declare\",\r\n    \"abstract\",\r\n    \"readonly\",\r\n    \"enum\",\r\n    \"override\"\r\n  ];\r\n  const KEYWORDS$1 = {\r\n    $pattern: IDENT_RE,\r\n    keyword: KEYWORDS.concat(TS_SPECIFIC_KEYWORDS),\r\n    literal: LITERALS,\r\n    built_in: BUILT_INS.concat(TYPES),\r\n    \"variable.language\": BUILT_IN_VARIABLES\r\n  };\r\n  const DECORATOR = {\r\n    className: 'meta',\r\n    begin: '@' + IDENT_RE$1,\r\n  };\r\n\r\n  const swapMode = (mode, label, replacement) => {\r\n    const indx = mode.contains.findIndex(m => m.label === label);\r\n    if (indx === -1) { throw new Error(\"can not find mode to replace\"); }\r\n\r\n    mode.contains.splice(indx, 1, replacement);\r\n  };\r\n\r\n\r\n  // this should update anywhere keywords is used since\r\n  // it will be the same actual JS object\r\n  Object.assign(tsLanguage.keywords, KEYWORDS$1);\r\n\r\n  tsLanguage.exports.PARAMS_CONTAINS.push(DECORATOR);\r\n  tsLanguage.contains = tsLanguage.contains.concat([\r\n    DECORATOR,\r\n    NAMESPACE,\r\n    INTERFACE,\r\n  ]);\r\n\r\n  // TS gets a simpler shebang rule than JS\r\n  swapMode(tsLanguage, \"shebang\", hljs.SHEBANG());\r\n  // JS use strict rule purposely excludes `asm` which makes no sense\r\n  swapMode(tsLanguage, \"use_strict\", USE_STRICT);\r\n\r\n  const functionDeclaration = tsLanguage.contains.find(m => m.label === \"func.def\");\r\n  functionDeclaration.relevance = 0; // () => {} is more typical in TypeScript\r\n\r\n  Object.assign(tsLanguage, {\r\n    name: 'TypeScript',\r\n    aliases: [\r\n      'ts',\r\n      'tsx',\r\n      'mts',\r\n      'cts'\r\n    ]\r\n  });\r\n\r\n  return tsLanguage;\r\n}\r\n\r\nmodule.exports = typescript;\r\n", "/*\r\nLanguage: Visual Basic .NET\r\nDescription: Visual Basic .NET (VB.NET) is a multi-paradigm, object-oriented programming language, implemented on the .NET Framework.\r\nAuthors: Poren Chiang <ren.chiang@gmail.com>, Jan Pilzer\r\nWebsite: https://docs.microsoft.com/dotnet/visual-basic/getting-started\r\nCategory: common\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction vbnet(hljs) {\r\n  const regex = hljs.regex;\r\n  /**\r\n   * Character Literal\r\n   * Either a single character (\"a\"C) or an escaped double quote (\"\"\"\"C).\r\n   */\r\n  const CHARACTER = {\r\n    className: 'string',\r\n    begin: /\"(\"\"|[^/n])\"C\\b/\r\n  };\r\n\r\n  const STRING = {\r\n    className: 'string',\r\n    begin: /\"/,\r\n    end: /\"/,\r\n    illegal: /\\n/,\r\n    contains: [\r\n      {\r\n        // double quote escape\r\n        begin: /\"\"/ }\r\n    ]\r\n  };\r\n\r\n  /** Date Literals consist of a date, a time, or both separated by whitespace, surrounded by # */\r\n  const MM_DD_YYYY = /\\d{1,2}\\/\\d{1,2}\\/\\d{4}/;\r\n  const YYYY_MM_DD = /\\d{4}-\\d{1,2}-\\d{1,2}/;\r\n  const TIME_12H = /(\\d|1[012])(:\\d+){0,2} *(AM|PM)/;\r\n  const TIME_24H = /\\d{1,2}(:\\d{1,2}){1,2}/;\r\n  const DATE = {\r\n    className: 'literal',\r\n    variants: [\r\n      {\r\n        // #YYYY-MM-DD# (ISO-Date) or #M/D/YYYY# (US-Date)\r\n        begin: regex.concat(/# */, regex.either(YYYY_MM_DD, MM_DD_YYYY), / *#/) },\r\n      {\r\n        // #H:mm[:ss]# (24h Time)\r\n        begin: regex.concat(/# */, TIME_24H, / *#/) },\r\n      {\r\n        // #h[:mm[:ss]] A# (12h Time)\r\n        begin: regex.concat(/# */, TIME_12H, / *#/) },\r\n      {\r\n        // date plus time\r\n        begin: regex.concat(\r\n          /# */,\r\n          regex.either(YYYY_MM_DD, MM_DD_YYYY),\r\n          / +/,\r\n          regex.either(TIME_12H, TIME_24H),\r\n          / *#/\r\n        ) }\r\n    ]\r\n  };\r\n\r\n  const NUMBER = {\r\n    className: 'number',\r\n    relevance: 0,\r\n    variants: [\r\n      {\r\n        // Float\r\n        begin: /\\b\\d[\\d_]*((\\.[\\d_]+(E[+-]?[\\d_]+)?)|(E[+-]?[\\d_]+))[RFD@!#]?/ },\r\n      {\r\n        // Integer (base 10)\r\n        begin: /\\b\\d[\\d_]*((U?[SIL])|[%&])?/ },\r\n      {\r\n        // Integer (base 16)\r\n        begin: /&H[\\dA-F_]+((U?[SIL])|[%&])?/ },\r\n      {\r\n        // Integer (base 8)\r\n        begin: /&O[0-7_]+((U?[SIL])|[%&])?/ },\r\n      {\r\n        // Integer (base 2)\r\n        begin: /&B[01_]+((U?[SIL])|[%&])?/ }\r\n    ]\r\n  };\r\n\r\n  const LABEL = {\r\n    className: 'label',\r\n    begin: /^\\w+:/\r\n  };\r\n\r\n  const DOC_COMMENT = hljs.COMMENT(/'''/, /$/, { contains: [\r\n    {\r\n      className: 'doctag',\r\n      begin: /<\\/?/,\r\n      end: />/\r\n    }\r\n  ] });\r\n\r\n  const COMMENT = hljs.COMMENT(null, /$/, { variants: [\r\n    { begin: /'/ },\r\n    {\r\n      // TODO: Use multi-class for leading spaces\r\n      begin: /([\\t ]|^)REM(?=\\s)/ }\r\n  ] });\r\n\r\n  const DIRECTIVES = {\r\n    className: 'meta',\r\n    // TODO: Use multi-class for indentation once available\r\n    begin: /[\\t ]*#(const|disable|else|elseif|enable|end|externalsource|if|region)\\b/,\r\n    end: /$/,\r\n    keywords: { keyword:\r\n        'const disable else elseif enable end externalsource if region then' },\r\n    contains: [ COMMENT ]\r\n  };\r\n\r\n  return {\r\n    name: 'Visual Basic .NET',\r\n    aliases: [ 'vb' ],\r\n    case_insensitive: true,\r\n    classNameAliases: { label: 'symbol' },\r\n    keywords: {\r\n      keyword:\r\n        'addhandler alias aggregate ansi as async assembly auto binary by byref byval ' /* a-b */\r\n        + 'call case catch class compare const continue custom declare default delegate dim distinct do ' /* c-d */\r\n        + 'each equals else elseif end enum erase error event exit explicit finally for friend from function ' /* e-f */\r\n        + 'get global goto group handles if implements imports in inherits interface into iterator ' /* g-i */\r\n        + 'join key let lib loop me mid module mustinherit mustoverride mybase myclass ' /* j-m */\r\n        + 'namespace narrowing new next notinheritable notoverridable ' /* n */\r\n        + 'of off on operator option optional order overloads overridable overrides ' /* o */\r\n        + 'paramarray partial preserve private property protected public ' /* p */\r\n        + 'raiseevent readonly redim removehandler resume return ' /* r */\r\n        + 'select set shadows shared skip static step stop structure strict sub synclock ' /* s */\r\n        + 'take text then throw to try unicode until using when where while widening with withevents writeonly yield' /* t-y */,\r\n      built_in:\r\n        // Operators https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators\r\n        'addressof and andalso await directcast gettype getxmlnamespace is isfalse isnot istrue like mod nameof new not or orelse trycast typeof xor '\r\n        // Type Conversion Functions https://docs.microsoft.com/dotnet/visual-basic/language-reference/functions/type-conversion-functions\r\n        + 'cbool cbyte cchar cdate cdbl cdec cint clng cobj csbyte cshort csng cstr cuint culng cushort',\r\n      type:\r\n        // Data types https://docs.microsoft.com/dotnet/visual-basic/language-reference/data-types\r\n        'boolean byte char date decimal double integer long object sbyte short single string uinteger ulong ushort',\r\n      literal: 'true false nothing'\r\n    },\r\n    illegal:\r\n      '//|\\\\{|\\\\}|endif|gosub|variant|wend|^\\\\$ ' /* reserved deprecated keywords */,\r\n    contains: [\r\n      CHARACTER,\r\n      STRING,\r\n      DATE,\r\n      NUMBER,\r\n      LABEL,\r\n      DOC_COMMENT,\r\n      COMMENT,\r\n      DIRECTIVES\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = vbnet;\r\n", "/*\r\nLanguage: WebAssembly\r\nWebsite: https://webassembly.org\r\nDescription:  Wasm is designed as a portable compilation target for programming languages, enabling deployment on the web for client and server applications.\r\nCategory: web, common\r\nAudit: 2020\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction wasm(hljs) {\r\n  hljs.regex;\r\n  const BLOCK_COMMENT = hljs.COMMENT(/\\(;/, /;\\)/);\r\n  BLOCK_COMMENT.contains.push(\"self\");\r\n  const LINE_COMMENT = hljs.COMMENT(/;;/, /$/);\r\n\r\n  const KWS = [\r\n    \"anyfunc\",\r\n    \"block\",\r\n    \"br\",\r\n    \"br_if\",\r\n    \"br_table\",\r\n    \"call\",\r\n    \"call_indirect\",\r\n    \"data\",\r\n    \"drop\",\r\n    \"elem\",\r\n    \"else\",\r\n    \"end\",\r\n    \"export\",\r\n    \"func\",\r\n    \"global.get\",\r\n    \"global.set\",\r\n    \"local.get\",\r\n    \"local.set\",\r\n    \"local.tee\",\r\n    \"get_global\",\r\n    \"get_local\",\r\n    \"global\",\r\n    \"if\",\r\n    \"import\",\r\n    \"local\",\r\n    \"loop\",\r\n    \"memory\",\r\n    \"memory.grow\",\r\n    \"memory.size\",\r\n    \"module\",\r\n    \"mut\",\r\n    \"nop\",\r\n    \"offset\",\r\n    \"param\",\r\n    \"result\",\r\n    \"return\",\r\n    \"select\",\r\n    \"set_global\",\r\n    \"set_local\",\r\n    \"start\",\r\n    \"table\",\r\n    \"tee_local\",\r\n    \"then\",\r\n    \"type\",\r\n    \"unreachable\"\r\n  ];\r\n\r\n  const FUNCTION_REFERENCE = {\r\n    begin: [\r\n      /(?:func|call|call_indirect)/,\r\n      /\\s+/,\r\n      /\\$[^\\s)]+/\r\n    ],\r\n    className: {\r\n      1: \"keyword\",\r\n      3: \"title.function\"\r\n    }\r\n  };\r\n\r\n  const ARGUMENT = {\r\n    className: \"variable\",\r\n    begin: /\\$[\\w_]+/\r\n  };\r\n\r\n  const PARENS = {\r\n    match: /(\\((?!;)|\\))+/,\r\n    className: \"punctuation\",\r\n    relevance: 0\r\n  };\r\n\r\n  const NUMBER = {\r\n    className: \"number\",\r\n    relevance: 0,\r\n    // borrowed from Prism, TODO: split out into variants\r\n    match: /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/\r\n  };\r\n\r\n  const TYPE = {\r\n    // look-ahead prevents us from gobbling up opcodes\r\n    match: /(i32|i64|f32|f64)(?!\\.)/,\r\n    className: \"type\"\r\n  };\r\n\r\n  const MATH_OPERATIONS = {\r\n    className: \"keyword\",\r\n    // borrowed from Prism, TODO: split out into variants\r\n    match: /\\b(f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))\\b/\r\n  };\r\n\r\n  const OFFSET_ALIGN = {\r\n    match: [\r\n      /(?:offset|align)/,\r\n      /\\s*/,\r\n      /=/\r\n    ],\r\n    className: {\r\n      1: \"keyword\",\r\n      3: \"operator\"\r\n    }\r\n  };\r\n\r\n  return {\r\n    name: 'WebAssembly',\r\n    keywords: {\r\n      $pattern: /[\\w.]+/,\r\n      keyword: KWS\r\n    },\r\n    contains: [\r\n      LINE_COMMENT,\r\n      BLOCK_COMMENT,\r\n      OFFSET_ALIGN,\r\n      ARGUMENT,\r\n      PARENS,\r\n      FUNCTION_REFERENCE,\r\n      hljs.QUOTE_STRING_MODE,\r\n      TYPE,\r\n      MATH_OPERATIONS,\r\n      NUMBER\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = wasm;\r\n", "var hljs = require('./core');\r\n\r\nhljs.registerLanguage('xml', require('./languages/xml'));\r\nhljs.registerLanguage('bash', require('./languages/bash'));\r\nhljs.registerLanguage('c', require('./languages/c'));\r\nhljs.registerLanguage('cpp', require('./languages/cpp'));\r\nhljs.registerLanguage('csharp', require('./languages/csharp'));\r\nhljs.registerLanguage('css', require('./languages/css'));\r\nhljs.registerLanguage('markdown', require('./languages/markdown'));\r\nhljs.registerLanguage('diff', require('./languages/diff'));\r\nhljs.registerLanguage('ruby', require('./languages/ruby'));\r\nhljs.registerLanguage('go', require('./languages/go'));\r\nhljs.registerLanguage('graphql', require('./languages/graphql'));\r\nhljs.registerLanguage('ini', require('./languages/ini'));\r\nhljs.registerLanguage('java', require('./languages/java'));\r\nhljs.registerLanguage('javascript', require('./languages/javascript'));\r\nhljs.registerLanguage('json', require('./languages/json'));\r\nhljs.registerLanguage('kotlin', require('./languages/kotlin'));\r\nhljs.registerLanguage('less', require('./languages/less'));\r\nhljs.registerLanguage('lua', require('./languages/lua'));\r\nhljs.registerLanguage('makefile', require('./languages/makefile'));\r\nhljs.registerLanguage('perl', require('./languages/perl'));\r\nhljs.registerLanguage('objectivec', require('./languages/objectivec'));\r\nhljs.registerLanguage('php', require('./languages/php'));\r\nhljs.registerLanguage('php-template', require('./languages/php-template'));\r\nhljs.registerLanguage('plaintext', require('./languages/plaintext'));\r\nhljs.registerLanguage('python', require('./languages/python'));\r\nhljs.registerLanguage('python-repl', require('./languages/python-repl'));\r\nhljs.registerLanguage('r', require('./languages/r'));\r\nhljs.registerLanguage('rust', require('./languages/rust'));\r\nhljs.registerLanguage('scss', require('./languages/scss'));\r\nhljs.registerLanguage('shell', require('./languages/shell'));\r\nhljs.registerLanguage('sql', require('./languages/sql'));\r\nhljs.registerLanguage('swift', require('./languages/swift'));\r\nhljs.registerLanguage('yaml', require('./languages/yaml'));\r\nhljs.registerLanguage('typescript', require('./languages/typescript'));\r\nhljs.registerLanguage('vbnet', require('./languages/vbnet'));\r\nhljs.registerLanguage('wasm', require('./languages/wasm'));\r\n\r\nhljs.HighlightJS = hljs\r\nhljs.default = hljs\r\nmodule.exports = hljs;", "// https://nodejs.org/api/packages.html#packages_writing_dual_packages_while_avoiding_or_minimizing_hazards\r\nimport HighlightJS from '../lib/common.js';\r\nexport { HighlightJS };\r\nexport default HighlightJS;\r\n"],
  "mappings": "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M,gBAAgB;AACtB,YAAM,QAAQ;AAAA,QACZ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,YAAM,MAAM;AAAA,QACV;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;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",
  "names": ["TYPES", "HighlightJS"]
}
